# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-journaling.txt:3
# 0c74f4cad28b4079bfceb83636894dbc
msgid "Manage Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:7
# 140256d1d0f943f3956965f4d9cc6fa7
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal. If MongoDB should terminate or encounter an error before it can write the changes from the journal to the data files, MongoDB can re-apply the write operation and maintain a consistent state."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:15
# 06b6212892cb4a2db114210335eacc6c
msgid "*Without* a journal, if :program:`mongod` exits unexpectedly, you must assume your data is in an inconsistent state, and you must run either :doc:`repair </tutorial/recover-data-following-unexpected-shutdown>` or, preferably, :doc:`resync </tutorial/resync-replica-set-member>` from a clean member of the replica set."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:21
# e0e463798d904ad0a0179e4c345cda3e
msgid "With journaling enabled, if :program:`mongod` stops unexpectedly, the program can recover everything written to the journal, and the data remains in a consistent state. By default, the greatest extent of lost writes, i.e., those not made to the journal, are those made in the last 100 milliseconds. See :setting:`~storage.journal.commitIntervalMs` for more information on the default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:28
# f95345bd2ab8468697a1a473751f3c40
msgid "With journaling, if you want a data set to reside entirely in RAM, you need enough RAM to hold the data set plus the \"write working set.\" The \"write working set\" is the amount of unique data you expect to see written between re-mappings of the private view. For information on views, see :ref:`journaling-storage-views`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:36
# 3a0124e2c9764d3d81705d356d843a4a
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default.  For other platforms, see :setting:`storage.journal.enabled`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:41
# c52dbade4377434aadab1fd0339b28f2
msgid "Procedures"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:44
# 5f33296eeb7e42269b6a63854f8f36c8
msgid "Enable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:46
# fa8c56d9bd524ad1ac4cfe954e5b29a4
msgid "For 64-bit builds of :program:`mongod`, journaling is enabled by default."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:49
# adf63a94bedf4d4aad5a40bdfc7440e4
msgid "To enable journaling, start :program:`mongod` with the :option:`--journal <mongod --journal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:52
# dbf29f099a1347a4809120929b6f8b4c
msgid "If no journal files exist, when :program:`mongod` starts, it must preallocate new journal files. During this operation, the :program:`mongod` is not listening for connections until preallocation completes: for some systems this may take a several minutes. During this period your applications and the :program:`mongo` shell are not available."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:60
# 55445ce5a3554c2a8cf81a9cbce1caff
msgid "Disable Journaling"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:64
# 07f86be2f63e440ab33925fcc147fc0f
msgid "Do not disable journaling on production systems. If your :program:`mongod` instance stops without shutting down cleanly unexpectedly for any reason, (e.g. power failure) and you are not running with journaling, then you must recover from an unaffected :term:`replica set` member or backup, as described in :doc:`repair  </tutorial/recover-data-following-unexpected-shutdown>`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:71
# 695ca43aeb1c4fd89e77394fdfcffe4b
msgid "To disable journaling, start :program:`mongod` with the :option:`--nojournal <mongod --nojournal>` command line option."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:75
# 39a5374e3acc4b5eaa98f7fd14bf291f
msgid "Get Commit Acknowledgment"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:77
# 319f4ba115b94fb78e844bd94ad245a1
msgid "You can get commit acknowledgment with the :dbcommand:`getLastError` command and the ``j`` option. For details, see :ref:`write-concern-operation`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:84
# f7ae7f53158a4cbc81134683a2eedbad
msgid "Avoid Preallocation Lag"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:86
# d43e9f910d104a48b350fd0479414b1f
msgid "To avoid :ref:`preallocation lag <journaling-journal-files>`, you can preallocate files in the journal directory by copying them from another instance of :program:`mongod`."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:90
# 22a59f09db0a4684bfa20765d45e60fc
msgid "Preallocated files do not contain data. It is safe to later remove them. But if you restart :program:`mongod` with journaling, :program:`mongod` will create them again."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:0
# 1c7f385ec6c942daacf1268e11602519
msgid "Example"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:98
# 3857888a6354457d9241f0cbe081d1d2
msgid "For demonstration purposes, the sequence starts by creating a set of journal files in the usual way."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:101
# 4df67da07fcb49e79deed02dcbeac014
msgid "Create a temporary directory into which to create a set of journal files:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:108
# ea899b33a7e94c9e8e2a190bb1147c7b
msgid "Create a set of journal files by staring a :program:`mongod` instance that uses the temporary directory:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:115
# 66d6ec14612f4e9d8ab494871a888f99
msgid "When you see the following log output, indicating :program:`mongod` has the files, press CONTROL+C to stop the :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:123
# f489f6c9da344a4898dfb183904f2e6a
msgid "Preallocate journal files for the new instance of :program:`mongod` by moving the journal files from the data directory of the existing instance to the data directory of the new instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:131
# 78a4149742ac4baabd7e0867adc0dd50
msgid "Start the new :program:`mongod` instance:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:138
# 91aba384edcb4cf98c21e5a1f1cb0618
msgid "Monitor Journal Status"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:140
# 4e37cde4f3d147aa80c9bb5f853ab9ac
msgid "Use the following commands and methods to monitor journal status:"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:142
# 368cf578d2ec4b139815c0e8a5a44eea
msgid ":dbcommand:`serverStatus`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:144
# 60bfbb4bd6d74e73a223028fa2378862
msgid "The :dbcommand:`serverStatus` command returns database status information that is useful for assessing performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:147
# 80302d91b5b549b2bf74587eb7cbbafb
msgid ":dbcommand:`journalLatencyTest`"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:149
# 6c0b5e53e9a3401abbeb72a64de2a3d4
msgid "Use :dbcommand:`journalLatencyTest` to measure how long it takes on your volume to write to the disk in an append-only fashion. You can run this command on an idle system to get a baseline sync time for journaling. You can also run this command on a busy system to see the sync time on a busy system, which may be higher if the journal directory is on the same volume as the data files."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:156
# 05c6a7b326c14d30896ee7f2dc5a4f7f
msgid "The :dbcommand:`journalLatencyTest` command also provides a way to check if your disk drive is buffering writes in its local cache. If the number is very low (i.e., less than 2 milliseconds) and the drive is non-SSD, the drive is probably buffering writes. In that case, enable cache write-through for the device in your operating system, unless you have a disk controller card with battery backed RAM."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:166
# a3862c0a809d478780cfcdedd5705260
msgid "Change the Group Commit Interval"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:170
# a77fba8dfffe45148c0dda6ba8d05d02
msgid "You can set the group commit interval using the :option:`--journalCommitInterval <mongod --journalCommitInterval>` command line option. The allowed range is ``2`` to ``300`` milliseconds."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:174
# bf5bbe7772a042d5ab7e07af071fa49b
msgid "Lower values increase the durability of the journal at the expense of disk performance."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:178
# d653563d37a94df286658be34ecc9cec
msgid "Recover Data After Unexpected Shutdown"
msgstr ""

#: ../source/tutorial/manage-journaling.txt:180
# b1f4f2aced504ce3a969b0413667a065
msgid "On a restart after a crash, MongoDB replays all journal files in the journal directory before the server becomes available. If MongoDB must replay journal files, :program:`mongod` notes these events in the log output."
msgstr ""

#: ../source/tutorial/manage-journaling.txt:185
# ee97acf6bc054351b9c3f48a9170c390
msgid "There is no reason to run :dbcommand:`repairDatabase` in these situations."
msgstr ""

