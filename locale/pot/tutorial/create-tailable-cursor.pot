# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/create-tailable-cursor.txt:3
# a9e76008c1f2443a8c9dacdb1125d380
msgid "Create Tailable Cursor"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:8
# 2ff181a850a7426899ac845555b0587b
msgid "Overview"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:10
# 6e70f185d6ef46ae929bf85efe3d4c5f
msgid "By default, MongoDB will automatically close a cursor when the client has exhausted all results in the cursor. However, for :doc:`capped collections </core/capped-collections>` you may use a *Tailable Cursor* that remains open after the client exhausts the results in the initial cursor. Tailable cursors are conceptually equivalent to the ``tail`` Unix command with the ``-f`` option (i.e. with \"follow\" mode.) After clients insert new additional documents into a capped collection, the tailable cursor will continue to retrieve documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:20
# 89e64f483baa47448d5d92c7dbc379db
msgid "Use tailable cursors on capped collections that have high write volumes where indexes aren't practical. For instance, MongoDB :doc:`replication </replication>` uses tailable cursors to tail the primary's :term:`oplog`."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:27
# e917068b25ec4e6da1ac9d2ca45a0db3
msgid "If your query is on an indexed field, do not use tailable cursors, but instead, use a regular cursor. Keep track of the last value of the indexed field returned by the query. To retrieve the newly added documents, query the collection again using the last value of the indexed field in the query criteria, as in the following example:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:38
# 080ada14852a4732999b6c2f16f21387
msgid "Consider the following behaviors related to tailable cursors:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:40
# 1d4619b9309e4389b9fdbdd3c64c105c
msgid "Tailable cursors do not use indexes and return documents in :term:`natural order`."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:43
# c9c727fe82534d2d9bc50cd2fa21bd8f
msgid "Because tailable cursors do not use indexes, the initial scan for the query may be expensive; but, after initially exhausting the cursor, subsequent retrievals of the newly added documents are inexpensive."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:47
# bf874302dca848ba9c0cf8b82394be17
msgid "Tailable cursors may become *dead*, or invalid, if either:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:49
# b5dbf1f5b0234bc8a33f6ece1ce4bc4b
msgid "the query returns no match."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:51
# f6f5e613606d4bc5b0ea8d861ad45771
msgid "the cursor returns the document at the \"end\" of the collection and then the application deletes those document."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:54
# c40a1c695f7f4554ad67ea62023677eb
msgid "A *dead* cursor has an id of ``0``."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:56
# 4271bd2c83314328b01df32df48d5fb3
msgid "See your :doc:`driver documentation </applications/drivers>` for the driver-specific method to specify the tailable cursor. For more information on the details of specifying a tailable cursor, see :meta-driver:`MongoDB wire protocol </legacy/mongodb-wire-protocol>` documentation."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:63
# 9707712f366e4c48986aadd9f3a1e8f6
msgid "C++ Example"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:65
# 35fe57fa4b8f4ff1b76aea9c24f145fe
msgid "The ``tail`` function uses a tailable cursor to output the results from a query to a capped collection:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:68
# fcedf02323634c4b81d765d83274807f
msgid "The function handles the case of the dead cursor by having the query be inside a loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:71
# 68db4485ebd4494b8b08f5fe4b7bfad2
msgid "To periodically check for new data, the ``cursor->more()`` statement is also inside a loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:117
# 98cd6a1f76d94a27b33d11304a6a2e1f
msgid "The ``tail`` function performs the following actions:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:119
# 918b07d384f441598785be05beae9f73
msgid "Initialize the ``lastValue`` variable, which tracks the last accessed value. The function will use the ``lastValue`` if the cursor becomes *invalid* and ``tail`` needs to restart the query. Use :method:`~cursor.hint()` to ensure that the query uses the :operator:`$natural` order."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:125
# 05a0c73f69314a01b99de832cc751e42
msgid "In an outer ``while(1)`` loop,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:127
# 0d5e6ca88661468eb967636ecb759049
msgid "Query the capped collection and return a tailable cursor that blocks for several seconds waiting for new documents"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:136
# 14e311f7a6e54b0ebbb78c2ddd02f009
msgid "Specify the capped collection using ``ns`` as an argument to the function."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:139
# a64bedeada9a45cc90735e87cb3ca7ee
msgid "Set the ``QueryOption_CursorTailable`` option to create a tailable cursor."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:142
# 6bd4cc6c47ab466ab70719d4f1779281
msgid "Set the ``QueryOption_AwaitData`` option so that the returned cursor blocks for a few seconds to wait for data."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:145
# 1906762395c94c8aad23a7c690a920fc
msgid "In an inner ``while (1)`` loop, read the documents from the cursor:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:147
# a44bd8c3870442f2849fdfb498d8e53d
msgid "If the cursor has no more documents and is not invalid, loop the inner ``while`` loop to recheck for more documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:150
# 171487a2fd1345199689175222a02667
msgid "If the cursor has no more documents and is dead, break the inner ``while`` loop."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:153
# cac38a9477cc402f86d8f8054e3dbdf5
msgid "If the cursor has documents:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:155
# 219ad819b1c541f9b619cbe75e6642e9
msgid "output the document,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:157
# 2069c1028e5543fba28f857a95ba3f92
msgid "update the ``lastValue`` value,"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:159
# f36359ab77d04bb690ac4ba9979ec31c
msgid "and loop the inner ``while (1)`` loop to recheck for more documents."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:162
# 31da9282803f4d979ac4ac1a8d3798f7
msgid "If the logic breaks out of the inner ``while (1)`` loop and the cursor is invalid:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:165
# 3e63192b3117494893593096d8d5e161
msgid "Use the ``lastValue`` value to create a new query condition that matches documents added after the ``lastValue``. Explicitly ensure ``$natural`` order with the ``hint()`` method:"
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:173
# 50c3ec34ec66409287d7d9d0304e90b1
msgid "Loop through the outer ``while (1)`` loop to re-query with the new query condition and repeat."
msgstr ""

#: ../source/tutorial/create-tailable-cursor.txt:176
# 4f2ddf29d48d4d30b5e45175eaccf15f
msgid "`Detailed blog post on tailable cursor <http://shtylman.com/post/the-tail-of-mongodb>`_"
msgstr ""

