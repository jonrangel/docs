# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/store-javascript-function-on-server.txt:3
# 1542f744f0d24f2ca40f6751aceeeeeb
msgid "Store a JavaScript Function on the Server"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:9
# 0da6dad3cde046a1981797a3b2ef69fe
msgid "We do **not** recommend using server-side stored functions if possible."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:12
# 3c9404efdd294f4e92300630d84fd177
msgid "There is a special system collection named ``system.js`` that can store JavaScript functions for reuse."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:15
# 84685065f3304ccd97c0383942150cd6
msgid "To store a function, you can use the :method:`db.collection.save()`, as in the following example:"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:27
# caad25bd1fe043488d01cce03c8278ee
msgid "The ``_id`` field holds the name of the function and is unique per database."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:30
# 9c0b35ce3b644f6d9f52d3a630978968
msgid "The ``value`` field holds the function definition"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:32
# fa4d6cfc816c41b89b5e8cdc455c6a0e
msgid "Once you save a function in the ``system.js`` collection, you can use the function from any JavaScript context (e.g. :dbcommand:`eval` command or the :program:`mongo` shell method :method:`db.eval()`, :query:`$where` operator, :dbcommand:`mapReduce` or :program:`mongo` shell method :method:`db.collection.mapReduce()`)."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:38
# 5b4b58ef143e4abebde7227f3a6ed7b9
msgid "Consider the following example from the :program:`mongo` shell that first saves a function named ``echoFunction`` to the ``system.js`` collection and calls the function using :method:`db.eval()` method:"
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:53
# 88aae56ce58c443cb10855e8a64b0c9e
msgid "See `<http://github.com/mongodb/mongo/tree/master/jstests/storefunc.js>`_ for a full example."
msgstr ""

#: ../source/tutorial/store-javascript-function-on-server.txt:55
# 430d444a87d94bfbb6b69ebd78fafda0
msgid "In the :program:`mongo` shell, you can use :method:`db.loadServerScripts()` to load all the scripts saved in the ``system.js`` collection for the current database. Once loaded, you can invoke the functions directly in the shell, as in the following example:"
msgstr ""

