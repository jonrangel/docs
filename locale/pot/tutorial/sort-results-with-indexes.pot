# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/sort-results-with-indexes.txt:6
# 09c6994b5c6f4114974fa82fcf02d1be
msgid "Use Indexes to Sort Query Results"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:10
# 6031d2d801934bc7b600561b4f1372d1
msgid "In MongoDB sort operations that sort documents based on an indexed field provide the greatest performance. Indexes in MongoDB, as in other databases, have an order: as a result, using an index to access documents returns in the same order as the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:15
# 41b6b375507e4ae3a851e47c5e6e1322
msgid "To sort on multiple fields, create a :ref:`compound index <index-type-compound>`. With compound indexes, the results can be in the sorted order of either the full index or an index prefix. An index prefix is a subset of a compound index; the subset consists of one or more fields at the start of the index, in order. For example, given an index ``{ a:1, b: 1, c: 1, d: 1 }``, the following subsets are index prefixes:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:29
# 6ba9c7902eb74e26bccf8cbb2bd01f22
msgid "For more information on sorting by index prefixes, see :ref:`sort-index-prefix`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:32
# fa153f07f2a34b0981c707325cc7bd44
msgid "If the query includes **equality** match conditions on an index prefix, you can sort on a subset of the index that starts after or overlaps with the prefix. For example, given an index ``{ a: 1, b: 1, c: 1, d: 1 }``, if the query condition includes equality match conditions on ``a`` and ``b``, you can specify a sort on the subsets ``{ c: 1 }`` or ``{ c: 1, d: 1 }``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:44
# 0089b391924d405fafe1d6f3715a6d5c
msgid "In these operations, the equality match and the sort documents together cover the index prefixes ``{ a: 1, b: 1, c: 1 }`` and ``{ a: 1, b: 1, c: 1, d: 1 }`` respectively."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:48
# d3e87373bd99497b9b890374ea4c74e4
msgid "You can also specify a sort order that includes the prefix; however, since the query condition specifies equality matches on these fields, they are constant in the resulting documents and do not contribute to the sort order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:58
# 51e63837a341416aa002f05d79ea648b
msgid "For more information on sorting by index subsets that are not prefixes, see :ref:`sort-equality-match`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:63
# c39385bd3d8a45d4830e55dc690be82a
msgid "For in-memory sorts that do not use an index, the :method:`sort() <cursor.sort()>` operation is significantly slower. The :method:`~cursor.sort()` operation will abort when it uses 32 megabytes of memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:69
# ecc835c598e94791ad58d44080abc49c
msgid "Sort With a Subset of Compound Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:71
# e33e798f5d414f8abf2fa33e564cb712
msgid "If the sort document contains a subset of the compound index fields, the subset can determine whether MongoDB can use the index efficiently to both retrieve and sort the query results. If MongoDB can efficiently use the index to both retrieve and sort the query results, the output from the :method:`~cursor.explain()` will display :data:`~explain.scanAndOrder` as ``false`` or ``0``. If MongoDB can only use the index for retrieving documents that meet the query criteria, MongoDB must manually sort the resulting documents without the use of the index. For in-memory sort operations, :method:`~cursor.explain()` will display :data:`~explain.scanAndOrder` as ``true`` or ``1``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:86
# 5d467727e26c4294bde7b9d958ebbf97
msgid "Sort Subset Starts at the Index Beginning"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:88
# 6147861561ab46dfb0c7d77d1713ccdf
msgid "If the sort document is a subset of a compound index and starts from the beginning of the index, MongoDB can use the index to both retrieve and sort the query results."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:92
#: ../source/tutorial/sort-results-with-indexes.txt:143
# 146a2ef2801142b4938bae9155cf3880
# d4a5f5e657c14c31bf01727ffd94040c
msgid "For example, the collection ``collection`` has the following index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:98
# ecb0b051791e4aa7b441a82a516c1a5e
msgid "The following operations include a sort with a subset of the index. Because the sort subset starts at beginning of the index, the operations can use the index for both the query retrieval and sort:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:114
# e7d93fbfb38445aa9d4f221f8cb77aff
msgid "The last two operations include query conditions on the field ``b`` but does not include a query condition on the field ``a``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:122
# e05aed0dd4a041a89179c663acc02dbf
msgid "Consider the case where the collection has the index ``{ b: 1 }`` in addition to the ``{ a: 1, b: 1, c: 1, d: 1 }`` index. Because of the query condition on ``b``, it is not immediately obvious which index MongoDB may select as the \"best\" index. To explicitly specify the index to use, see :method:`~cursor.hint()`."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:131
# 64faf56f2b034fe784edfcbea38cc10b
msgid "Sort Subset Does Not Start at the Index Beginning"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:133
# d7ebfcabb96445b9a27db891b39de0e3
msgid "The sort document can be a subset of a compound index that does **not** start from the beginning of the index. For instance, ``{ c: 1 }`` is a subset of the index ``{ a: 1, b: 1, c: 1, d: 1 }`` that omits the preceding index fields ``a`` and ``b``. MongoDB can use the index efficiently **if** the query document includes all the preceding fields of the index, in this case ``a`` and ``b``, in **equality** conditions. In other words, the equality conditions in the query document and the subset in the sort document **contiguously** cover a prefix of the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:149
# 83c5dbe564c743c98dd6ff503f1dd25d
msgid "Then following operations can use the index efficiently:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:156
# 2fa5fcba2c794c808152207c8ec87ddc
msgid "In the first operation, the query document ``{ a: 5 }`` with the sort document ``{ b: 1, c: 1 }`` cover the prefix ``{ a:1 , b: 1, c: 1 }`` of the index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:160
# 5d62bdc6892c4724950c1f9dd308346e
msgid "In the second operation, the query document ``{ a: 5, c: 4, b: 3 }`` with the sort document ``{ d: 1 }`` covers the full index."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:163
# c39c08754bed4c3f8f6feabe7b1c9192
msgid "Only the index fields preceding the sort subset must have the equality conditions in the query document. The other index fields may have other conditions. The following operations can efficiently use the index since the equality conditions in the query document and the subset in the sort document **contiguously** cover a prefix of the index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:174
# 686c189ce73c4b6698fbf5862936a2be
msgid "The following operations specify a sort document of ``{ c: 1 }``, but the query documents do not contain equality matches on the **preceding** index fields ``a`` and ``b``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:183
# 9344e84279114b06aa5cbc0a3249a28f
msgid "These operations **will not** efficiently use the index ``{ a: 1, b: 1, c: 1, d: 1 }`` and may not even use the index to retrieve the documents."
msgstr ""

