# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/getting-started.txt:3
# dc3086094b8349558b5d440d02101fe9
msgid "Getting Started with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:7
# 2dead9bb2193419c9bcf87580e387665
msgid "This tutorial provides an introduction to basic database operations using the :program:`mongo` shell. :program:`mongo` is a part of the standard MongoDB distribution and provides a full JavaScript environment with complete access to the JavaScript language and all standard functions as well as a full database interface for MongoDB. See the :api:`mongo JavaScript API <js>` documentation and the :program:`mongo` shell :doc:`JavaScript Method Reference </reference/method>`."
msgstr ""

#: ../source/tutorial/getting-started.txt:15
# 3cae5d367dcf4d10ab7e6d2ffbe412f3
msgid "The tutorial assumes that you're running MongoDB on a Linux or OS X operating system and that you have a running database server; MongoDB does support Windows and provides a Windows distribution with identical operation. For instructions on installing MongoDB and starting the database server, see the appropriate :doc:`installation </installation>` document."
msgstr ""

#: ../source/tutorial/getting-started.txt:23
# 24cf9daf7105417cb504e6b6ac482ce6
msgid "Connect to a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:25
# 0d474a5f1a664e8cb4b4b78c8c628dc1
msgid "In this section, you connect to the database server, which runs as :program:`mongod`, and begin using the :program:`mongo` shell to select a logical database within the database instance and access the help text in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/getting-started.txt:31
# 07da8057e8a84e71a0c1bb646a787ba9
msgid "Connect to a :program:`mongod`"
msgstr ""

#: ../source/tutorial/getting-started.txt:33
# 7620e8aa5787449aadd818fd5c27671c
msgid "From a system prompt, start :program:`mongo` by issuing the :program:`mongo` command, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:40
# 684feb07b4c94afcae214b7c32a813ab
msgid "By default, :program:`mongo` looks for a database server listening on port ``27017`` on the ``localhost`` interface. To connect to a server on a different port or interface, use the :option:`--port <mongo --port>` and :option:`--host <mongo --host>` options."
msgstr ""

#: ../source/tutorial/getting-started.txt:47
# 8586a7c5ece142feb4f14f351b1e54a2
msgid "Select a Database"
msgstr ""

#: ../source/tutorial/getting-started.txt:49
# a42de2d320cb4375a64cb91c3bf30a57
msgid "After starting the :program:`mongo` shell your session will use the ``test`` database by default. At any time, issue the following operation at the :program:`mongo` to report the name of the current database:"
msgstr ""

#: ../source/tutorial/getting-started.txt:57
# f20aa9d7efd743d28957b25112cc3147
msgid "From the :program:`mongo` shell, display the list of databases, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:64
# 55a6fd2317c74abbb40f8dba65f0b766
msgid "Switch to a new database named ``mydb``, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:71
# b94963181dd645aea2f68d91a28df9a5
msgid "Confirm that your session has the ``mydb`` database as context, by checking the value of the ``db`` object, which returns the name of the current database, as follows:"
msgstr ""

#: ../source/tutorial/getting-started.txt:79
# c180646ea8e74fe4b70eee76e34b4f9e
msgid "At this point, if you issue the ``show dbs`` operation again, it will not include the ``mydb`` database. MongoDB will not permanently create a database until you insert data into that database. The :ref:`getting-started-create-documents` section describes the process for inserting data."
msgstr ""

#: ../source/tutorial/getting-started.txt:85
# 0976d64a6c534274a52d7ce7509443c0
msgid "``show databases`` also returns a list of databases."
msgstr ""

#: ../source/tutorial/getting-started.txt:89
# 577c819f48f14e7485da3936ff52926f
msgid "Display ``mongo`` Help"
msgstr ""

#: ../source/tutorial/getting-started.txt:91
# aad1405fe9734af3a3df0df5a4cf0bc3
msgid "At any point, you can access help for the :program:`mongo` shell using the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:98
# b25e0240447645fbba76040ff8232c52
msgid "Furthermore, you can append the ``.help()`` method to some JavaScript methods, any cursor object, as well as the ``db`` and ``db.collection`` objects to return additional help information."
msgstr ""

#: ../source/tutorial/getting-started.txt:105
# 91a8f48e06ef4d6e91c1b6f0c9c5926c
msgid "Create a Collection and Insert Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:107
# 141d2817939848f0b3cf31a8b5b9ba01
msgid "In this section, you insert documents into a new :term:`collection` named ``testData`` within the new :term:`database` named ``mydb``."
msgstr ""

#: ../source/tutorial/getting-started.txt:111
# 46ce33329f44472bac583bed6f335ad7
msgid "MongoDB will create a collection implicitly upon its first use. You do not need to create a collection before inserting data. Furthermore, because MongoDB uses :ref:`dynamic schemas <faq-schema-free>`, you also need not specify the structure of your documents before inserting them into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:117
# cd0098a95bec48ef9a912408f0208b4a
msgid "From the :program:`mongo` shell, confirm you are in the ``mydb`` database by issuing the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:124
# bfab2a21699f41148023b013d7f16aa6
msgid "If :program:`mongo` does not return ``mydb`` for the previous operation, set the context to the ``mydb`` database, with the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:132
# 7b82a08db14642c18f5e1391954b2e45
msgid "Create two documents named ``j`` and ``k`` by using the following sequence of JavaScript operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:140
# 4fd09311a2ce4e2d9d47402d667c6fc0
msgid "Insert the ``j`` and ``k`` documents into the ``testData`` collection with the following sequence of operations:"
msgstr ""

#: ../source/tutorial/getting-started.txt:148
# c2812fe1ee4f484d8015d189d0ae0b4e
msgid "When you insert the first document, the :program:`mongod` will create both the ``mydb`` database and the ``testData`` collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:151
# f850511def164ef18b94d5a2a7df0bf3
msgid "Confirm that the ``testData`` collection exists. Issue the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:158
# eb28509c2e85425da8714de3d31373d0
msgid "The :program:`mongo` shell will return the list of the collections in the current (i.e. ``mydb``) database. At this point, the only collection is ``testData``. All :program:`mongod` databases also have a :data:`system.indexes <<database>.system.indexes>` collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:163
# 4c0f1b3557c44c01a81a20ccdf0943b5
msgid "Confirm that the documents exist in the ``testData`` collection by issuing a query on the collection using the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:171
# 7ed27aa349174a21bec14959fa6fa4d2
msgid "This operation returns the following results. The :doc:`ObjectId </reference/object-id>` values will be unique:"
msgstr ""

#: ../source/tutorial/getting-started.txt:179
# bed2fbde8b3c432e80e56c7192b5c96d
msgid "All MongoDB documents must have an ``_id`` field with a unique value.  These operations do not explicitly specify a value for the ``_id`` field, so :program:`mongo` creates a unique :doc:`ObjectId </reference/object-id>` value for the field before inserting it into the collection."
msgstr ""

#: ../source/tutorial/getting-started.txt:186
# 7a8e1d923ebc48e0b45ebb5265f538f3
msgid "Insert Documents using a For Loop or a JavaScript Function"
msgstr ""

#: ../source/tutorial/getting-started.txt:188
# c46969594cd445af9d04445449592587
msgid "To perform the remaining procedures in this tutorial, first add more documents to your database using one or both of the procedures described in :doc:`/tutorial/generate-test-data`."
msgstr ""

#: ../source/tutorial/getting-started.txt:193
# 2aeb4770c7fd499a9a97756b6946be1f
msgid "Working with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:195
# f80f0b55f5294577b0c7b38cf826b6ad
msgid "When you query a :term:`collection`, MongoDB returns a \"cursor\" object that contains the results of the query. The :program:`mongo` shell then iterates over the cursor to display the results. Rather than returning all results at once, the shell iterates over the cursor 20 times to display the first 20 results and then waits for a request to iterate over the remaining results. In the shell, use enter ``it`` to iterate over the next set of results."
msgstr ""

#: ../source/tutorial/getting-started.txt:203
# 3598d00336914d4ab159f7d598122ffd
msgid "The procedures in this section show other ways to work with a cursor. For comprehensive documentation on cursors, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:208
# f34fc5dd285a449abd8c2da58751baa6
msgid "Iterate over the Cursor with a Loop"
msgstr ""

#: ../source/tutorial/getting-started.txt:210
# af2170250f1c431ab992ed5e27183a68
msgid "Before using this procedure, make sure to add at least 25 documents to a collection using one of the procedures in :doc:`/tutorial/generate-test-data`. You can name your database and collections anything you choose, but this procedure will assume the database named ``test`` and a collection named ``testData``."
msgstr ""

#: ../source/tutorial/getting-started.txt:216
# 7aa1a175d5204b8f99df716a767cffcc
msgid "In the MongoDB JavaScript shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:223
# 6ca977959c6c46ad8d994b5e23790bff
msgid "Print the full result set by using a ``while`` loop to iterate over the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:230
# 648895a44200409288426b94b92c9f96
msgid "The ``hasNext()`` function returns true if the cursor has documents. The ``next()`` method returns the next document. The ``printjson()`` method renders the document in a JSON-like format."
msgstr ""

#: ../source/tutorial/getting-started.txt:234
# 99679b25b04e48b29475159224a9e799
msgid "The operation displays 20 documents. For example, if the documents have a single field named ``x``, the operation displays the field as well as each document's ``ObjectId``:"
msgstr ""

#: ../source/tutorial/getting-started.txt:262
# ac5056e1e7ef46aa98502e520638ed6c
msgid "Use Array Operations with the Cursor"
msgstr ""

#: ../source/tutorial/getting-started.txt:264
# a844d201217a4c9dbab82d822ec6d0f4
msgid "The following procedure lets you manipulate a cursor object as if it were an array:"
msgstr ""

#: ../source/tutorial/getting-started.txt:267
# 02383d971d0b4fef9ea9c6e76dc5a6dc
msgid "In the :program:`mongo` shell, query the ``testData`` collection and assign the resulting cursor object to the ``c`` variable:"
msgstr ""

#: ../source/tutorial/getting-started.txt:274
# b642dca9404e4469a64f9bebac86eb52
msgid "To find the document at the array index ``4``, use the following operation:"
msgstr ""

#: ../source/tutorial/getting-started.txt:281
# 79716854702445f984c6a5d0b3c6ba39
msgid "MongoDB returns the following:"
msgstr ""

#: ../source/tutorial/getting-started.txt:287
# f25c8326268e449f938679fe24433752
msgid "When you access documents in a cursor using the array index notation, :program:`mongo` first calls the ``cursor.toArray()`` method and loads into RAM all documents returned by the cursor. The index is then applied to the resulting array. This operation iterates the cursor completely and exhausts the cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:293
# 0eff635afb034136a9591c1284d8ba4a
msgid "For very large result sets, :program:`mongo` may run out of available memory."
msgstr ""

#: ../source/tutorial/getting-started.txt:296
# 3d2b3a07414d4506bf4e1cd6c26783d7
msgid "For more information on the cursor, see :ref:`crud-read-cursor`."
msgstr ""

#: ../source/tutorial/getting-started.txt:299
# b83447a6e02c410eade22e669e4a2add
msgid "Query for Specific Documents"
msgstr ""

#: ../source/tutorial/getting-started.txt:301
# f1771595416f4ebcb9c5dc88c0a3b4cf
msgid "MongoDB has a rich query system that allows you to select and filter the documents in a collection along specific fields and values. See :ref:`read-operations-query-document` and :doc:`/core/read-operations` for a full account of queries in MongoDB."
msgstr ""

#: ../source/tutorial/getting-started.txt:306
# c94a2ab78c934408b21d7848af109da3
msgid "In this procedure, you query for specific documents in the ``testData`` :term:`collection` by passing a \"query document\" as a parameter to the :method:`~db.collection.find()` method. A query document specifies the criteria the query must match to return a document."
msgstr ""

#: ../source/tutorial/getting-started.txt:311
# 62ffd6122385421a8685a27dca6b1757
msgid "In the :program:`mongo` shell, query for all documents where the ``x`` field has a value of ``18`` by passing the ``{ x : 18 }`` query document as a parameter to the :method:`~db.collection.find()` method:"
msgstr ""

#: ../source/tutorial/getting-started.txt:319
# db635cf5445949709a09511d0fecc251
msgid "MongoDB returns one document that fits this criteria:"
msgstr ""

#: ../source/tutorial/getting-started.txt:326
# 7c5c86a70cd0440c88394f74873de277
msgid "Return a Single Document from a Collection"
msgstr ""

#: ../source/tutorial/getting-started.txt:328
# 828b031e74c4483c8e8dc308d67600d4
msgid "With the :method:`~db.collection.findOne()` method you can return a single *document* from a MongoDB collection. The :method:`~db.collection.findOne()` method takes the same parameters as :method:`~db.collection.find()`, but returns a document rather than a cursor."
msgstr ""

#: ../source/tutorial/getting-started.txt:333
# 212cbc7b5b3b4a35bfca738714d4501f
msgid "To retrieve one document from the ``testData`` collection, issue the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:340
# 2adc155f4f9e4ee0a3835e606e0343c9
msgid "For more information on querying for documents, see the :ref:`read-operations-query-document` and :doc:`/core/read-operations` documentation."
msgstr ""

#: ../source/tutorial/getting-started.txt:344
# 2e2a46c76cc644c288d33346e0f1ab98
msgid "Limit the Number of Documents in the Result Set"
msgstr ""

#: ../source/tutorial/getting-started.txt:346
# eeeb6868582b4369837faa1e960649bb
msgid "To increase performance, you can constrain the size of the result by limiting the amount of data your application must receive over the network."
msgstr ""

#: ../source/tutorial/getting-started.txt:350
# d9dca7da6d13467eb764372152e1c7c1
msgid "To specify the maximum number of documents in the result set, call the :method:`~cursor.limit()` method on a cursor, as in the following command:"
msgstr ""

#: ../source/tutorial/getting-started.txt:358
# 5deeea29683c44929f2db04977aabd16
msgid "MongoDB will return the following result, with different :doc:`ObjectId </reference/object-id>` values:"
msgstr ""

#: ../source/tutorial/getting-started.txt:370
# 370d196a97c24d1c8aa2b4208e209ff4
msgid "Next Steps with MongoDB"
msgstr ""

#: ../source/tutorial/getting-started.txt:372
# f15e2a75bf9747529e814af24457d560
msgid "For more information on manipulating the documents in a database as you continue to learn MongoDB, consider the following resources:"
msgstr ""

#: ../source/tutorial/getting-started.txt:375
# fb3cbdd8bb434401a099fa355376be78
msgid ":doc:`/crud`"
msgstr ""

#: ../source/tutorial/getting-started.txt:376
# 2a7bce85999d4afc80d220b67a157846
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/tutorial/getting-started.txt:377
# a76bad37954041f68ae5c52e1ff64173
msgid ":doc:`/applications/drivers`"
msgstr ""

