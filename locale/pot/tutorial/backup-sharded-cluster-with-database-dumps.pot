# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:3
# d11f58e30ca2412fbfb3642b071a5410
msgid "Backup a Sharded Cluster with Database Dumps"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:8
# da08658528a944039024165df59ee649
msgid "Overview"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:10
# 1a64d5cbf0734338bb26bebaa147759a
msgid "This document describes a procedure for taking a backup of all components of a sharded cluster. This procedure uses :program:`mongodump` to create dumps of the :program:`mongod` instance. An alternate procedure uses file system snapshots to capture the backup data, and may be more efficient in some situations if your system configuration allows file system backups. See :doc:`/administration/backup-sharded-clusters` for more information."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:19
# 472215ad667145f8a3aa4af06d3a7a08
msgid "See :doc:`/core/backups` and :doc:`/administration/backup-sharded-clusters` for complete information on backups in MongoDB and backups of sharded clusters in particular."
msgstr ""

#: ../source/includes/note-shard-cluster-backup.rst:1
# 32b93f5149d44abe9f7b1e87019799b6
msgid "To capture a point-in-time backup from a sharded cluster you **must** stop *all* writes to the cluster. On a running production system, you can only capture an *approximation* of point-in-time snapshot."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
# bf197c714c474e2a866e464eae0f653d
msgid "To backup all the databases in a cluster via :program:`mongodump`, you should have the :authrole:`backup` role. The :authrole:`backup` role provides all the needed privileges for backing up all database. The role confers no additional access, in keeping with the policy of :term:`least privilege`."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:6
# 043de167cf1b424d8bb5b2db823df9c7
msgid "To backup a given database, you must have ``read`` access on the database. Several roles provide this access, including the :authrole:`backup` role."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:9
# 7da260bf448941b48d7b954cf6e62cc9
msgid "To backup the ``system.profile`` collection in a database, you must have ``read`` access on certain system collections in the database. Several roles provide this access, including the :authrole:`clusterAdmin` and :authrole:`dbAdmin` roles."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:3
# b6456d5b028248f2a5a8e0bbc2879f27
msgid "To backup users and :ref:`user-defined roles <user-defined-roles>` for a given database, you must have access to the ``admin`` database. MongoDB stores the user data and role definitions for all databases in the ``admin`` database."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:8
# 311f45a063434c99abf47211ea07d1c7
msgid "Specifically, to backup a given database's users, you must have the :authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` database's :data:`admin.system.users` collection. The :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:13
# 8598e4055d7c416fad23821362a53f2e
msgid "To backup the user-defined roles on a database, you must have the :authaction:`find` action on the ``admin`` database's :data:`admin.system.roles` collection. Both the :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles provide this privilege."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:31
# b5412efdc8374c0893914be0727ad967
msgid "Procedure"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:33
# 873f1277914849a9b86fecf662d80fc0
msgid "In this procedure, you will stop the cluster balancer and take a backup up of the :term:`config database`, and then take backups of each shard in the cluster using :program:`mongodump` to capture the backup data. If you need an exact moment-in-time snapshot of the system, you will need to stop all application writes before taking the filesystem snapshots; otherwise the snapshot will only approximate a moment of time."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:41
# 2bdf2733678643558fa7c1daa8aacacb
msgid "For approximate point-in-time snapshots, you can improve the quality of the backup while minimizing impact on the cluster by taking the backup from a secondary member of the replica set that provides each shard."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:46
# 47feaecbc47842aa9fc51966dafa4c5b
msgid "Disable the :term:`balancer` process that equalizes the distribution of data among the :term:`shards <shard>`. To disable the balancer, use the :method:`sh.stopBalancer()` method in the :program:`mongo` shell. For example:"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:56
# 7c38f3538f92491691aa9f651a5781c5
msgid "For more information, see the :ref:`sharding-balancing-disable-temporarily` procedure."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:61
# 286f7e71e9134f7d9b5a8065727c7698
msgid "It is essential that you stop the balancer before creating backups. If the balancer remains active, your resulting backups could have duplicate data or miss some data, as :term:`chunks <chunk>` migrate while recording backups."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:66
# c62c60bb5fb049598b6db38f45d8b69a
msgid "Lock one member of each replica set in each shard so that your backups reflect the state of your database at the nearest possible approximation of a single moment in time. Lock these :program:`mongod` instances in as short of an interval as possible."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:71
# a8edde644b884fc1824aeb33cc8307f7
msgid "To lock or freeze a sharded cluster, you shut down one member of each replica set. Ensure that the :term:`oplog` has sufficient capacity to allow these secondaries to catch up to the state of the primaries after finishing the backup procedure. See :ref:`replica-set-oplog-sizing` for more information."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:77
# 647a12d07cbb4684a155a2a47365cfd5
msgid "Use :program:`mongodump` to backup one of the :ref:`config servers <sharding-config-server>`. This backs up the cluster's metadata. You only need to back up one config server, as they all hold the same data."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:82
# 1a0ee230c21f440c8825365e02b60ab4
msgid "Use the :program:`mongodump` tool to capture the content of the config :program:`mongod` instances."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:85
# fb58a3f8f3414249b7d34596b332e68a
msgid "Your config servers must run MongoDB 2.4 or later with the :option:`--configsvr <mongod --configsvr>` option and the :program:`mongodump` option must include the :option:`--oplog <mongodump --oplog>` to capture a consistent copy of the config database:"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:95
# 8a205ebab8e3405393b818116d6fc44b
msgid "Back up the replica set members of the shards that shut down using :program:`mongodump` and specifying the :option:`--dbpath <mongodump --dbpath>` option. You may back up the shards in parallel. Consider the following invocation:"
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:104
# a928360993314a88a84bad6253d0f3ce
msgid "You must run this command on the system where the :program:`mongod` ran. This operation will use journaling and create a dump of the entire :program:`mongod` instance with data files stored in ``/data/db/``. :program:`mongodump` will write the output of this dump to the ``/data/backup/`` directory."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:110
# 8762c935da9e4b9da5d5113c37367358
msgid "Restart all stopped replica set members of each shard as normal and allow them to catch up with the state of the primary."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:113
# 1e0ccb64318e484997c3f76e95cf8ce6
msgid "Re-enable the balancer with the :method:`sh.setBalancerState()` method."
msgstr ""

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:116
# 04e40c1aeaf546d2aea6a55207a34f3e
msgid "Use the following command sequence when connected to the :program:`mongos` with the :program:`mongo` shell:"
msgstr ""

