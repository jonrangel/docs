# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/troubleshoot-replica-sets.txt:3
# 32be65bea86d4ef1bc6a4cbb2f6cd8c9
msgid "Troubleshoot Replica Sets"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:7
# ee2ea241fbd742908e29a1d7071f2ae7
msgid "This section describes common strategies for troubleshooting :term:`replica set` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:13
# 7002552fcdf24b29bb31f18742c92b58
msgid "Check Replica Set Status"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:15
# 74a71792a5524744b580b75f26263161
msgid "To display the current state of the replica set and current state of each member, run the :method:`rs.status()` method in a :program:`mongo` shell connected to the replica set's :term:`primary`. For descriptions of the information displayed by :method:`rs.status()`, see :doc:`/reference/command/replSetGetStatus`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:23
# c84d03991765440aa90962add8547894
msgid "The :method:`rs.status()` method is a wrapper that runs the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:29
# 841541204d2f460eb0ed4141220ec416
msgid "Check the Replication Lag"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:31
# 7aefcd6080db44faafa0aaef39cf46b4
msgid "Replication lag is a delay between an operation on the :term:`primary` and the application of that operation from the :term:`oplog` to the :term:`secondary`. Replication lag can be a significant issue and can seriously affect MongoDB :term:`replica set` deployments. Excessive replication lag makes \"lagged\" members ineligible to quickly become primary and increases the possibility that distributed read operations will be inconsistent."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:39
# 8e6130641262409c9a0a962c5d01d377
msgid "To check the current length of replication lag:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:41
# 94c6e9e98c244b80bfe05533bd8bd889
msgid "In a :program:`mongo` shell connected to the primary, call the :method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:44
# 7f7437b067284afc9e403b21119975c8
msgid "The returned document displays the ``syncedTo`` value for each member, which shows you when each member last read from the oplog, as shown in the following example:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:59
# 1f8af8dfd3e84e7ca745ad78235061af
msgid "The :method:`rs.status()` method is a wrapper around the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:62
# 2acee7d06bf14495a2f9dd889035b7c5
msgid "Monitor the rate of replication by watching the oplog time in the \"replica\" graph in the `MongoDB Management Service`_. For more information see the `documentation for MMS`_."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:69
# 041c6077caa44151bed671b1fbe817c4
msgid "Possible causes of replication lag include:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:71
# f2d957af46d049a7823cc954807a180d
msgid "**Network Latency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:73
# 268f3f6ef3d6434798be0cd148172c1f
msgid "Check the network routes between the members of your set to ensure that there is no packet loss or network routing issue."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:76
# b8f47ca7aa1c42b9bc095493f5643eb2
msgid "Use tools including ``ping`` to test latency between set members and ``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:80
# fb51823c23a149098124296fbbd416b1
msgid "**Disk Throughput**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:82
# 22d50db9f90f458ab8327faa4ee664ca
msgid "If the file system and disk device on the secondary is unable to flush data to disk as quickly as the primary, then the secondary will have difficulty keeping state. Disk-related issues are incredibly prevalent on multi-tenant systems, including virtualized instances, and can be transient if the system accesses disk devices over an IP network (as is the case with Amazon's EBS system.)"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:90
# d5165a7b50b5484c93d862309193e771
msgid "Use system-level tools to assess disk status, including ``iostat`` or ``vmstat``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:93
# a740fcd190a34351a24ebd68ea3ffccc
msgid "**Concurrency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:95
# 6808a38bbd714e049b713ae439b08131
msgid "In some cases, long-running operations on the primary can block replication on secondaries. For best results, configure :ref:`write concern <write-concern>` to require confirmation of replication to secondaries, as described in :ref:`replica set write concern <replica-set-write-concern>`. This prevents write operations from returning if replication cannot keep up with the write load."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:102
# 4e3faa93f03742ecbd8f16457ca24a67
msgid "Use the :term:`database profiler` to see if there are slow queries or long-running operations that correspond to the incidences of lag."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:105
# 4d8181fe3e2e40b6981bf7397d0bb6a3
msgid "**Appropriate Write Concern**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:107
# 0c5191a14728425190a5e9befb50da53
msgid "If you are performing a large data ingestion or bulk load operation that requires a large number of writes to the primary, particularly with :ref:`unacknowledged write concern <write-concern-unacknowledged>`, the secondaries will not be able to read the oplog fast enough to keep up with changes."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:113
# 40346350844f47a2ae7c980ae7db101a
msgid "To prevent this, require :ref:`write acknowledgment or journaled write concern <write-operations-write-concern>` after every 100, 1,000, or an another interval to provide an opportunity for secondaries to catch up with the primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:118
# c055670602994d90afa3ffc0a586f423
msgid "For more information see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:120
# 59264ae7d0344484bc39ce8667e2023f
msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:121
# b620250e6cb14de883ca04a09e3a2e91
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:122
# 05dee7bd49174a32861dd0e2353dcddc
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:127
# a10e8f529c5440159dc992158d7ef38c
msgid "Test Connections Between all Members"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:129
# 6a4aff36f3af4cf68e52ab0adef8be03
msgid "All members of a :term:`replica set` must be able to connect to every other member of the set to support replication. Always verify connections in both \"directions.\"  Networking topologies and firewall configurations prevent normal and required connectivity, which can block replication."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:135
# 0dd4a1c7fca24247b2b447fd14133199
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
# 74e1db31621d47a08236e1e4c12dbaa1
# 17128dbb72f046359a9d3ecca9eede89
# 41f5db1f788246da979b7c9bbfb29583
msgid "Example"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:140
# 1ff4c93420724e53ae7b7ada361f8ad8
msgid "``m1.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:141
# 1e08c9c6eb894653971e196aad60660a
msgid "``m2.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:142
# 5b4701cc7af64960b1d291240dd3fa00
msgid "``m3.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:144
# d3194823b73f4d63817453bcc954340a
msgid "Test the connection from ``m1.example.net`` to the other hosts with the following operation set ``m1.example.net``:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:153
# 497f84c330264a86a0f7b5f905c87a4b
msgid "Test the connection from ``m2.example.net`` to the other two hosts with the following operation set from ``m2.example.net``, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:163
# da3e311e2dff4afe92c1fbcd27808a29
msgid "You have now tested the connection between ``m2.example.net`` and ``m1.example.net`` in both directions."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:166
# 2f7afb622797428dab9ea6f7cd84cff5
msgid "Test the connection from ``m3.example.net`` to the other two hosts with the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:176
# 6383062414114238b4eac3857bf7d274
msgid "If any connection, in any direction fails, check your networking and firewall configuration and reconfigure your environment to allow these connections."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:181
# 9029e01b5d3247be9d0757afd71481fe
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:183
# 2c05d6219b834eb594cd71c2fe7baa55
msgid "When you reboot members of a replica set, ensure that the set is able to elect a primary during the maintenance. This means ensuring that a majority of the set's ':data:`~local.system.replset.members[n].votes` are available."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:188
# bbeacecab50a49158f7f5c00a438ba3e
msgid "When a set's active members can no longer form a majority, the set's :term:`primary` steps down and becomes a :term:`secondary`. The former primary closes all open connections to client applications. Clients attempting to write to the former primary receive socket exceptions and *Connection reset* errors until the set can elect a primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:201
# 01aa24f18fd04a8f8fe0354b782117e4
msgid "For more information on votes, see :doc:`/core/replica-set-elections`. For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:207
# 93c0a784dc904b769ecf41ed1185672b
msgid "Check the Size of the Oplog"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:209
# 46ebe94ef113479884ab5db0d8a6a8df
msgid "A larger :term:`oplog` can give a replica set a greater tolerance for lag, and make the set more resilient."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:212
# ecb8eafb8c444e97b23e993b4a34eb4d
msgid "To check the size of the oplog for a given :term:`replica set` member, connect to the member in a :program:`mongo` shell and run the :method:`rs.printReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:216
# dddd1e573000418e998bdb74b08b926e
msgid "The output displays the size of the oplog and the date ranges of the operations contained in the oplog. In the following example, the oplog is about 10MB and is able to fit about 26 hours (94400 seconds) of operations:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:229
# 4a84a8b4d9914812bf229888f8b7df89
msgid "The oplog should be long enough to hold all transactions for the longest downtime you expect on a secondary. At a minimum, an oplog should be able to hold minimum 24 hours of operations; however, many users prefer to have 72 hours or even a week's work of operations."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:234
# ad78efa39a6e40fd9abe09bf22c3ed29
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:236
# 6800cec249eb48f9ad9f131db737d3bf
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:237
# f649fd5dd9104d7abb5ac9b47101aad8
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:238
# 3784e3a6369b4837908ada1f623e9897
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:240
# 177644d97ccd47e8a725d18f16183803
msgid "You normally want the oplog to be the same size on all members. If you resize the oplog, resize it on all members."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:243
# 4c4817b76e3b4ba1a3e75fd9eb7acdc9
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:248
# 92d4cd5f23bc4a3db8af89b2839a68ce
msgid "Oplog Entry Timestamp Error"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:252
# f7a83c68250a4fe68998a0f50bf4e005
msgid "Consider the following error in :program:`mongod` output and logs:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:259
# 4d42ba13bc284e60a182eb486f23868c
msgid "Often, an incorrectly typed value in the ``ts`` field in the last :term:`oplog` entry causes this error. The correct data type is Timestamp."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:263
# f86b15f388fb408c8a481e7acebc0391
msgid "Check the type of the ``ts`` value using the following two queries against the oplog collection:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:272
# ab14b83b95ed4225bc8519113bd7fef0
msgid "The first query returns the last document in the oplog, while the second returns the last document in the oplog where the ``ts`` value is a Timestamp. The :query:`$type` operator allows you to select :term:`BSON type <BSON types>` 17, is the Timestamp data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:277
# 1d1149a7817440b7974beaef21fcf10f
msgid "If the queries don't return the same document, then the last document in the oplog has the wrong data type in the ``ts`` field."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:282
# eb4c610e0d17411fad287bbfebe34e78
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:292
# 754638e69ea344b5a1b95eaebe0f063c
msgid "And the second query returns this as the last entry where ``ts`` has the ``Timestamp`` type:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:303
# db827a52ab0041f3b3219635ed9faab1
msgid "Then the value for the ``ts`` field in the last oplog entry is of the wrong data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:306
# 8867c00d1d6846b3a044e52183abdaaf
msgid "To set the proper type for this value and resolve this issue, use an update operation that resembles the following:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:314
# 09667b05e95f4fd487f14940f9ebf8e0
msgid "Modify the timestamp values as needed based on your oplog entry. This operation may take some period to complete because the update must scan and pull the entire oplog into memory."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:319
# 504afbffa79b462d911995e91a34d301
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:321
# 826d967d91d14695a0a2831097c8a5fb
msgid "The *duplicate key on local.slaves* error, occurs when a :term:`secondary` or :term:`slave` changes its hostname and the :term:`primary` or :term:`master` tries to update its ``local.slaves`` collection with the new name. The update fails because it contains the same ``_id`` value as the document containing the previous hostname. The error itself will resemble the following."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:332
# 451499a95f06447392dfaac0aaa04533
msgid "This is a benign error and does not affect replication operations on the :term:`secondary` or :term:`slave`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:335
# 0e9742a6780e4dae8eb9ef827b693cf6
msgid "To prevent the error from appearing, drop the ``local.slaves`` collection from the :term:`primary` or :term:`master`, with the following sequence of operations in the :program:`mongo` shell:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:344
# 35acacabbdb1413dac1f60bf020c5ccc
msgid "The next time a :term:`secondary` or :term:`slave` polls the :term:`primary` or :term:`master`, the :term:`primary` or :term:`master` recreates the ``local.slaves`` collection."
msgstr ""

