# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/query-documents.txt:6
# 3307937cf9674bd0aa42cce6071f0402
msgid "Query Documents"
msgstr ""

#: ../source/tutorial/query-documents.txt:10
# 7b5643608cbc44a093070c2632184b84
msgid "In MongoDB, the :method:`db.collection.find()` method retrieves documents from a collection. [#findOne]_ The :method:`db.collection.find()` method returns a :doc:`cursor </core/cursors>` to the retrieved documents."
msgstr ""

#: ../source/tutorial/query-documents.txt:15
# ea04418694f04165bd7d13767118f1e1
msgid "This tutorial provides examples of read operations using the :method:`db.collection.find()` method in the :program:`mongo` shell. In these examples, the retrieved documents contain all their fields. To restrict the fields to return in the retrieved documents, see :doc:`/tutorial/project-fields-from-query-results`."
msgstr ""

#: ../source/tutorial/query-documents.txt:22
# a593220477d54222b8b7526db31aa04a
msgid "The :method:`db.collection.findOne()` method also performs a read operation to return a single document. Internally, the :method:`db.collection.findOne()` method is the :method:`db.collection.find()` method with a limit of 1."
msgstr ""

#: ../source/tutorial/query-documents.txt:28
# 6c3ffbaf35274e9aa02ebf2c04bd89d1
msgid "Select All Documents in a Collection"
msgstr ""

#: ../source/tutorial/query-documents.txt:30
# a795839ebbed4dd4a0b5fea89d1d3d19
msgid "An empty query document (``{}``) selects all documents in the collection:"
msgstr ""

#: ../source/tutorial/query-documents.txt:37
# 6afc46f447404d17aab6b8d088bacdf9
msgid "Not specifying a query document to the :method:`~db.collection.find()` is equivalent to specifying an empty query document. Therefore the following operation is equivalent to the previous operation:"
msgstr ""

#: ../source/tutorial/query-documents.txt:46
# f9d8f108697c47a7918d0a82027756ae
msgid "Specify Equality Condition"
msgstr ""

#: ../source/tutorial/query-documents.txt:48
# fd09b8b3eacf4bc5b933edffe9b4f478
msgid "To specify equality condition, use the query document ``{ <field>: <value> }`` to select all documents that contain the ``<field>`` with the specified ``<value>``."
msgstr ""

#: ../source/tutorial/query-documents.txt:52
# 2a621f7fe20f4efcb78d8bb1edad6eb1
msgid "The following example retrieves from the ``inventory`` collection all documents where the ``type`` field has the value ``snacks``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:60
# 96a86bdc1b89429486166d65613118fb
msgid "Specify Conditions Using Query Operators"
msgstr ""

#: ../source/tutorial/query-documents.txt:62
# c0ae495557b441bea434ce7df4b72c90
msgid "A query document can use the :ref:`query operators <query-selectors>` to specify conditions in a MongoDB query."
msgstr ""

#: ../source/tutorial/query-documents.txt:65
# e846488f455b4d448d93aef3b57fb844
msgid "The following example selects all documents in the ``inventory`` collection where the value of the ``type`` field is either ``'food'`` or ``'snacks'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:73
# 993c521bf9a3409598cb948fd05457f8
msgid "Although you can express this query using the :query:`$or` operator, use the :query:`$in` operator rather than the :query:`$or` operator when performing equality checks on the same field."
msgstr ""

#: ../source/tutorial/query-documents.txt:77
# 32652d48a436434f8528f26b873cc89a
msgid "Refer to the :doc:`/reference/operator` document for the complete list of query operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:81
# 0a54a71cd6f94460af496e18e6787c31
msgid "Specify ``AND`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:83
# e46064ba8b5948bfa2fa026aeeb13ea4
msgid "A compound query can specify conditions for more than one field in the collection's documents. Implicitly, a logical ``AND`` conjunction connects the clauses of a compound query so that the query selects the documents in the collection that match all the conditions."
msgstr ""

#: ../source/tutorial/query-documents.txt:88
# 7e7517d06b2c4a9884032b12d9b9c51b
msgid "In the following example, the query document specifies an equality match on the field ``food`` **and** a less than (:query:`$lt`) comparison match on the field ``price``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:96
# d47e1548891746cba6d53d5031b7f5bd
msgid "This query selects all documents where the ``type`` field has the value ``'food'`` **and** the value of the ``price`` field is less than ``9.95``. See :ref:`comparison operators <query-selectors-comparison>` for other comparison operators."
msgstr ""

#: ../source/tutorial/query-documents.txt:102
# 206bc624134147fab92e6929396d26ea
msgid "Specify ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:104
# ab3a6c06ac7f47aba723ff8d3142bda5
msgid "Using the :query:`$or` operator, you can specify a compound query that joins each clause with a logical ``OR`` conjunction so that the query selects the documents in the collection that match at least one condition."
msgstr ""

#: ../source/tutorial/query-documents.txt:109
# ac1ecaea97d6471699bed6c44ac41090
msgid "In the following example, the query document selects all documents in the collection where the field ``qty`` has a value greater than (:query:`$gt`) ``100`` **or** the value of the ``price`` field is less than (:query:`$lt`) ``9.95``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:125
# 79cf1d8773d042bf85f669302440ee28
msgid "Specify ``AND`` as well as ``OR`` Conditions"
msgstr ""

#: ../source/tutorial/query-documents.txt:127
# 5266b7be348b4ae58152329174c32d88
msgid "With additional clauses, you can specify precise conditions for matching documents."
msgstr ""

#: ../source/tutorial/query-documents.txt:130
# 03751513f1d943bca7d611ef43516be6
msgid "In the following example, the compound query document selects all documents in the collection where the value of the ``type`` field is ``'food'`` **and** *either* the ``qty`` has a value greater than (:query:`$gt`) ``100`` *or* the value of the ``price`` field is less than (:query:`$lt`) ``9.95``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:145
# f98cc5901b424d2ea3c98e138835e7cb
msgid "Subdocuments"
msgstr ""

#: ../source/tutorial/query-documents.txt:147
# c03149302878493eb2f60c75ab35e7fa
msgid "When the field holds an embedded document (i.e. subdocument), you can either specify the entire subdocument as the value of a field, or \"reach into\" the subdocument using :term:`dot notation`, to specify values for individual fields in the subdocument:"
msgstr ""

#: ../source/tutorial/query-documents.txt:153
# 521bc02f0aa740648e34b77c0c637195
msgid "Exact Match on Subdocument"
msgstr ""

#: ../source/tutorial/query-documents.txt:155
# 6bc35e9fd32842dfbf661dfd7493e295
msgid "To specify an equality match on the whole subdocument, use the query document ``{ <field>: <value> }`` where ``<value>`` is the subdocument to match. Equality matches on a subdocument require that the subdocument field match *exactly* the specified ``<value>``, including the field order."
msgstr ""

#: ../source/tutorial/query-documents.txt:161
# a8552ddf6f72483dad67f20f95a76488
msgid "In the following example, the query matches all documents where the value of the field ``producer`` is a subdocument that contains *only* the field ``company`` with the value ``'ABC123'`` and the field ``address`` with the value ``'123 Street'``, in the exact order:"
msgstr ""

#: ../source/tutorial/query-documents.txt:178
# 917929193f0843a7b1886fc02ef317d0
msgid "Equality Match on Fields within Subdocument"
msgstr ""

#: ../source/tutorial/query-documents.txt:180
# c2c020858d464eb58d72a97b40ba40a9
msgid "Equality matches for specific fields within subdocuments select the documents in the collection when the field in the subdocument contains a field that matches the specified value."
msgstr ""

#: ../source/tutorial/query-documents.txt:184
# 23381e8eff3f4b4795fef7332bc300cd
msgid "In the following example, the query uses the :term:`dot notation` to match all documents where the value of the field ``producer`` is a subdocument that contains a field ``company`` with the value ``'ABC123'`` and may contain other fields:"
msgstr ""

#: ../source/tutorial/query-documents.txt:196
# d6433b5c462149409c5eb598b62519d8
msgid "Arrays"
msgstr ""

#: ../source/tutorial/query-documents.txt:198
# 99b5ba325b1945ec9a8216cae50ea6b2
msgid "When the field holds an array, you can query for an exact array match or for specific values in the array. If the array holds sub-documents, you can query for specific fields within the sub-documents using :term:`dot notation`:"
msgstr ""

#: ../source/tutorial/query-documents.txt:204
# 4acd13a4adf24b3893710b901f8c5d87
msgid "Exact Match on an Array"
msgstr ""

#: ../source/tutorial/query-documents.txt:206
# 9cb67ec58ed3444eb259566febb7944c
msgid "To specify equality match on an array, use the query document ``{ <field>: <value> }`` where ``<value>`` is the array to match. Equality matches on the array require that the array field match *exactly* the specified ``<value>``, including the element order."
msgstr ""

#: ../source/tutorial/query-documents.txt:211
# 53ba04ad628440b291917c6d914c0955
msgid "In the following example, the query matches all documents where the value of the field ``tags`` is an array that holds exactly three elements, ``'fruit'``, ``'food'``, and ``'citrus'``, in this order:"
msgstr ""

#: ../source/tutorial/query-documents.txt:220
# 651c397b35f048d9896c0cec9fb8ac3f
msgid "Match an Array Element"
msgstr ""

#: ../source/tutorial/query-documents.txt:222
# b159952481764d5794ec263f86390788
msgid "Equality matches can specify a single element in the array to match. These specifications match if the array contains at least *one* element with the specified value."
msgstr ""

#: ../source/tutorial/query-documents.txt:226
# 0454520b21424f4c81576e80d700dfa3
msgid "In the following example, the query matches all documents where the value of the field ``tags`` is an array that contains ``'fruit'`` as one of its elements:"
msgstr ""

#: ../source/tutorial/query-documents.txt:235
# 1f62d4d0d77d4102b3352dcae379885a
msgid "Match a Specific Element of an Array"
msgstr ""

#: ../source/tutorial/query-documents.txt:237
# d1b57079512a40a98b2ae38e1acf1d0b
msgid "Equality matches can specify equality matches for an element at a particular index or position of the array."
msgstr ""

#: ../source/tutorial/query-documents.txt:240
# 5f346930a71d49a18e8acf8d6f73b26d
msgid "In the following example, the query uses the :term:`dot notation` to match all documents where the value of the ``tags`` field is an array whose first element equals ``'fruit'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:249
# c90343e8ff4f4d8c9916b61fff3eb3e4
msgid "Array of Subdocuments"
msgstr ""

#: ../source/tutorial/query-documents.txt:252
# 720721ab817f470aa3d90769577296bd
msgid "Match a Field in the Subdocument Using the Array Index"
msgstr ""

#: ../source/tutorial/query-documents.txt:254
# 717a9ee7c8ba4594b60faa436a58c1c9
msgid "If you know the array index of the subdocument, you can specify the document using the subdocument's position."
msgstr ""

#: ../source/tutorial/query-documents.txt:257
# e86961686e904b95bc2e73beab702eda
msgid "The following example selects all documents where the ``memos`` contains an array whose first element (i.e. index is ``0``) is a subdocument with the field ``by`` with the value ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:266
# 90bea507bbc54696904c89a378b849c2
msgid "Match a Field Without Specifying Array Index"
msgstr ""

#: ../source/tutorial/query-documents.txt:268
# 550d5c26f6b7493797088306515ed0eb
msgid "If you do not know the index position of the subdocument, concatenate the name of the field that contains the array, with a dot (``.``) and the name of the field in the subdocument."
msgstr ""

#: ../source/tutorial/query-documents.txt:272
# b142fc30df714da2aa7f7d69ed2fa9f6
msgid "The following example selects all documents where the ``memos`` field contains an array that contains at least one subdocument with the field ``by`` with the value ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:281
# 1a5ad30b0c4d48ddbe52c3c70e3c737b
msgid "Match Multiple Fields"
msgstr ""

#: ../source/tutorial/query-documents.txt:283
# b06ad0aef5a0437085df5050417c2714
msgid "To match by multiple fields in the subdocument, you can use either dot notation or the :query:`$elemMatch` operator:"
msgstr ""

#: ../source/tutorial/query-documents.txt:286
# fa984f97bd78436f8afad941c709024b
msgid "The following example uses dot notation to query for documents where the value of the ``memos`` field is an array that has at least one subdocument that contains the field ``memo`` equal to ``'on time'`` and the field ``by`` equal to ``'shipping'``:"
msgstr ""

#: ../source/tutorial/query-documents.txt:300
# 2618ebe4647642ee98414ba698f45a13
msgid "The following example uses :query:`$elemMatch` to query for documents where the value of the ``memos`` field is an array that has at least one subdocument that contains the field ``memo`` equal to ``'on time'`` and the field ``by`` equal to ``'shipping'``:"
msgstr ""

