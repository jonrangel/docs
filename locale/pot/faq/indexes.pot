# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/indexes.txt:3
# 9d1c3bc1e86d48bb83cd19c55ebb91e8
msgid "FAQ: Indexes"
msgstr ""

#: ../source/faq/indexes.txt:7
# e171b8f71d7245faab154b07afe61b07
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr ""

#: ../source/faq/indexes.txt:9
# 932a7ec65e0e4947b2f4b16fdce34799
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. See also :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:15
# 32cb75cec5b244e7b10e495947dc4fb5
msgid "Should you run ``ensureIndex()`` after every insert?"
msgstr ""

#: ../source/faq/indexes.txt:17
# bd1291f67bf34abaa2581970c3e09d76
msgid "No. You only need to create an index once for a single collection. After initial creation, MongoDB automatically updates the index as data changes."
msgstr ""

#: ../source/faq/indexes.txt:21
# c6215d434d984640b15917ecedf2e7c1
msgid "While running :method:`~db.collection.ensureIndex()` is usually ok, if an index doesn't exist because of ongoing administrative work, a call to :method:`~db.collection.ensureIndex()` may disrupt database availability. Running :method:`~db.collection.ensureIndex()` can render a replica set inaccessible as the index creation is happening. See :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/faq/indexes.txt:29
# 3385fc56b1614367a1c837749d5c4171
msgid "How do you know what indexes exist in a collection?"
msgstr ""

#: ../source/faq/indexes.txt:31
# afd30f7acf094c1d81da17e58d2f545c
msgid "To list a collection's indexes, use the :method:`db.collection.getIndexes()` method or a similar :api:`method for your driver <>`."
msgstr ""

#: ../source/faq/indexes.txt:36
# b663fc30fe5649b89c6a704e69a504ac
msgid "How do you determine the size of an index?"
msgstr ""

#: ../source/faq/indexes.txt:38
# e50a6da74239465cbce76520a3b0b2ca
msgid "To check the sizes of the indexes on a collection, use :method:`db.collection.stats()`."
msgstr ""

#: ../source/faq/indexes.txt:43
# cf345aa321ef44a998841e566637be62
msgid "What happens if an index does not fit into RAM?"
msgstr ""

#: ../source/faq/indexes.txt:45
# a62489decd884182bc59364d61d858ca
msgid "When an index is too large to fit into RAM, MongoDB must read the index from disk, which is a much slower operation than reading from RAM. Keep in mind an index fits into RAM when your server has RAM available for the index combined with the rest of the :term:`working set`."
msgstr ""

#: ../source/faq/indexes.txt:50
# f71c0bcea7434c32bd505ceeda0c5288
msgid "In certain cases, an index does not need to fit *entirely* into RAM. For details, see :ref:`indexing-right-handed`."
msgstr ""

#: ../source/faq/indexes.txt:56
# d06f02555e2e45f6b74ac9e66c51aebe
msgid "How do you know what index a query used?"
msgstr ""

#: ../source/faq/indexes.txt:58
# 9207de6ae02c4eda99fd531158605d6b
msgid "To inspect how MongoDB processes a query, use the :method:`~cursor.explain()` method in the :program:`mongo` shell, or in your application driver."
msgstr ""

#: ../source/faq/indexes.txt:63
# e5c6217be1244897a0f5dec3370488ea
msgid "How do you determine what fields to index?"
msgstr ""

#: ../source/faq/indexes.txt:65
# e62b618a48124d85852d1d8a08fdbcc8
msgid "A number of factors determine what fields to index, including :ref:`selectivity <index-selectivity>`, fitting indexes into RAM, reusing indexes in multiple queries when possible, and creating indexes that can support all the fields in a given query. For detailed documentation on choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:81
# 13d3101b2cb3437d9a2c95db3d065b0f
msgid "How do write operations affect indexes?"
msgstr ""

#: ../source/faq/indexes.txt:83
# 83fe469c921d4bdb837bfc7081b90357
msgid "Any write operation that alters an indexed field requires an update to the index in addition to the document itself. If you update a document that causes the document to grow beyond the allotted record size, then MongoDB must update all indexes that include this document as part of the update operation."
msgstr ""

#: ../source/faq/indexes.txt:89
# 39a51b5c3cec40ecbfef9c79c4490f55
msgid "Therefore, if your application is write-heavy, creating too many indexes might affect performance."
msgstr ""

#: ../source/faq/indexes.txt:93
# 9ddc4f142ac54252ab5ab3cbcb6d3014
msgid "Will building a large index affect database performance?"
msgstr ""

#: ../source/faq/indexes.txt:95
# b80dc9a884f243559d98e2ed2055f4a6
msgid "Building an index can be an IO-intensive operation, especially if you have a large collection. This is true on any database system that supports secondary indexes, including MySQL. If you need to build an index on a large collection, consider building the index in the background. See :ref:`index-creation-operations`."
msgstr ""

#: ../source/faq/indexes.txt:101
# 3100a57fefbe443bbc85f0b4873cb99c
msgid "If you build a large index without the background option, and if doing so causes the database to stop responding, do one of the following:"
msgstr ""

#: ../source/faq/indexes.txt:105
# 121a9f29c5874aa9a4e7fddb220bd1a1
msgid "Wait for the index to finish building."
msgstr ""

#: ../source/faq/indexes.txt:107
# 951142a8e9574880878c14a5f5cc1de6
msgid "Kill the current operation (see :method:`db.killOp()`). The partial index will be deleted."
msgstr ""

#: ../source/faq/indexes.txt:113
# d0e41c2fa6c048b9a10ee2cdb4e4c119
msgid "Can I use index keys to constrain query matches?"
msgstr ""

#: ../source/faq/indexes.txt:115
# 3b113c8dd0df4757b1921947daed0c95
msgid "You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods to constrain the results of the cursor returned from :method:`~db.collection.find()` by using index keys."
msgstr ""

#: ../source/faq/indexes.txt:120
# e90f1d5aed344313a916d7c3e90235b4
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr ""

#: ../source/faq/indexes.txt:122
# e9d4c335b492418e8503af4ac09651d7
msgid "The :query:`$ne` and :query:`$nin` operators are not selective. See :ref:`index-selectivity`. If you need to use these, it is often best to make sure that an additional, more selective criterion is part of the query."
msgstr ""

#: ../source/faq/indexes.txt:128
# d32ce78988d04aff9934faf928698ce5
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr ""

#: ../source/faq/indexes.txt:130
# 8f1959a825ce446dbdc14561021ea089
msgid "Not entirely. The index can partially support these queries because it can speed the selection of the first element of the array; however, comparing all subsequent items in the array cannot use the index and must scan the documents individually."
msgstr ""

#: ../source/faq/indexes.txt:136
# f806104d1238403aacdb76773a5d10a7
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr ""

#: ../source/faq/indexes.txt:138
# 4a24e790aba345c8871e00a3839a243d
msgid "For simple attribute lookups that don't require sorted result sets or range queries, consider creating a field that contains an array of documents where each document has a field (e.g. ``attrib`` ) that holds a specific type of attribute. You can index this ``attrib`` field."
msgstr ""

#: ../source/faq/indexes.txt:144
# 69b28b9612a746ca9b4663f345091c6a
msgid "For example, the ``attrib`` field in the following document allows you to add an unlimited number of attributes types:"
msgstr ""

#: ../source/faq/indexes.txt:158
# bd7199537322424295b59676a2363ad2
msgid "*Both* of the following queries could use the same ``{ \"attrib.k\": 1, \"attrib.v\": 1 }`` index:"
msgstr ""

