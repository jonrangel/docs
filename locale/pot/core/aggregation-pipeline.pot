# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# a8ba3a0c1f494c33acb5f5880ad49f43
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:9
# 0755e3fea9fc4ad297ddebdba9fd5709
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:14
# 9452c058fa1a4546b21d6390a5757a55
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for many aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# d09b8e7961d242b08b022e067e6d8388
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:27
# 66edae232c08406e968bfe710a53e019
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:29
# 860aea2a7f824be2978fdff28983078f
msgid "Conceptually, documents from a collection travel through an aggregation pipeline, which transforms these objects as they pass through. For those familiar with UNIX-like shells (e.g. bash), the concept is analogous to the pipe (i.e. ``|``)."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:34
# 61159b512b294b7494188e2e0a5f7daa
msgid "The MongoDB aggregation pipeline starts with the documents of a collection and streams the documents from one :ref:`pipeline operator <aggregation-pipeline-operator-reference>` to the next to process the documents. Each operator in the pipeline transforms the documents as they pass through the pipeline. Pipeline operators do not need to produce one output document for every input document. Operators may generate new documents or filter out documents. Pipeline operators can be repeated in the pipeline."
msgstr ""

#: ../source/includes/fact-agg-helper-returns-cursor.rst:1
# f7d445cbb35c48ddb54a8e95ca16bda0
msgid "The :method:`db.collection.aggregate()` method returns a cursor and can return result sets of any size. Previous versions returned all results in a single document, and the result set was subject to a size limit of 16 megabytes."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:45
# 7eba1f9513714767ad87e08c18e7b6f0
msgid "See :ref:`aggregation-pipeline-operator-reference` for the list of pipeline operators that define the stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:48
# 8a601ca8811f49f69fc3cfb90cd09b5a
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`, as well as the :dbcommand:`aggregate` command and the :method:`db.collection.aggregate()` method reference pages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:57
# 2ecfb46684b144f18a8edc3f2e4de9a8
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:59
# a4f2ccec643444a29d097978d4591cae
msgid "Each pipeline operator takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :term:`document` structure and can contain fields, values, and :ref:`operators <aggregation-expression-operators>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:65
# 66d22cace4f1456cb58292bc936c53cf
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:69
# dff4af137f99442bb779065e5d73826f
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :term:`accumulator` expressions. The accumulator expressions, used with the :pipeline:`$group` pipeline operator, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:76
# 928a17c4baa847bda6dfc674da69bac6
msgid "For the expression operators, see :ref:`aggregation-expression-operators`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:82
# 5dbe89d84d1e4f8c891551a59e69e89d
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# c40702cf3e9b4ad488ef5c65839eadad
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:92
# 8ee39271567e4a92830fd0a1967b5c77
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:94
# 0a8fdf18abda4c20ad344185cf2619af
msgid "The :pipeline:`$match`, :pipeline:`$sort`, :pipeline:`$limit`, and :pipeline:`$skip` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline **before** any of the following aggregation operators: :pipeline:`$project`, :pipeline:`$unwind`, and :pipeline:`$group`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# b9ee67a387da49d3a2dd098f0a6e8ad7
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:106
# 215c134668804898b06de39597ee6ff7
msgid "For unsharded collections, when the aggregation pipeline only needs to access the indexed fields to fulfill its operations, an index can :ref:`cover <read-operations-covered-query>` the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:0
# 861d622f31c245e1b4a5b57855964324
msgid "Example"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:112
# 4aaf0de1128d41b2b599f2acf71e0888
msgid "Consider the following index on the ``orders`` collection:"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:118
# d4818ffd85de41079df33969e3273433
msgid "This index can cover the following aggregation pipeline operation because MongoDB does not need to inspect the data outside of the index to fulfill the operation:"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:131
# e374a87e53b24f96a200e0379319872b
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:133
# 8b163d2c6d914b01a195c461076f615b
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:140
# 989469acaa9e4da98b4f84466ff7a161
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:147
# 5a093b04973e46c0803d8dd0b5912e0a
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:149
# b7e153383a66488f8a665d448e3d4ed6
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :ref:`aggregation-pipeline-sequence-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:153
# 077aee5e27a44d17ad1432364a1c34e4
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

