# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-architectures.txt:6
# db8a9a6e982a486f9f6689045ea9f23e
msgid "Replica Set Deployment Architectures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:10
# f330d7116dd1411ba7ba83fd80081ca1
msgid "The architecture of a :term:`replica set <replica set>` affects the set's capacity and capability. This document provides strategies for replica set deployments and describes common architectures."
msgstr ""

#: ../source/core/replica-set-architectures.txt:14
# 12caac8f85c842aea5daf28154419ccc
msgid "The standard replica set deployment for production system is a three-member replica set. These sets provide redundancy and fault tolerance. Avoid complexity when possible, but let your application requirements dictate the architecture."
msgstr ""

#: ../source/core/replica-set-architectures.txt:20
# d5d69156349a41e8a6c0537b441e4d11
msgid "Strategies"
msgstr ""

#: ../source/core/replica-set-architectures.txt:23
# b1079bd88d694adaa1f417371c14bd46
msgid "Determine the Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:25
# 1251eece2b17402db72b7b8348b0876a
msgid "Add members in a replica set according to these strategies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:28
# d32cc9eedb5947c5a123389c74cea71b
msgid "Deploy an Odd Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:30
# c462b67ebb1344fe8e95e4c4534c711e
msgid "An odd number of members ensures that the replica set is always able to elect a primary. If you have an even number of members, add an arbiter to get an odd number. :term:`Arbiters <arbiter>` do not store a copy of the data and require fewer resources. As a result, you may run an arbiter on an application server or other shared process."
msgstr ""

#: ../source/core/replica-set-architectures.txt:39
# 820ae6cdb7104af08ebe471eae181374
msgid "Consider Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:41
# 8023bed3fbb5464eb95bbddc83ab237d
msgid "*Fault tolerance* for a replica set is the number of members that can become unavailable and still leave enough members in the set to elect a primary. In other words, it is the difference between the number of members in the set and the majority needed to elect a primary. Without a primary, a replica set cannot accept write operations. Fault tolerance is an effect of replica set size, but the relationship is not direct. See the following table:"
msgstr ""

#: ../source/core/replica-set-architectures.txt:53
# c7e5df82199e40e39b028d64f99381de
msgid "Number of Members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:55
# bde31ab6ff2d42b3863df0a74e38d248
msgid "Majority Required to Elect a New Primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:57
# 2b6666552ddc420ea73d276b544b2794
msgid "Fault Tolerance."
msgstr ""

#: ../source/core/replica-set-architectures.txt:59
#: ../source/core/replica-set-architectures.txt:67
#: ../source/core/replica-set-architectures.txt:73
# ab88df68a6124f4eb77614859a94d3e4
# 9df8e056f6f94523bd46453c47dcdc04
# 62641f593bd348518fd1badbdeba64fa
msgid "3"
msgstr ""

#: ../source/core/replica-set-architectures.txt:61
#: ../source/core/replica-set-architectures.txt:75
#: ../source/core/replica-set-architectures.txt:81
# 1532fc110d1e4828a208d21e9917c43f
# fd175cacb90d4528a7328f7d47d5d36e
# d867e6b70fa94597a54d68b45a4e335f
msgid "2"
msgstr ""

#: ../source/core/replica-set-architectures.txt:63
#: ../source/core/replica-set-architectures.txt:69
# c5ba31fba219451ba0b9a207a8dddef9
# 197c09076249457a99931c94a4eeff10
msgid "1"
msgstr ""

#: ../source/core/replica-set-architectures.txt:65
#: ../source/core/replica-set-architectures.txt:79
# 7870f8b8d87a4525b3276ee122ee6c3d
# 1e0b12c935024d2aad18ced6e1b8eef3
msgid "4"
msgstr ""

#: ../source/core/replica-set-architectures.txt:71
# c431e243e9304bb2b28eecdff39df3dd
msgid "5"
msgstr ""

#: ../source/core/replica-set-architectures.txt:77
# 996d6cc826624dea8495ba162bef2fbb
msgid "6"
msgstr ""

#: ../source/core/replica-set-architectures.txt:83
# 5d1771c7669647ce9395885c0fc7b97e
msgid "Adding a member to the replica set does not *always* increase the fault tolerance. However, in these cases, additional members can provide support for dedicated functions, such as backups or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:88
# 6444831b7e934592b9e8e1d75f493495
msgid "Use Hidden and Delayed Members for Dedicated Functions"
msgstr ""

#: ../source/core/replica-set-architectures.txt:90
# 5a13e604c70d4e50b4926e9905a2428c
msgid "Add :ref:`hidden <replica-set-hidden-members>` or :ref:`delayed <replica-set-delayed-members>` members to support dedicated functions, such as backup or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:95
# 2fbad2bd8092445580a424ea016744c9
msgid "Load Balance on Read-Heavy Deployments"
msgstr ""

#: ../source/core/replica-set-architectures.txt:97
# 899ed25309434e308d4b314eaae65d69
msgid "In a deployment with *very* high read traffic, you can improve read throughput by distributing reads to secondary members. As your deployment grows, add or move members to alternate data centers to improve redundancy and availability."
msgstr ""

#: ../source/core/replica-set-architectures.txt:102
# 9b92ec07e4dd412eb07a6405b8c71458
msgid "Always ensure that the main facility is able to elect a primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:105
# 7ab8c23ea537437b911471f29d0902e0
msgid "Add Capacity Ahead of Demand"
msgstr ""

#: ../source/core/replica-set-architectures.txt:107
# 42ad9e177ac64aaa9af164d2a05ce740
msgid "The existing members of a replica set must have spare capacity to support adding a new member. Always add new members before the current demand saturates the capacity of the set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:114
# cb8606771abd471b957868f764942291
msgid "Determine the Distribution of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:117
# ff890afeab014cbbb7e647931cc42cb1
msgid "Distribute Members Geographically"
msgstr ""

#: ../source/core/replica-set-architectures.txt:119
# ca691d16fb44420ca97cdb130e4a5540
msgid "To protect your data if your main data center fails, keep at least one member in an alternate data center. Set these members' :data:`~local.system.replset.members[n].priority` to 0 to prevent them from becoming primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:125
# 0124f0f16304464baaebc75c6da2be66
msgid "Keep a Majority of Members in One Location"
msgstr ""

#: ../source/core/replica-set-architectures.txt:127
# 9c2741c13b68427eb3275434152702bb
msgid "When a replica set has members in multiple data centers, network partitions can prevent communication between data centers. To replicate data, members must be able to communicate to other members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:131
# a3a9e4b59d9d4f44aec2426e13749e2c
msgid "In an election, members must see each other to create a majority. To ensure that the replica set members can confirm a majority and elect a primary, keep a majority of the setâ€™s members in one location."
msgstr ""

#: ../source/core/replica-set-architectures.txt:137
# 9e1bd2cf512f40a1a9a88e3ec0a1a6d0
msgid "Target Operations with Tags"
msgstr ""

#: ../source/core/replica-set-architectures.txt:139
# ba1733c1137e4c39b9c96e65f57db423
msgid "Use :ref:`replica set tags <replica-set-configuration-tag-sets>` to ensure that operations replicate to specific data centers. Tags also support targeting read operations to specific machines."
msgstr ""

#: ../source/core/replica-set-architectures.txt:143
# c9d39a45107f495ea1e2a155ebd13999
msgid ":doc:`/data-center-awareness` and :doc:`/core/operational-segregation`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:147
# 0dfefec3f35d4780b2aecaa68d7c03e8
msgid "Use Journaling to Protect Against Power Failures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:149
# 29c5fd358eac4b248812426d81dfbaba
msgid "Enable journaling to protect data against service interruptions. Without journaling MongoDB cannot recover data after unexpected shutdowns, including power failures and unexpected reboots."
msgstr ""

#: ../source/core/replica-set-architectures.txt:153
# 75295f1eebc74e13ba8f47fca477155f
msgid "All 64-bit versions of MongoDB after version 2.0 have journaling enabled by default."
msgstr ""

#: ../source/core/replica-set-architectures.txt:157
# a34ab6f52ec3490bab79a8e6dbedd4ef
msgid "Replica Set Naming"
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
# 51ba74a2bae544b88a1d52ba42051973
msgid "If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name."
msgstr ""

#: ../source/core/replica-set-architectures.txt:162
# 3344d91dd6354365a991a6718059257a
msgid "Deployment Patterns"
msgstr ""

#: ../source/core/replica-set-architectures.txt:164
# 8db7455df3ce4dd6ae3bb531d35aa1c8
msgid "The following documents describe common replica set deployment patterns. Other patterns are possible and effective depending on the the application's requirements. If needed, combine features of each architecture in your own deployment:"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:6
# dedca1ee9651408d9d90de0c061d4684
msgid ":doc:`/core/replica-set-architecture-three-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:4
# fc2b29e797bd48258678890f96b79843
msgid "Three-member replica sets provide the minimum recommended architecture for a replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:12
# 4f2f2495c2ab427883ffe88fc56bd57d
msgid ":doc:`/core/replica-set-architecture-four-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:9
# 3015bc84fab34ccd9c29cdc626e7faab
msgid "Four or more member replica sets provide greater redundancy and can support greater distribution of read operations and dedicated functionality."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:16
# ed48dc6a175d41ccb9699c920d2fe761
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:15
# 41431a93f78d4acd85b76d516f42f796
msgid "Geographically distributed sets include members in multiple locations to protect against facility-specific failures, such as power outages."
msgstr ""

