# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# 0c71fb13b21a4165b6f63bc187d731f2
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:9
# 48167e13dd844bd191b77ac141d0b70e
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:14
# acc72e080d2b4e0aab660c0368fab335
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:16
# c57bce8efbc142028e71e9afa6e6e113
msgid "If your application queries a collection on a particular field or fields, then an index on the queried field or fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB</core/indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
#: ../source/core/query-optimization.txt:0
# cb8f16c0bd674f48be7001a5c3bdafdb
# d6ad0c964bf74bc8a5de7226f1779866
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:30
# ad6bc9b39219458f84c79869d7a6cb51
msgid "To improve the performance of this query, add an ascending, or a descending, index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.ensureIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:40
# 1c89d73e453d4641b1a458753f5a1567
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:43
# f4db660eaa0f497f9e93f0028762c995
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:46
# 45d26ee2d3694438b8daa57ec83d4a18
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.ensureIndex()` and :doc:`/administration/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:53
# e213fe57040c4baa92d2f9ff35bc814c
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:61
# 589f35d53c42433e8153ff74cb10e4f1
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:63
# 129784febd644d3aa755e6f58ec68a16
msgid "Some query operations are not selective. These operations cannot use indexes effectively or cannot use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:66
# c0b7a685d17b41ba974c73ddc026c8f3
msgid "The inequality operators :query:`$nin` and :query:`$ne` are not very selective, as they often match a large portion of the index. As a result, in most cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:72
# dd805202f00342f2b826d491e69c23ac
msgid "Queries that specify regular expressions, with inline JavaScript regular expressions or :query:`$regex` operator expressions, cannot use an index with one exception. Queries that specify regular expression *with anchors* at the beginning of a string *can* use an index."
msgstr ""

#: ../source/core/query-optimization.txt:81
# e3eb39c5fbe249fe9e0700480d48f463
msgid "Covering a Query"
msgstr ""

#: ../source/core/query-optimization.txt:83
# ab593783d7354bc9b419d8c35012ac07
msgid "An index :ref:`covers <indexes-covered-queries>` a query, a *covered query*, when:"
msgstr ""

#: ../source/core/query-optimization.txt:86
# b9fba62caa744257b5d90481d43b0830
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of that index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:89
# e2b54164a7ec41028dda151ba64c8767
msgid "all the fields returned in the documents that match the query are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:92
# 0995ffc79d31473b8a4de626cf64cab2
msgid "For these queries, MongoDB does not need to inspect documents outside of the index. This is often more efficient than inspecting entire documents."
msgstr ""

#: ../source/core/query-optimization.txt:98
# 37774bbc79714339af9ec0a7f20764a5
msgid "Given a collection ``inventory`` with the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:105
# 4a906f1b30164ebbbba38313e2c5b11d
msgid "This index will cover the following query on the ``type`` and ``item`` fields, which returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:113
# a6dfa8bdfb884a35bcae2890f65b7b72
msgid "However, the index will **not** cover the following query, which returns the ``item`` field **and** the ``_id`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:121
# b04fd3fdffe1417d818b82e0eb8ab98f
msgid "See :ref:`indexes-covered-queries` for more information on the behavior and use of covered queries."
msgstr ""

