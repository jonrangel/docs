# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
# 002d96db37aa47bf983c18d117a9b538
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:7
# 9c503d35348a4202aebf287fcbbfa94f
msgid "When deploying MongoDB in production, you should have a strategy for capturing and restoring backups in the case of data loss events. MongoDB provides backup methods to support different requirements and configurations:"
msgstr ""

#: ../source/core/backups.txt:12
# 8f3651f02ba3422aa8e56374d8b6094c
msgid ":ref:`backup-with-mms`"
msgstr ""

#: ../source/core/backups.txt:13
# f8476c435a4f418187f4f49ab5b7d577
msgid ":ref:`backup-with-file-copies`"
msgstr ""

#: ../source/core/backups.txt:14
# 15a31f0c61fc45d39195c8912eb96995
msgid ":ref:`backup-with-mongodump`"
msgstr ""

#: ../source/core/backups.txt:17
# 0e654e3f536f4974a7530ef60f8f5267
msgid "Backup Methods"
msgstr ""

#: ../source/core/backups.txt:22
# 76a09b1acc334236a2294f411ee1b1ab
msgid "Backups with the MongoDB Management Service (MMS)"
msgstr ""

#: ../source/core/backups.txt:24
# 42105aece1a649bc86e09a44eb3983a4
msgid "The `MongoDB Management Service <https://mms.10gen.com/?pk_campaign=MongoDB-Org&pk_kwd=Backup-Docs>`_ supports backup and restore for MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:28
# 6da299792d4d4c3eb5187f3055a555a9
msgid "MMS continually backs up MongoDB replica sets and sharded systems by reading the oplog data from your MongoDB cluster."
msgstr ""

#: ../source/core/backups.txt:31
# 8ead7ca8fe0841e798f83e20e779e9cb
msgid "MMS Backup offers point in time recovery of MongoDB replica sets and a consistent snapshot of sharded systems."
msgstr ""

#: ../source/core/backups.txt:34
# 6b6fdef7570348abb108248aef57faa9
msgid "MMS achieves point in time recovery by storing oplog data so that it can create a restore for any moment in time in the last 24 hours for a particular replica set."
msgstr ""

#: ../source/core/backups.txt:38
# 1e75f3d85f9440da8efd6d62af69485b
msgid "For sharded systems, MMS does not provide restores for arbitrary moments in time. MMS does provide periodic consistent snapshots of the entire sharded cluster. Sharded cluster snapshots are difficult to achieve with other MongoDB backup methods."
msgstr ""

#: ../source/core/backups.txt:43
# b1123c5433c34d60b05fa5a5deaafb0f
msgid "To restore a MongoDB cluster from an MMS Backup snapshot, you download a compressed archive of your MongoDB data files and distribute those files before restarting the :program:`mongod` processes."
msgstr ""

#: ../source/core/backups.txt:47
# 0117bc3cc75543aeaf11c4f3a3ad00d9
msgid "To get started with MMS Backup `sign up for MMS <http://mms.mongodb.com>`_, and consider the complete documentation of MMS see the  :mms:`MMS Manual </>`."
msgstr ""

#: ../source/core/backups.txt:55
# 6dc2d8f4e69449d184814c88681a4a25
msgid "Backup by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:57
# 792d80c48a0d4f3e89d1c7fd509f9f16
msgid "You can create a backup by copying MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:60
# c79a209b26f941cd8632352ca1cc12e4
msgid "If the volume where MongoDB stores data files supports point in time snapshots, you can use these snapshots to create backups of a MongoDB system at an exact moment in time."
msgstr ""

#: ../source/core/backups.txt:64
# 700b734878d7477c9571d413b178dbe4
msgid "File systems snapshots are an operating system volume manager feature, and are not specific to MongoDB. The mechanics of snapshots depend on the underlying storage system. For example, if you use Amazonâ€™s EBS storage system for EC2 supports snapshots. On Linux the LVM manager can create a snapshot."
msgstr ""

#: ../source/core/backups.txt:70
# 9b50c42023584a4f9281380307621e73
msgid "To get a correct snapshot of a running :program:`mongod` process, you must have journaling enabled and the journal must reside on the same logical volume as the other MongoDB data files. Without journaling enabled, there is no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:76
# 58e19c38a09d45a2b32991a49b199973
msgid "To get a consistent snapshot of a sharded system, you must disable the balancer and capture a snapshot from every shard and a config server at approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:80
# 9a7376ec538d47bf93855bdfcaa443c0
msgid "If your storage system does not support snapshots, you can copy the files directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple files is not an atomic operation, you must stop all writes to the :program:`mongod` before copying the files. Otherwise, you will copy the files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:86
# 046174cbd7d1465a8c96aa120c201c31
msgid "Backups produced by copying the underlying data do not support point in time recovery for replica sets and are difficult to manage for larger sharded clusters. Additionally, these backups are larger because they include the indexes and duplicate underlying storage padding and fragmentation. :program:`mongodump` by contrast create smaller backups."
msgstr ""

#: ../source/core/backups.txt:93
# 3bbfa6a15bc5446eba90fc2cd330fc15
msgid "For more information, see the :doc:`/tutorial/backup-with-filesystem-snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` for complete instructions on using LVM to create snapshots. Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:103
# 984f81cf44a44a4c8df28fa6d4cb1db1
msgid "Backup with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:105
# b2de3ce12d9d4fbf89d98facf27b1231
msgid "The :program:`mongodump` tool reads data from a MongoDB database and creates high fidelity BSON files. The :program:`mongorestore` tool can populate a MongoDB database with the data from these BSON files. These tools are simple and efficient for backing up small MongoDB deployments, but are not ideal for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:112
# af7c30dc15c6472eb614d2ea37556947
msgid ":program:`mongodump` and :program:`mongorestore` can operate against a running :program:`mongod` process, and can manipulate the underlying data files directly. By default, :program:`mongodump` does not capture the contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:117
# 993673c3968645e79edf4b643d6e7028
msgid ":program:`mongodump` only captures the documents in the database. The resulting backup is space efficient, but :program:`mongorestore` or :program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:121
# fd319e34022f43bba38694af19cca81f
msgid "When connected to a MongoDB instance, :program:`mongodump` can adversely affect :program:`mongod` performance. If your data is larger than system memory, the queries will push the working set out of memory."
msgstr ""

#: ../source/core/backups.txt:126
# 163c4766499e4eb2a468e3bf89b5f04e
msgid "To mitigate the impact of :program:`mongodump` on the performance of the replica set, use :program:`mongodump` to capture backups from a :doc:`secondary </core/replica-set-secondary>` member of a replica set. Alternatively, you can shut down a secondary and use :program:`mongodump` with the data files directly. If you shut down a secondary to capture data with :program:`mongodump` ensure that the operation can complete before its oplog becomes too stale to continue replicating."
msgstr ""

#: ../source/core/backups.txt:135
# 9ff5dbf4c68d4744b63615b8879e801f
msgid "For replica sets, :program:`mongodump` also supports a point in time feature with the :option:`--oplog <mongodump --oplog>` option. Applications may continue modifying data while :program:`mongodump` captures the output. To restore a point in time backup created with :option:`--oplog <mongodump --oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:143
# c42c9b3503d2482d8231a65dedf9d17b
msgid "If applications modify data while :program:`mongodump` is creating a backup, :program:`mongodump` will compete for resources with those applications."
msgstr ""

#: ../source/core/backups.txt:147
# 2b98e8abdcbd49318d8f3f4cdd92aacf
msgid "See :doc:`/tutorial/backup-with-mongodump`, :doc:`/tutorial/backup-small-sharded-cluster-with-mongodump`, and :doc:`/tutorial/backup-sharded-cluster-with-database-dumps` for more information."
msgstr ""

#: ../source/core/backups.txt:153
# 167fe6bb99ae4237a9b201589c3edd61
msgid "Further Reading"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:7
# 2f9e59c3198d4429a29feb3fb5164593
msgid ":doc:`/tutorial/backup-with-filesystem-snapshots`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:4
# 65fd365137cf45ebb812710e568ec742
msgid "An outline of procedures for creating MongoDB data set backups using system-level file snapshot tool, such as :term:`LVM` or native storage appliance tools."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:13
# 4cc9165986614637abbac896cb1bb77c
msgid ":doc:`/tutorial/restore-replica-set-from-backup`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:10
# dc97287e6c9f4fbdbf1adb7ae0881ee6
msgid "Describes procedure for restoring a replica set from an archived backup such as a :program:`mongodump` or `MMS Backup <https://mms.mongodb.com/?pk_campaign=mongodb-docs-admin-tutorials>`_ file."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:18
# 302b57979a23446f95e0615bf82dc524
msgid ":doc:`/tutorial/backup-with-mongodump`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:16
# 29386ae3319d41c8823c7e4193242607
msgid "The procedure for writing the contents of a database to a BSON (i.e. binary) dump file for backing up MongoDB databases."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:23
# 17962376798b432bb7e1eb11abb85582
msgid ":doc:`/administration/backup-sharded-clusters`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:21
# a4ba32c80ee54e45b70c308c821d81ed
msgid "Detailed procedures and considerations for backing up sharded clusters and single shards."
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# bb00e5bcce2a4ce98d7ab4a21db108bf
msgid ":doc:`/tutorial/recover-data-following-unexpected-shutdown`"
msgstr ""

#: ../source/includes/toc/dfn-list-administration-backup-and-recovery.rst:26
# b96868b8af034aad82af8f8d99453a6c
msgid "Recover data from MongoDB data files that were not properly closed or have an invalid state."
msgstr ""

