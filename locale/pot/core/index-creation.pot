# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-creation.txt:7
# d0a05af1e3604076945d69283fb1af05
msgid "Index Creation"
msgstr ""

#: ../source/core/index-creation.txt:11
# bd3dbea8a0134529a2caab78c9d79d63
msgid "MongoDB provides several options that *only* affect the creation of the index. Specify these options in a document as the second argument to the :method:`db.collection.ensureIndex()` method. This section describes the uses of these creation options and their behavior."
msgstr ""

#: ../source/core/index-creation.txt:0
# b4b716993faa4c48a488599823bf3eec
msgid "Related"
msgstr ""

#: ../source/core/index-creation.txt:18
# 7d2b9e21da1c4c9aa44707ee43a555a2
msgid "Some options that you can specify to :method:`~db.collection.ensureIndex()` options control the :doc:`properties of the index </core/index-properties>`, which are *not* index creation options. For example, the :doc:`unique </core/index-unique>` option affects the behavior of the index after creation."
msgstr ""

#: ../source/core/index-creation.txt:25
# bdcb778af3264ec3a2f08de70cd3e72b
msgid "For a detailed description of MongoDB's index types, see :doc:`/core/index-types` and :doc:`/core/index-properties` for related documentation."
msgstr ""

#: ../source/core/index-creation.txt:33
# 6c413f9740594ce8bcb0051cec6b5981
msgid "Background Construction"
msgstr ""

#: ../source/core/index-creation.txt:35
# 8bcec36ffbfc4f8dae7ae2dbd97b7f17
msgid "By default, creating an index blocks all other operations on a database. When building an index on a collection, the database that holds the collection is unavailable for read or write operations until the index build completes. Any operation that requires a read or write lock on all databases (e.g. :command:`listDatabases`) will wait for the foreground index build to complete."
msgstr ""

#: ../source/core/index-creation.txt:42
# 61d6d7ee75a945bcaf17746daac25149
msgid "For potentially long running index building operations, consider the ``background`` operation so that the MongoDB database remains available during the index building operation. For example, to create an index in the background of the ``zipcode`` field of the ``people`` collection, issue the following:"
msgstr ""

#: ../source/core/index-creation.txt:52
# 1405e4af441140e69962734f2a38353a
msgid "By default, ``background`` is ``false`` for building MongoDB indexes."
msgstr ""

#: ../source/core/index-creation.txt:54
# bfbcd3b9c7bf4c7494e24b30600be59d
msgid "You can combine the background option with other options, as in the following:"
msgstr ""

#: ../source/core/index-creation.txt:62
# 7b46e7af6521468eb4cd2efbe8faa81a
msgid "Behavior"
msgstr ""

#: ../source/core/index-creation.txt:64
# 4ec83ca8669843b2b88fbc701cac5932
msgid "As of MongoDB version 2.4, a :program:`mongod` instance can build more than one index in the background concurrently."
msgstr ""

#: ../source/core/index-creation.txt:67
# dc0675dda3094fa2baf4af2411462a38
msgid "Before 2.4, a :program:`mongod` instance could only build one background index per database at a time."
msgstr ""

#: ../source/core/index-creation.txt:71
# 9475ab584fe3458b8f85d176cba823fd
msgid "Before 2.2, a single :program:`mongod` instance could only build one index at a time."
msgstr ""

#: ../source/core/index-creation.txt:75
# a810748834ad410ebd878fb56c1e7b18
msgid "Background indexing operations run in the background so that other database operations can run while creating the index. However, the :program:`mongo` shell session or connection where you are creating the index *will* block until the index build is complete. To continue issuing commands to the database, open another connection or :program:`mongo` instance."
msgstr ""

#: ../source/core/index-creation.txt:82
# b40acba3b7ab4fd39d0aae9182072357
msgid "Queries will not use partially-built indexes: the index will only be usable once the index build is complete."
msgstr ""

#: ../source/core/index-creation.txt:87
# 233318cdd3624752a000a80a47608693
msgid "If MongoDB is building an index in the background, you cannot perform other administrative operations involving that collection, including running :dbcommand:`repairDatabase`, dropping the collection (i.e. :method:`db.collection.drop()`), and running :dbcommand:`compact`. These operations will return an error during background index builds."
msgstr ""

#: ../source/core/index-creation.txt:95
# 68ccda51317549aaa1ee4487b58fbb65
msgid "Performance"
msgstr ""

#: ../source/core/index-creation.txt:97
# 6ceafe9dce0a4970919a7a5bd252c9d0
msgid "The background index operation uses an incremental approach that is slower than the normal \"foreground\" index builds. If the index is larger than the available RAM, then the incremental process can take *much* longer than the foreground build."
msgstr ""

#: ../source/core/index-creation.txt:102
# 758706f86e9742f3ac613ddb0d20bb49
msgid "If your application includes :method:`ensureIndex() <db.collection.ensureIndex()>` operations, and an index *doesn't* exist for other operational concerns, building the index can have a severe impact on the performance of the database."
msgstr ""

#: ../source/core/index-creation.txt:108
# 4e6a28d93b814ab18ec40c4064f1ad6b
msgid "To avoid performance issues, make sure that your application checks for the indexes at start up using the :method:`~db.collection.getIndexes()` method or the :api:`equivalent method for your driver <>` and terminates if the proper indexes do not exist. Always build indexes in production instances using separate application code, during designated maintenance windows."
msgstr ""

#: ../source/core/index-creation.txt:118
# 7559e6e5843a46aba2dde5a31c1b1129
msgid "Building Indexes on Secondaries"
msgstr ""

#: ../source/core/index-creation.txt:120
# 67b188176174462f8ba0d7875fe53a0c
msgid "Secondary members can now build indexes in the background. Previously all index builds on secondaries were in the foreground."
msgstr ""

#: ../source/core/index-creation.txt:125
# 9d504bcf2e164a52bddf9b5f280f9283
msgid "Background index operations on a :term:`replica set` :term:`secondaries <secondary>` begin after the :term:`primary` completes building the index. If MongoDB builds an index in the background on the primary, the secondaries will then build that index in the background."
msgstr ""

#: ../source/core/index-creation.txt:131
# 630aa0d0622a46a381cfaca18b3d8ef7
msgid "To build large indexes on secondaries the best approach is to restart one secondary at a time in :term:`standalone` mode and build the index. After building the index, restart as a member of the replica set, allow it to catch up with the other members of the set, and then build the index on the next secondary. When all the secondaries have the new index, step down the primary, restart it as a standalone, and build the index on the former primary."
msgstr ""

#: ../source/core/index-creation.txt:139
# cc31d0ecce9d48569c2f962a95538f75
msgid "The amount of time required to build the index on a secondary must be within the window of the :term:`oplog`, so that the secondary can catch up with the primary."
msgstr ""

#: ../source/core/index-creation.txt:143
# 5d2ddb658ac543688afe6f0e546f9428
msgid "Indexes on secondary members in \"recovering\" mode are always built in the foreground to allow them to catch up as soon as possible."
msgstr ""

#: ../source/core/index-creation.txt:146
# 6ddb5f40d3394388a49e9247b6480388
msgid "See :ref:`index-building-replica-sets` for a complete procedure for building indexes on secondaries."
msgstr ""

#: ../source/core/index-creation.txt:154
# 5b19e7f956324d9a9a7768f366345d2c
msgid "Drop Duplicates"
msgstr ""

#: ../source/core/index-creation.txt:156
# 439e1f0b69724fafa9f9fb9cdcd71180
msgid "MongoDB cannot create a :ref:`unique index <index-type-unique>` on a field that has duplicate values. To force the creation of a unique index, you can specify the ``dropDups`` option, which will only index the first occurrence of a value for the key, and delete all subsequent values."
msgstr ""

#: ../source/core/index-creation.txt:164
# 023e9e97a0d24e12ad6118712af2aef6
msgid "As in all unique indexes, if a document does not have the indexed field, MongoDB will include it in the index with a \"null\" value."
msgstr ""

#: ../source/core/index-creation.txt:167
# 3b19d16f99ee419b81eb156d8f1a50d5
msgid "If subsequent fields *do not* have the indexed field, and you have set ``{dropDups: true}``, MongoDB will remove these documents from the collection when creating the index. If you combine ``dropDups`` with the :ref:`sparse <index-type-sparse>` option, this index will only include documents in the index that have the value, and the documents without the field will remain in the database."
msgstr ""

#: ../source/core/index-creation.txt:174
# 2d2cb9a3a0ae4053a54152b0e5496ece
msgid "To create a unique index that drops duplicates on the ``username`` field of the ``accounts`` collection, use a command in the following form:"
msgstr ""

#: ../source/core/index-creation.txt:183
# 586b58b1437a4597ae39516b7129054b
msgid "Specifying ``{ dropDups: true }`` will delete data from your database. Use with extreme caution."
msgstr ""

#: ../source/core/index-creation.txt:186
# ea6951029d9e49cd91f8b597f751b5f0
msgid "By default, ``dropDups`` is ``false``."
msgstr ""

#: ../source/core/index-creation.txt:192
# 24bc2ef84bb346cf88b7ac339cecd165
msgid "Index Names"
msgstr ""

#: ../source/core/index-creation.txt:196
# 653e9e1f480746b398c618db4c9c2a65
msgid "The default name for an index is the concatenation of the indexed keys and each key's direction in the index, 1 or -1."
msgstr ""

#: ../source/core/index-creation.txt:0
#: ../source/core/index-creation.txt:0
# f6908c5f82bf41a1ac8b14d6ae9d0b01
# c1c8c7a5cf7e4ff587e2da854882492c
msgid "Example"
msgstr ""

#: ../source/core/index-creation.txt:206
# b0d186b02c24441c8093735e15681b6c
msgid "The resulting index is named: ``item_1_quantity_-1``."
msgstr ""

#: ../source/core/index-creation.txt:208
# 86f44f4a448d483bbf910a99a77be767
msgid "Optionally, you can specify a name for an index instead of using the default name."
msgstr ""

#: ../source/core/index-creation.txt:218
# 1ca3c20eb7f04967b093fcced65d8b66
msgid "The resulting index has the name ``inventory``."
msgstr ""

#: ../source/core/index-creation.txt:220
# b29ecc6e3e1f4c9b8677b6cfcc352e0c
msgid "To view the name of an index, use the :method:`getIndexes() <db.collection.getIndexes()>` method."
msgstr ""

#: ../source/core/index-creation.txt:1
#: ../source/core/index-creation.txt:29
#: ../source/core/index-creation.txt:149
#: ../source/core/index-creation.txt:150
#: ../source/core/index-creation.txt:188
# b31e93d81f3b484c9e8e99355f7ac21b
# e50a26f46faa4dd4ab2ee8cd5f0de67b
# dc72351b38274089a9c1fc833c57662a
# 6a93c443c8384597a01188fda3188103
# fe558c80505046ae9658f0ab8b9f3126
msgid "index"
msgstr ""

#: ../source/core/index-creation.txt:1
# b31e93d81f3b484c9e8e99355f7ac21b
msgid "options"
msgstr ""

#: ../source/core/index-creation.txt:29
# e50a26f46faa4dd4ab2ee8cd5f0de67b
msgid "background creation"
msgstr ""

#: ../source/core/index-creation.txt:149
# dc72351b38274089a9c1fc833c57662a
msgid "duplicates"
msgstr ""

#: ../source/core/index-creation.txt:150
# 6a93c443c8384597a01188fda3188103
msgid "drop duplicates"
msgstr ""

#: ../source/core/index-creation.txt:188
# fe558c80505046ae9658f0ab8b9f3126
msgid "name"
msgstr ""

