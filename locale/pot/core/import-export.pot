# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/import-export.txt:3
# e921141b23594ed5974117ee2875aecf
msgid "Import and Export MongoDB Data"
msgstr ""

#: ../source/core/import-export.txt:10
# 98e2cc06819e4517bc0a50ff51453de7
msgid "This document provides an overview of the import and export programs included in the MongoDB distribution. These tools are useful when you want to backup or export a portion of your data without capturing the state of the entire database, or for simple data ingestion cases. For more complex data migration tasks, you may want to write your own import and export scripts using a client :term:`driver` to interact with the database itself. For disaster recovery protection and routine database backup operation, use full :doc:`database instance backups </core/backups>`."
msgstr ""

#: ../source/core/import-export.txt:22
# 450588a55bb743fab335b0008e43f296
msgid "Because these tools primarily operate by interacting with a running :program:`mongod` instance, they can impact the performance of your running database."
msgstr ""

#: ../source/core/import-export.txt:26
# f41c2484129e47e183638116ce5a653f
msgid "Not only do these processes create traffic for a running database instance, they also force the database to read all data through memory. When MongoDB reads infrequently used data, it can supplant more frequently accessed data, causing a deterioration in performance for the database's regular workload."
msgstr ""

#: ../source/core/import-export.txt:32
# 2c5b605efa254287a261b8387f03ffe0
msgid ":doc:`/core/backups` or :mms:`MMS Backup Manual </backup>` for more information on backing up MongoDB instances. Additionally, consider the following references for the MongoDB import/export tools:"
msgstr ""

#: ../source/core/import-export.txt:37
# 111ff3e75ecf4c0c918dda52f11c0bd2
msgid ":doc:`/reference/program/mongoimport`"
msgstr ""

#: ../source/core/import-export.txt:38
# 8a0b639656f64205aeae987efeba1525
msgid ":doc:`/reference/program/mongoexport`"
msgstr ""

#: ../source/core/import-export.txt:39
# 8e94fabf8f8649d8921fd8fd937fd2a9
msgid ":doc:`/reference/program/mongorestore`"
msgstr ""

#: ../source/core/import-export.txt:40
# 01f35c6a48974d69935b0f310be4d8b1
msgid ":doc:`/reference/program/mongodump`"
msgstr ""

#: ../source/core/import-export.txt:43
# 6ec7bc6a58c8417cb0e55d0088b8b135
msgid "Data Import, Export, and Backup Operations"
msgstr ""

#: ../source/core/import-export.txt:45
# 290059fbb6994468a82641631307b7fb
msgid "For resilient and non-disruptive backups, use a file system or block-level disk snapshot function, such as the methods described in the :doc:`/core/backups` document. The tools and operations discussed provide functionality that is useful in the context of providing some kinds of backups."
msgstr ""

#: ../source/core/import-export.txt:51
# a2fbf4b3bd5149ad88342708deff3f6d
msgid "In contrast, use import and export tools to backup a small subset of your data or to move data to or from a third party system. These backups may capture a small crucial set of data or a frequently modified section of data for extra insurance, or for ease of access."
msgstr ""

#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
#: ../source/includes/warning-type-fidelity-loss.rst:3
# f4f477fba2d0438a83247bf4179b6c12
# 7d1ca844e98d4394a85b79ed8396be8b
# d1eec484dbf54c6e81d193fea4232996
msgid ":program:`mongoimport` and :program:`mongoexport` do not reliably preserve all rich :term:`BSON` data types because :term:`JSON` can only represent a subset of the types supported by BSON. As a result, data exported or imported with these tools may lose some measure of fidelity. See :doc:`/reference/mongodb-extended-json` for more information."
msgstr ""

#: ../source/core/import-export.txt:58
# f43a373410a34b0fb6f840c9f674b79f
msgid "No matter how you decide to import or export your data, consider the following guidelines:"
msgstr ""

#: ../source/core/import-export.txt:61
# f39b388d2840428ab8f8f3547b0408d6
msgid "Label files so that you can identify the contents of the export or backup as well as the point in time the export/backup reflect."
msgstr ""

#: ../source/core/import-export.txt:64
# 1bf4a8546d9545ce9338d6140aef465f
msgid "Do not create or apply exports if the backup process itself will have an adverse effect on a production system."
msgstr ""

#: ../source/core/import-export.txt:67
# 8626873887844e2a99bca792e02b5704
msgid "Make sure that they reflect a consistent data state. Export or backup processes can impact data integrity (i.e. type fidelity) and consistency if updates continue during the backup process."
msgstr ""

#: ../source/core/import-export.txt:71
# b1fc7fec142441a89cce0dbcfadf1fd5
msgid "Test backups and exports by restoring and importing to ensure that the backups are useful."
msgstr ""

#: ../source/core/import-export.txt:75
# 043eb65c40bd4b71a8c53de2c6d9fb4b
msgid "Human Intelligible Import/Export Formats"
msgstr ""

#: ../source/core/import-export.txt:77
# 4a05093d446741378f0b62b5017c0961
msgid "This section describes a process to import/export a collection to a file in a :term:`JSON` or :term:`CSV` format."
msgstr ""

#: ../source/core/import-export.txt:80
# 5a8ee8c7767248cf878817bd8d9ad410
msgid "The examples in this section use the MongoDB tools :doc:`/reference/program/mongoimport` and :doc:`/reference/program/mongoexport`. These tools may also be useful for importing data into a MongoDB database from third party applications."
msgstr ""

#: ../source/core/import-export.txt:86
# a097c2d003f444f0a3a106eb75991878
msgid "If you want to simply copy a database or collection from one instance to another, consider using the :dbcommand:`copydb`, :dbcommand:`clone`, or :dbcommand:`cloneCollection` commands, which may be more suited to this task. The :program:`mongo` shell provides the :method:`db.copyDatabase()` method."
msgstr ""

#: ../source/core/import-export.txt:93
# 9419c27ef0a54274b489a91062cfbea4
msgid "Collection Export with :program:`mongoexport`"
msgstr ""

#: ../source/core/import-export.txt:97
# cd810405f421437982996ddb8629fabd
msgid "With the :program:`mongoexport` utility you can create a backup file. In the most simple invocation, the command takes the following form:"
msgstr ""

#: ../source/core/import-export.txt:105
# 82ff12ff42624eb382f71e54ea8a9706
msgid "This will export all documents in the collection named ``collection`` into the file ``collection.json``. Without the output specification (i.e. \":option:`--out collection.json <mongoexport --out>`\"), :program:`mongoexport` writes output to standard output (i.e. \"stdout\"). You can further narrow the results by supplying a query filter using the \":option:`--query <mongoexport --query>`\" and limit results to a single database using the \":option:`--db <mongoexport --db>`\" option. For instance:"
msgstr ""

#: ../source/core/import-export.txt:118
# 31c2682b33d44f4c926f793d7c819494
msgid "This command returns all documents in the ``sales`` database's ``contacts`` collection, with a field named ``field`` with a value of ``1``. Enclose the query in single quotes (e.g. ``'``) to ensure that it does not interact with your shell environment. The resulting documents will return on standard output."
msgstr ""

#: ../source/core/import-export.txt:124
# 7db628f4d17e4f3a9125c23653cab5fe
msgid "By default, :program:`mongoexport` returns one :term:`JSON document` per MongoDB document. Specify the \":option:`--jsonArray <mongoexport --jsonArray>`\" argument to return the export as a single :term:`JSON` array. Use the \":option:`--csv <mongoexport --csv>`\" file to return the result in CSV (comma separated values) format."
msgstr ""

#: ../source/core/import-export.txt:131
# 472c72c7a84045fca64ff2ff8ce974c4
msgid "If your :program:`mongod` instance is not running, you can use the \":option:`--dbpath <mongoexport --dbpath>`\" option to specify the location to your MongoDB instance's database files. See the following example:"
msgstr ""

#: ../source/core/import-export.txt:140
# d7b3ffaf0ccf427293a49d9a29db55f6
msgid "This reads the data files directly. This locks the data directory to prevent conflicting writes. The :program:`mongod` process must *not* be running or attached to these data files when you run :program:`mongoexport` in this configuration."
msgstr ""

#: ../source/core/import-export.txt:145
# 5ba0835185a6470285c56f63c1ae621b
msgid "The \":option:`--host <mongoexport --host>`\" and \":option:`--port <mongoexport --port>`\" options allow you to specify a non-local host to connect to capture the export. Consider the following example:"
msgstr ""

#: ../source/core/import-export.txt:153
# 34fe3f078f074055b17aa37cec4d84ec
msgid "On any :program:`mongoexport` command you may, as above specify username and password credentials as above."
msgstr ""

#: ../source/core/import-export.txt:157
# 66d0f34e75f942038638cba3299e1566
msgid "Collection Import with :program:`mongoimport`"
msgstr ""

#: ../source/core/import-export.txt:161
# c699093be7174b6da7bdb7041553fe50
msgid "To restore a backup taken with :program:`mongoexport`. Most of the arguments to :program:`mongoexport` also exist for :program:`mongoimport`. Consider the following command:"
msgstr ""

#: ../source/core/import-export.txt:169
# 79dd960d18bc433fa012aef8b7eed4dd
msgid "This imports the contents of the file ``collection.json`` into the collection named ``collection``. If you do not specify a file with the \":option:`--file <mongoimport --file>`\" option, :program:`mongoimport` accepts input over standard input (e.g. \"stdin.\")"
msgstr ""

#: ../source/core/import-export.txt:175
# aed103e958d54ac7aea343a5a81393e8
msgid "If you specify the \":option:`--upsert <mongoimport --upsert>`\" option, all of :program:`mongoimport` operations will attempt to update existing documents in the database and insert other documents. This option will cause some performance impact depending on your configuration."
msgstr ""

#: ../source/core/import-export.txt:181
# c4548b4561234b69a51a4c2ba11758c2
msgid "You can specify the database option :option:`--db <mongoimport --db>` to import these documents to a particular database. If your MongoDB instance is not running, use the \":option:`--dbpath <mongoimport --dbpath>`\" option to specify the location of your MongoDB instance's database files. Consider using the \":option:`--journal <mongoimport --journal>`\" option to ensure that :program:`mongoimport` records its operations in the journal. The ``mongod`` process must *not* be running or attached to these data files when you run :program:`mongoimport` in this configuration."
msgstr ""

#: ../source/core/import-export.txt:191
# 22cff2d386c242ba9002f052d401bdce
msgid "Use the \":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\" option to ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option provides the desired functionality in most cases: it avoids inserting blank fields in MongoDB documents."
msgstr ""

