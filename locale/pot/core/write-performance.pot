# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# b4f957fbc97f49c9bd8785feef25502c
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:8
# b6f960845cf941258878c132d5a7e108
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:10
# 4c684b46dc1440fbbbb81ecd51b3db23
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:15
# 07c608b83077443ab7d8ea602e89bd96
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:21
# 85c5d1af63284132b988f1a4defd5cfb
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:25
# 532c70f9c3364ca490912f91bfb7a69c
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:31
# 36c18459ab78411190711029663a3cda
msgid "Document Growth"
msgstr ""

#: ../source/core/write-performance.txt:33
# 9abb9e87e6894df5b84ec030bc652de6
msgid "If an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. These relocations take longer than in-place updates, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:41
# ff17b2cecbd34abc8ba379a227e8b0f4
msgid "Some update operations, such as the :update:`$inc` operation, do not cause an increase in document size. For these update operations, MongoDB can apply the updates in-place. Other update operations, such as the :update:`$push` operation, change the size of the document."
msgstr ""

#: ../source/core/write-performance.txt:46
# 38fb1c05b3734be68814bbec79577921
msgid "In-place-updates are significantly more efficient than updates that cause document growth. When possible, use :doc:`data models </core/data-models>` that minimize the need for document growth."
msgstr ""

#: ../source/core/write-performance.txt:50
# 1994675f31e34ac492bde440a95c15b7
msgid "See :doc:`/core/storage` for more information."
msgstr ""

#: ../source/core/write-performance.txt:53
# 5f19bf1ae3024117ae55ec8babe8508b
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:56
# acbafdce72724e3194813fad7ad2fbad
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:58
# ecc1c27919a24187ae2adda412d8c06b
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:64
# 383824f165cb4d9db48fceb08a00421f
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# 5ad74c7e8d634e968e3212e45e612d2c
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:71
# a4a6407a78ed4efca8ae846ba5003cc7
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:73
# 66fcb047e7144b5abbf1e66507bc84ff
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal."
msgstr ""

#: ../source/core/write-performance.txt:78
# 21a0aca2acb347eda17f33d0fbdc82ae
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:83
# ac9049326a3640cabd470836ba623e9d
msgid "if the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available write operations. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:88
# 32b0aa2bc1a9472796b50e50633c950e
msgid "if applications specify :doc:`write concern </core/write-concern>` that includes :ref:`journaled <write-concern-replica-journaled>`, :program:`mongod` will decrease the duration between journal commits, which can increases the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:93
# 4dc4fd497d2140829e3aa7035c1c1460
msgid "the duration between journal commits is configurable using the :setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:102
# 450ca7b3b7354485bac1348d75ecad05
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

