# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/distributed-queries.txt:6
# d89a2b0e10984b15a93880531460a70f
msgid "Distributed Queries"
msgstr ""

#: ../source/core/distributed-queries.txt:14
# 6120b33c3493480cab66be664c8218b2
msgid "Read Operations to Sharded Clusters"
msgstr ""

#: ../source/core/distributed-queries.txt:16
# 9c9a21cee3b04f30bdd06af454b40055
msgid ":term:`Sharded clusters <sharded cluster>` allow you to partition a data set among a cluster of :program:`mongod` instances in a way that is nearly transparent to the application. For an overview of sharded clusters, see the :doc:`/sharding` section of this manual."
msgstr ""

#: ../source/core/distributed-queries.txt:21
# 45946e6a92b040288434c4fb4948e742
msgid "For a sharded cluster, applications issue operations to one of the :program:`mongos` instances associated with the cluster."
msgstr ""

#: ../source/core/distributed-queries.txt:26
# 3acb22407a824d8ba8824dc5d7964066
msgid "Read operations on sharded clusters are most efficient when directed to a specific shard. Queries to sharded collections should include the collection's :ref:`shard key <sharding-shard-key>`. When a query includes a shard key, the :program:`mongos` can use cluster metadata from the :ref:`config database <sharding-config-server>` to route the queries to shards."
msgstr ""

#: ../source/core/distributed-queries.txt:35
# 7a63a10299d24877befbcb0cb123c526
msgid "If a query does not include the shard key, the :program:`mongos` must direct the query to *all* shards in the cluster. These *scatter gather* queries can be inefficient. On larger clusters, scatter gather queries are unfeasible for routine operations."
msgstr ""

#: ../source/core/distributed-queries.txt:42
# 9da93b51073742cfb8ba8ec7d33e77a5
msgid "For more information on read operations in sharded clusters, see the :doc:`/core/sharded-cluster-query-router` and :ref:`sharding-shard-key` sections."
msgstr ""

#: ../source/core/distributed-queries.txt:51
# 058bc9452899413caa77aab38c8d8574
msgid "Read Operations to Replica Sets"
msgstr ""

#: ../source/core/distributed-queries.txt:53
# 7b2b1aeff65e4d4ebc8cecb7020006d5
msgid ":term:`Replica sets <replica set>` use :term:`read preferences <read preference>` to determine where and how to route read operations to members of the replica set. By default, MongoDB always reads data from a replica set's :term:`primary`. You can modify that behavior by changing the :ref:`read preference mode <replica-set-read-preference-modes>`."
msgstr ""

#: ../source/core/distributed-queries.txt:60
# e753ebbe439b4456a58ad93970823668
msgid "You can configure the :ref:`read preference mode <replica-set-read-preference-modes>` on a per-connection or per-operation basis to allow reads from :term:`secondaries <secondary>` to:"
msgstr ""

#: ../source/core/distributed-queries.txt:65
# 85567528163944238bfd0a52fc4dcd70
msgid "reduce latency in multi-data-center deployments,"
msgstr ""

#: ../source/core/distributed-queries.txt:67
# 5c23310d2525412ba919a7289fe4c15f
msgid "improve read throughput by distributing high read-volumes (relative to write volume),"
msgstr ""

#: ../source/core/distributed-queries.txt:70
# 4a8d7e9f22914d1190c831f1d79373b1
msgid "for backup operations, and/or"
msgstr ""

#: ../source/core/distributed-queries.txt:72
# a6a7732b69e347de81e01a799f63b5d5
msgid "to allow reads during :ref:`failover <replica-set-failover>` situations."
msgstr ""

#: ../source/core/distributed-queries.txt:77
# 22c61423d1bf4b7991a2e5b30c58698e
msgid "Read operations from secondary members of replica sets are not guaranteed to reflect the current state of the primary, and the state of secondaries will trail the primary by some amount of time. Often, applications don't rely on this kind of strict consistency, but application developers should always consider the needs of their application before setting read preference."
msgstr ""

#: ../source/core/distributed-queries.txt:84
# 0c57c2d3b1e945bb8bac472dbe80a6d5
msgid "For more information on read preference or on the read preference modes, see :doc:`/core/read-preference` and :ref:`replica-set-read-preference-modes`."
msgstr ""

#: ../source/core/distributed-queries.txt:1
#: ../source/core/distributed-queries.txt:46
# 316905e18c7a40f6985f20849c6e294e
# 013480346f4442d9a18b85690653ad5e
msgid "read operation"
msgstr ""

#: ../source/core/distributed-queries.txt:1
# 316905e18c7a40f6985f20849c6e294e
msgid "architecture"
msgstr ""

#: ../source/core/distributed-queries.txt:46
#: ../source/core/distributed-queries.txt:47
# 013480346f4442d9a18b85690653ad5e
# 45d700bf392c42b3ac9a2a5fdeb03a33
msgid "connection pooling"
msgstr ""

#: ../source/core/distributed-queries.txt:47
# 45d700bf392c42b3ac9a2a5fdeb03a33
msgid "read operations"
msgstr ""

