# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authorization.txt:5
# d783ba51a6ca40a1be57ed6b255df0c1
msgid "Authorization"
msgstr ""

#: ../source/core/authorization.txt:9
# 6f58ec06953a46fdb6db9b607211de2e
msgid "MongoDB employs Role-Based Access Control (RBAC) to govern access to a MongoDB system. A user is granted one or more :ref:`roles <roles>` that determine the user's access to database resources and operations. Outside of role assignments, the user has no access to the system."
msgstr ""

#: ../source/core/authorization.txt:14
# d4da5591118c4905882a4ef40210f257
msgid "MongoDB provides :doc:`built-in roles </reference/built-in-roles>`, each with a dedicated purpose for a common use case. Examples include the :authrole:`read`, :authrole:`readWrite`, :authrole:`dbAdmin`, and :authrole:`root` roles."
msgstr ""

#: ../source/core/authorization.txt:19
# 912b8a0ad3984deb911b43509e482418
msgid "Administrators also can create new roles and privileges to cater to operational needs. Administrators can assign privileges scoped as granularly as the collection level."
msgstr ""

#: ../source/core/authorization.txt:23
# a15b9f525ff947e68216addf94c406f3
msgid "When granted a role, a user receives all the privileges of that role. A user can have several roles concurrently, in which case the user receives the union of all the privileges of the respective roles."
msgstr ""

#: ../source/core/authorization.txt:30
# cf9f914305bb4f9bbb36c39fa4522d26
msgid "Roles"
msgstr ""

#: ../source/core/authorization.txt:32
# f6392c59a58b412ea771ba3976c4acd4
msgid "A role consists of privileges that pair resources with allowed operations. Each privilege is defined directly in the role or inherited from another role."
msgstr ""

#: ../source/core/authorization.txt:36
# a983844d62bf47ce88c2434b96813dd8
msgid "A role's privileges apply to the database where the role is created. A role created on the ``admin`` database can include privileges that apply to all databases or to the :ref:`cluster <resource-cluster>`."
msgstr ""

#: ../source/core/authorization.txt:40
# a5dd9fc9bf19482fbe9cd65d781a495d
msgid "A user assigned a role receives all the privileges of that role. The user can have multiple roles and can have different roles on different databases."
msgstr ""

#: ../source/core/authorization.txt:43
# fcb9aadbe44043baaabe12bf00013735
msgid "Roles always grant privileges and never limit access. For example, if a user has both :authrole:`read` *and* :authrole:`readWriteAnyDatabase` roles on a database, the greater access prevails."
msgstr ""

#: ../source/core/authorization.txt:50
# 23a2e9ceb4e943298f487b36392f2620
msgid "Privileges"
msgstr ""

#: ../source/core/authorization.txt:52
# 1f4b21e697fa4dcc9ef6b25855ea5f5c
msgid "A privilege consists of a specified resource and the actions permitted on the resource."
msgstr ""

#: ../source/core/authorization.txt:55
# a3379e9f490541ba841797e7e34c4a0c
msgid "A privilege :doc:`resource </reference/resource-document>` is either a database, collection, set of collections, or the cluster. If the cluster, the affiliated actions affect the state of the system rather than a specific database or collection."
msgstr ""

#: ../source/core/authorization.txt:60
# 3daa15f2fa3f4bcda9b1f65af3a48666
msgid "An :doc:`action </reference/privilege-actions>` is a command or method the user is allowed to perform on the resource. A resource can have multiple allowed actions. For available actions see :doc:`/reference/privilege-actions`."
msgstr ""

#: ../source/core/authorization.txt:65
# 32b9ec1e2b304768a584e9cbe0e14a9d
msgid "For example, a privilege that includes the :authaction:`update` action allows a user to modify existing documents on the resource. To additionally grant the user permission to create documents on the resource, the administrator would add the :authaction:`insert` action to the privilege."
msgstr ""

#: ../source/core/authorization.txt:71
# f3482b7b0e9d4d50bc18db6a47f92908
msgid "For privilege syntax, see :data:`admin.system.roles.privileges`."
msgstr ""

#: ../source/core/authorization.txt:76
# ef0774f84b114f9f8fe13388cf07441c
msgid "Inherited Privileges"
msgstr ""

#: ../source/core/authorization.txt:78
# 5c77389ebd8848a6845fe317af4d8269
msgid "A role can include one or more existing roles in its definition, in which case the role inherits all the privileges of the included roles."
msgstr ""

#: ../source/core/authorization.txt:81
# feac33eb656b48809919359412a60c96
msgid "A role can inherit privileges from other roles in its database. A role created on the ``admin`` database can inherit privileges from roles in any database."
msgstr ""

#: ../source/core/authorization.txt:87
# a413b4a357304aec97e371c449420983
msgid "User-Defined Roles"
msgstr ""

#: ../source/core/authorization.txt:91
# 0db2e539711348f9bc67e30ffd286380
msgid "User administrators can create custom roles to ensure collection-level and command-level granularity and to adhere to the policy of :term:`least privilege`. Administrators create and edit roles using the :ref:`role management commands <role-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:96
# 41dd286a4f7a4b07abf943f94ead4e25
msgid "MongoDB scopes a user-defined role to the database in which it is created and uniquely identifies the role by the pairing of its name and its database. MongoDB stores the roles in the ``admin`` database's :doc:`system.roles </reference/system-roles-collection>` collection. Do not access this collection directly but instead use the :ref:`role management commands <role-management-commands>` to view and edit custom roles."
msgstr ""

#: ../source/core/authorization.txt:104
# e5aad6a0bfb44f1d8c004a7fbbed0944
msgid "Role Assignment to Users"
msgstr ""

#: ../source/core/authorization.txt:106
# e4b08ea7b8e44260a0f1287245556bcd
msgid "User administrators create the users that access the system's databases. MongoDB's :ref:`user management commands <user-management-commands>` let administrators create users and assign them roles."
msgstr ""

#: ../source/core/authorization.txt:110
# ce7205e45bd643adbb9dd56233debc63
msgid "MongoDB scopes a user to the database in which the user is created. MongoDB stores all user definitions in the ``admin`` database, no matter which database the user is scoped to. MongoDB stores users in the ``admin`` database's :doc:`system.users collection </reference/system-users-collection>`. Do not access this collection directly but instead use the :ref:`user management commands <user-management-commands>`."
msgstr ""

#: ../source/core/authorization.txt:118
# 3339dec0a53b44229e270bb8e86b49f4
msgid "The first role assigned in a database should be either :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase`. This user can then create all other users in the system. See :doc:`/tutorial/add-user-administrator`."
msgstr ""

#: ../source/core/authorization.txt:123
# 4faa897c4f9245aeb52364fb9e7e3225
msgid "See Also"
msgstr ""

#: ../source/core/authorization.txt:125
# 0935868d16de4bf58425d9152169ecfa
msgid ":doc:`/reference/built-in-roles`"
msgstr ""

#: ../source/core/authorization.txt:127
# bd41de182e74488fbc90183a04d030db
msgid ":doc:`/reference/resource-document`"
msgstr ""

#: ../source/core/authorization.txt:129
# ad676d318d38423bbf9fbac90a9aa743
msgid ":doc:`/reference/privilege-actions`"
msgstr ""

#: ../source/core/authorization.txt:131
# e893c13e56814e30b21a7410e22134c9
msgid ":doc:`/tutorial/add-user-administrator`"
msgstr ""

#: ../source/core/authorization.txt:133
# de985d6030f040eeb30dc83102bf2190
msgid ":doc:`/tutorial/add-user-to-database`"
msgstr ""

