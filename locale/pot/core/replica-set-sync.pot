# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-sync.txt:3
# 3fd2274f7b064ab6b68d1ae536088628
msgid "Replica Set Data Synchronization"
msgstr ""

#: ../source/core/replica-set-sync.txt:7
# 6c1d2b01334a497c8d6d55c8ebcdea5c
msgid "In order to maintain up-to-date copies of the shared data set, members of a replica set :term:`sync` or replicate data from other members. MongoDB uses two forms of data synchronization: :ref:`initial sync <replica-set-initial-sync>` to populate new members with the full data set, and replication to apply ongoing changes to the entire data set."
msgstr ""

#: ../source/core/replica-set-sync.txt:17
# 9cb70f413d484b0ba0e28e39044ea82b
msgid "Initial Sync"
msgstr ""

#: ../source/core/replica-set-sync.txt:19
# ae9475ae33bb44d0a5c0c56646630c90
msgid "Initial sync copies all the data from one member of the replica set to another member. A member uses initial sync when the member has no data, such as when the member is new, or when the member has data but is missing a history of the set's replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:24
# c9c035c96a804a5c94f6ec7fad477a3f
msgid "When you perform an initial sync, MongoDB does the following:"
msgstr ""

#: ../source/core/replica-set-sync.txt:26
# 47eb1f515ee74441b35acf5c86be41c0
msgid "Clones all databases. To clone, the :program:`mongod` queries every collection in each source database and inserts all data into its own copies of these collections.  At this time, _id indexes are also built."
msgstr ""

#: ../source/core/replica-set-sync.txt:30
# 86891f9b0e434b999397635ab132c823
msgid "Applies all changes to the data set. Using the oplog from the source, the :program:`mongod` updates its data set to reflect the current state of the replica set."
msgstr ""

#: ../source/core/replica-set-sync.txt:34
# f20b5adb13054590be56c1a04b9d9e5a
msgid "Builds all indexes on all collections (except _id indexes, which were already completed)."
msgstr ""

#: ../source/core/replica-set-sync.txt:36
# 0e503734c7a84d65ae0c85da99433bc9
msgid "When the :program:`mongod` finishes building all index builds, the member can transition to a normal state, i.e. :term:`secondary`."
msgstr ""

#: ../source/core/replica-set-sync.txt:39
# 7588a72bb78d43cfb833bf77f077ec65
msgid "To perform an initial sync, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/core/replica-set-sync.txt:45
# e5286e1aeb50452da9fb3bbd74de1e98
msgid "Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:47
# c6abe39e9e694b299cd23dec02940389
msgid "Replica set members replicate data continuously after the initial sync. This process keeps the members up to date with all changes to the replica set's data. In most cases, secondaries synchronize from the primary. Secondaries may automatically change their *sync targets* if needed based on changes in the ping time and state of other members' replication."
msgstr ""

#: ../source/core/replica-set-sync.txt:79
# 3d29360e4687422c97a0cea54915782d
msgid "For a member to sync from another, the :data:`~local.system.replset.members[n].buildIndexes` setting for both members must have the same value/ :data:`~local.system.replset.members[n].buildIndexes` must be either ``true`` or ``false`` for both members."
msgstr ""

#: ../source/core/replica-set-sync.txt:85
# 4f6513faa01a4c519f93c45018bf6d69
msgid "Beginning in version 2.2, secondaries avoid syncing from :ref:`delayed members <replica-set-delayed-members>` and :ref:`hidden members <replica-set-hidden-members>`."
msgstr ""

#: ../source/core/replica-set-sync.txt:90
# 2c2fee22bc7c497eb55b344241ae39f7
msgid "Validity and Durability"
msgstr ""

#: ../source/core/replica-set-sync.txt:94
# 4270f0da2ffd4614b2455c58de60118e
msgid "In a replica set, only the primary can accept write operations. Writing only to the primary provides :term:`strict consistency` among members."
msgstr ""

#: ../source/core/replica-set-sync.txt:97
# 9118f00f5c9249d3b0b9776d41281b53
msgid ":term:`Journaling <journal>` provides single-instance write durability. Without journaling, if a MongoDB instance terminates ungracefully, you must assume that the database is in an invalid state."
msgstr ""

#: ../source/core/replica-set-sync.txt:104
# 573d77c7e86441c68f369f8758e0beff
msgid "Multithreaded Replication"
msgstr ""

#: ../source/core/replica-set-sync.txt:106
# 9ada275d884a4666aaed1013473d05d2
msgid "MongoDB applies write operations in batches using multiple threads to improve concurrency. MongoDB groups batches by namespace and applies operations using a group of threads, but always applies the write operations to a namespace in order."
msgstr ""

#: ../source/core/replica-set-sync.txt:111
# 7adfddb69ca84e5a809b1ced7615d681
msgid "While applying a batch, MongoDB blocks all reads. As a result, secondaries can never return data that reflects a state that never existed on the primary."
msgstr ""

#: ../source/core/replica-set-sync.txt:116
# 965e738ff0214dd592fbf506a8ba6666
msgid "Pre-Fetching Indexes to Improve Replication Throughput"
msgstr ""

#: ../source/core/replica-set-sync.txt:118
# e0220aeda42f4994b9db109241d7c39a
msgid "To help improve the performance of applying oplog entries, MongoDB fetches memory pages that hold affected data and indexes. This *pre-fetch* stage minimizes the amount of time MongoDB holds the write lock while applying oplog entries. By default, secondaries will pre-fetch all :ref:`indexes`."
msgstr ""

#: ../source/core/replica-set-sync.txt:124
# 68ff279aa0cf4b068b939c8b2ad6db4b
msgid "Optionally, you can disable all pre-fetching or only pre-fetch the index on the ``_id`` field. See the :setting:`replIndexPrefetch` setting for more information."
msgstr ""

