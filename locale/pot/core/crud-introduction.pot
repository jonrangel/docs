# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/crud-introduction.txt:3
# 0c7a4b5c5a5d49c29c83e05d1d0cef2f
msgid "MongoDB CRUD Introduction"
msgstr ""

#: ../source/core/crud-introduction.txt:7
# fbec03abfa404dfaae79ca64fe0d0187
msgid "MongoDB stores data in the form of *documents*, which are JSON-like field and value pairs. Documents are analogous to structures in programming languages that associate keys with values, where keys may hold other pairs of keys and values (e.g. dictionaries, hashes, maps, and associative arrays). Formally, MongoDB documents are :term:`BSON` documents, which is a binary representation of :term:`JSON` with additional type information. For more information, see :doc:`/core/document`."
msgstr ""

#: ../source/core/crud-introduction.txt:18
# 003386a475ff47d0907be0efb45ec5a9
msgid "MongoDB stores all documents in :term:`collections <collection>`. A collection is a group of related documents that have a set of shared common indexes. Collections are analogous to a table in relational databases."
msgstr ""

#: ../source/core/crud-introduction.txt:26
# 615aa9f7b74c4a31a384c247436070e4
msgid "Database Operations"
msgstr ""

#: ../source/core/crud-introduction.txt:29
# 907a5bc604884fa69e5ae935b0ae5b9e
msgid "Query"
msgstr ""

#: ../source/core/crud-introduction.txt:31
# 62f25a86253f4b32b49deb58ccab991e
msgid "In MongoDB a query targets a specific collection of documents. Queries specify criteria, or conditions, that identify the documents that MongoDB returns to the clients. A query may include a *projection* that specifies the fields from the matching documents to return. You can optionally modify queries to impose limits, skips, and sort orders."
msgstr ""

#: ../source/core/crud-introduction.txt:37
# 204522c4ac3242be8142dd06a1326630
msgid "In the following diagram, the query process specifies a query criteria and a sort modifier:"
msgstr ""

#: ../source/core/crud-introduction.txt:42
# 0ff4b9fc70fc4a2aa9041f234065f5c8
msgid "See :doc:`/core/read-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:45
# ed8060e64ef247c6bb2c1ceb618c6130
msgid "Data Modification"
msgstr ""

#: ../source/core/crud-introduction.txt:47
# dadb1b2909b749689ec01ee58e53ea5d
msgid "Data modification refers to operations that create, update, or delete data. In MongoDB, these operations modify the data of a single :term:`collection`. For the update and delete operations, you can specify the criteria to select the documents to update or remove."
msgstr ""

#: ../source/core/crud-introduction.txt:52
# 8638c0a0288149dba9597a1972591d19
msgid "In the following diagram, the insert operation adds a new document to the ``users`` collection."
msgstr ""

#: ../source/core/crud-introduction.txt:57
# 97151f6a730c4bb093ffd4599a1d59b0
msgid "See :doc:`/core/write-operations-introduction` for more information."
msgstr ""

#: ../source/core/crud-introduction.txt:61
# e0bd6668cc1f46459ecfd2bcb78c2e58
msgid "Related Features"
msgstr ""

#: ../source/core/crud-introduction.txt:64
# dee293264d8a4fc6a53a96e65166dade
msgid ":doc:`/indexes`"
msgstr ""

#: ../source/core/crud-introduction.txt:66
# e13ec6328b574dc8b4dec240ae7a6692
msgid "To enhance the performance of common queries and updates, MongoDB has full support for secondary indexes. These indexes allow applications to store a *view* of a portion of the collection in an efficient data structure. Most indexes store an ordered representation of all values of a field or a group of fields. Indexes may also :ref:`enforce uniqueness <index-type-unique>`, store objects in a :doc:`geospatial representation </applications/geospatial-indexes>`, and facilitate :doc:`text search </core/index-text>`."
msgstr ""

#: ../source/core/crud-introduction.txt:77
# 85af5290b57849999d5b9b4392db5d40
msgid ":doc:`/core/read-preference`"
msgstr ""

#: ../source/core/crud-introduction.txt:79
# f94d7b66fd6849fa9b6715bf2c8fbd1f
msgid "For replica sets and sharded clusters with replica set components, applications specify :ref:`read preferences <replica-set-read-preference>`. A read preference determines how the client direct read operations to the set."
msgstr ""

#: ../source/core/crud-introduction.txt:85
# 1e17c327e04d4e77aa5aa05c7aa358b6
msgid ":doc:`/core/write-concern`"
msgstr ""

#: ../source/core/crud-introduction.txt:87
# abde5ab2f2f24311b266f72e7dca5591
msgid "Applications can also control the behavior of write operations using :ref:`write concern <write-concern>`. Particularly useful for deployments with replica sets, the write concern semantics allow clients to specify the assurance that MongoDB provides when reporting on the success of a write operation."
msgstr ""

#: ../source/core/crud-introduction.txt:94
# 2fac12de86ff43009bb91efb76f7e88c
msgid ":doc:`/aggregation`"
msgstr ""

#: ../source/core/crud-introduction.txt:96
# cf3c458f647b4b27bf4240664c92bd4e
msgid "In addition to the basic queries, MongoDB provides several data aggregation features. For example, MongoDB can return counts of the number of documents that match a query, or return the number of distinct values for a field, or process a collection of documents using a versatile stage-based data processing pipeline or map-reduce operations."
msgstr ""

