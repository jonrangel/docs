# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/meta/build.txt:3
# 94a08e4379d343e08c97834f14d804db
msgid "MongoDB Documentation Build System"
msgstr ""

#: ../source/meta/build.txt:5
# 74a91b9ee7ff409b9011c0a27386a51a
msgid "This document contains more direct instructions for building the MongoDB documentation."
msgstr ""

#: ../source/meta/build.txt:9
# 6fe2908a51f64fdc813848d93e23f93d
msgid "Getting Started"
msgstr ""

#: ../source/meta/build.txt:12
# d0a06e943e9b469488518db04ef90e45
msgid "Install Dependencies"
msgstr ""

#: ../source/meta/build.txt:14
# 864862276a7f41889b4fd3d08d154bea
msgid "The MongoDB Documentation project depends on the following tools:"
msgstr ""

#: ../source/meta/build.txt:16
# 0dac283c04074cf3ba21d49546a7869d
msgid "GNU Make"
msgstr ""

#: ../source/meta/build.txt:17
# 22646d1c518643ac90d4b2163970ac92
msgid "GNU Tar"
msgstr ""

#: ../source/meta/build.txt:18
# 669d4336ec89476a87bd29b2e1a2280a
msgid "Python"
msgstr ""

#: ../source/meta/build.txt:19
# d1d3521bf190455e9383b81554dea549
msgid "Git"
msgstr ""

#: ../source/meta/build.txt:20
# c28c89ad122b44bcb64aafddf9b9f462
msgid "Sphinx (documentation management toolchain)"
msgstr ""

#: ../source/meta/build.txt:21
# 97f13bb510f4450997c8b8c2864e2814
msgid "Pygments (syntax highlighting)"
msgstr ""

#: ../source/meta/build.txt:22
# 593a4c4d425c4dd1a0317c6bc54e01d1
msgid "PyYAML (for the generated tables)"
msgstr ""

#: ../source/meta/build.txt:23
# c23136deef31417d98da365fe3a10e9d
msgid "Droopy (Python package for static text analysis)"
msgstr ""

#: ../source/meta/build.txt:24
# 15012d03d3af4378b081c73a8375ff12
msgid "Fabric (Python package for scripting and orchestration)"
msgstr ""

#: ../source/meta/build.txt:25
# 17c8a3bcdb3d49388ff65425036308e9
msgid "Inkscape (Image generation.)"
msgstr ""

#: ../source/meta/build.txt:26
# 041531d3a579407489b33da58a5c3a01
msgid "python-argparse (For Python 2.6.)"
msgstr ""

#: ../source/meta/build.txt:27
# cd65d5d740eb4a88aa37fa2cd8fe6cd6
msgid "LaTeX/PDF LaTeX (typically texlive; for building PDFs)"
msgstr ""

#: ../source/meta/build.txt:28
# d2559258ae484b1aafdd6965bd954489
msgid "Common Utilities (rsync, tar, gzip, sed)"
msgstr ""

#: ../source/meta/build.txt:31
# 6aae060071be4316a4abbba2bed73c43
msgid "OS X"
msgstr ""

#: ../source/meta/build.txt:33
# dd4b0f47e69644598765dc31f950a1e0
msgid "Install Sphinx, Docutils, and their dependencies with ``easy_install`` the following command:"
msgstr ""

#: ../source/meta/build.txt:40
# e5ac5eb459f64561989a1603f486cdfa
msgid "Feel free to use ``pip`` rather than ``easy_install`` to install python packages."
msgstr ""

#: ../source/meta/build.txt:43
# 666ea4959ed94873a90d4fcdd7c3f901
msgid "To generate the images used in the documentation, `download and install Inkscape <http://inkscape.org/download/>`_."
msgstr ""

#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
#: ../source/meta/build.txt:0
# ae5588ced901422fa0f7938751aa3405
# bf13b587a25f4716a08fb7226a2c937f
# 92bb6f4ea1a4424e81bb0bd021620433
msgid "Optional"
msgstr ""

#: ../source/meta/build.txt:48
# d84245122ac94eada15d446460c48083
msgid "To generate PDFs for the full production build, install a TeX distribution (for building the PDF.) If you do not have a LaTeX installation, use `MacTeX <http://www.tug.org/mactex/2011/>`_. This is **only** required to build PDFs."
msgstr ""

#: ../source/meta/build.txt:54
# 1f76c50dc7854089bb61eed48499ca2a
msgid "Arch Linux"
msgstr ""

#: ../source/meta/build.txt:56
# 7d7d150fc865426692235e8ec1042fa8
msgid "Install packages from the system repositories with the following command:"
msgstr ""

#: ../source/meta/build.txt:62
#: ../source/meta/build.txt:86
# 253a6844c8d14cfd8bbfa392cff87b80
# 988dea08a7604d1bbee6b29f6f7a70d4
msgid "Then install the following Python packages:"
msgstr ""

#: ../source/meta/build.txt:70
#: ../source/meta/build.txt:94
# 7d5644c8f48644cfa3393759951d372f
# 754e040773f145d9be3203ff96f331dd
msgid "To generate PDFs for the full production build, install the following packages from the system repository:"
msgstr ""

#: ../source/meta/build.txt:78
# 4c1044192fc54c958e675313c6a3a045
msgid "Debian/Ubuntu"
msgstr ""

#: ../source/meta/build.txt:80
# 07def6bdc87143e882a7e3ed2086a089
msgid "Install the required system packages with the following command:"
msgstr ""

#: ../source/meta/build.txt:102
# 7ae887cbfe3d415b990332946501d7af
msgid "Setup and Configuration"
msgstr ""

#: ../source/meta/build.txt:104
# b322081fef784d0bb8e31da4a9197d06
msgid "Clone the repository:"
msgstr ""

#: ../source/meta/build.txt:110
# 8a9513fc81484569a9787c8eead53877
msgid "Then run the ``bootstrap.py`` script in the ``docs/`` repository, to configure the build dependencies:"
msgstr ""

#: ../source/meta/build.txt:117
# f2b52ee2a2bb42b6b9332e07091a5c7a
msgid "This downloads and configures the `mongodb/docs-tools <http://github.com/mongodb/docs-tools/>`_ repository, which contains the authoritative build system shared between branches of the MongoDB Manual and other MongoDB documentation projects."
msgstr ""

#: ../source/meta/build.txt:122
# 89804dbffce34921a2ec5cd1e174e9cc
msgid "You can run ``bootstrap.py`` regularly to update build system."
msgstr ""

#: ../source/meta/build.txt:125
# 0bea0160f722455a8765fc77b1fdef48
msgid "Building the Documentation"
msgstr ""

#: ../source/meta/build.txt:127
# 37c58e2c786045b3b885d0c9a75d1fe7
msgid "The MongoDB documentation build system is entirely accessible via ``make`` targets. For example, to build an HTML version of the documentation issue the following command:"
msgstr ""

#: ../source/meta/build.txt:135
# 6fea297ecb114ac0a92d79e7d930adc3
msgid "You can find the build output in ``build/<branch>/html``, where ``<branch>`` is the name of the current branch."
msgstr ""

#: ../source/meta/build.txt:138
# 05e2f1361f4945aaa3c3311b5b65219b
msgid "In addition to the ``html`` target, the build system provides the following targets:"
msgstr ""

#: ../source/meta/build.txt:145
# e6a29470eac540fab595bae409ab9808
msgid "``publish``"
msgstr ""

#: ../source/meta/build.txt:142
# 5c72264526cf42d0b61f1e995964a87d
msgid "Builds and integrates all output for the production build. Build output is in ``build/public/<branch>/``. When you run ``publish`` in the ``master``, the build will generate some output in ``build/public/``."
msgstr ""

#: ../source/meta/build.txt:150
# 3fc5b3d751764b20ba6cbb29d9fb035e
msgid "``push``; ``stage``"
msgstr ""

#: ../source/meta/build.txt:148
# cf0cde3cbadf4b0ab6f01d22a7513e7e
msgid "Uploads the production build to the production or staging web servers. Depends on ``publish``. Requires access production or staging environment."
msgstr ""

#: ../source/meta/build.txt:154
# 7a93607c261544e385d97405f10bba0e
msgid "``push-all``; ``stage-all``"
msgstr ""

#: ../source/meta/build.txt:153
# 814f8ffe038f446d976436126d6b5e89
msgid "Uploads the entire content of ``build/public/`` to the web servers. Depends on ``publish``. Not used in common practice."
msgstr ""

#: ../source/meta/build.txt:158
# d4c1c7198a3845cf97a7ff0702e144fb
msgid "``push-with-delete``; ``stage-with-delete``"
msgstr ""

#: ../source/meta/build.txt:157
# e9726e7b33e74eef9e62bc8c49dfc644
msgid "Modifies the action of ``push`` and ``stage`` to remove remote file that don't exist in the local build. Use with caution."
msgstr ""

#: ../source/meta/build.txt:171
# 2848109ff5054d1dbb875ebca534dd1b
msgid "``html``; ``latex``; ``dirhtml``; ``epub``; ``texinfo``; ``man``; ``json``"
msgstr ""

#: ../source/meta/build.txt:161
# dd623b3f22a348e38f617406d18b8d10
msgid "These are standard targets derived from the default Sphinx Makefile, with adjusted dependencies. Additionally, for all of these targets you can append ``-nitpick`` to increase Sphinx's verbosity, or ``-clean`` to remove all Sphinx build artifacts."
msgstr ""

#: ../source/meta/build.txt:166
# 46a392eb27014a96aecc0c3e9ba2958a
msgid "``latex`` performs several additional post-processing steps on ``.tex`` output generated by Sphinx. This target will also compile PDFs using ``pdflatex``."
msgstr ""

#: ../source/meta/build.txt:170
# 1e17dea2c4514d17a9f760549c83080e
msgid "``html`` and ``man`` also generates a ``.tar.gz`` file of the build outputs for inclusion in the final releases."
msgstr ""

#: ../source/meta/build.txt:174
# e92f918ed9cd411a90dc279080880ccd
msgid "Build Mechanics and Tools"
msgstr ""

#: ../source/meta/build.txt:176
# c3fb35bdc1b843fd802b857bfa8a1176
msgid "Internally the build system has a number of components and processes. See the `docs-tools README <https://github.com/mongodb/docs-tools/blob/master/README.rst>`_ for more information on the internals. This section documents a few of these components from a very high level and lists useful operations for contributors to the documentation."
msgstr ""

#: ../source/meta/build.txt:186
# bad8bc7155ab4e3f8b26d372bbdda380
msgid "Fabric"
msgstr ""

#: ../source/meta/build.txt:188
# 7d5dd857d7af49dab860b2ba57b23717
msgid "Fabric is an orchestration and scripting package for Python. The documentation uses Fabric to handle the deployment of the build products to the web servers and also unifies a number of independent build operations. Fabric commands have the following form:"
msgstr ""

#: ../source/meta/build.txt:197
# 9f94130368bd406090dcd8e9576081ea
msgid "The ``<argument>`` is optional in most cases. Additionally some tasks are available at the root level, without a module. To see a full list of fabric tasks, use the following command:"
msgstr ""

#: ../source/meta/build.txt:205
# 3c3d86793c8b4f3e939228a123629b09
msgid "You can chain fabric tasks on a single command line, although this doesn't always make sense."
msgstr ""

#: ../source/meta/build.txt:208
# 007ebe7007a24fd39bfd26064aa1db00
msgid "Important fabric tasks include:"
msgstr ""

#: ../source/meta/build.txt:212
# 08b5d8a87eef4c3a86e5ff4f4832a767
msgid "``tools.bootstrap``"
msgstr ""

#: ../source/meta/build.txt:211
# 1222f830e3874b2ea48f97f9d155431a
msgid "Runs the ``bootstrap.py`` script. Useful for re-initializing the repository without needing to be in root of the repository."
msgstr ""

#: ../source/meta/build.txt:218
# bd84f7c8f4fe46bfbe907d6fffcea8fd
msgid "``tools.dev``; ``tools.reset``"
msgstr ""

#: ../source/meta/build.txt:215
# fc06a2e582ad460fa18b149f2faae73e
msgid "``tools.dev`` switches the ``origin`` remote of the ``docs-tools`` checkout in ``build`` directory, to ``../docs-tools`` to facilitate build system testing and development. ``tools.reset`` resets the ``origin`` remote for normal operation."
msgstr ""

#: ../source/meta/build.txt:222
# f4f51be33ac64462b5d692332e46bc40
msgid "``tools.conf``"
msgstr ""

#: ../source/meta/build.txt:221
# 85b5c34f2de3466f9f9c910ac6592f7d
msgid "``tools.conf`` returns the content of the configuration object for the current project. These data are useful during development."
msgstr ""

#: ../source/meta/build.txt:226
# be48a7dde78d48dba6e5c02504b0550a
msgid "``stats.report:<filename>``"
msgstr ""

#: ../source/meta/build.txt:225
# bdb5b6d248c640b2a83e9cbc1b2ace23
msgid "Returns, a collection of readability statistics. Specify file names relative to ``source/`` tree."
msgstr ""

#: ../source/meta/build.txt:230
# 88f2ee5dab3f4b60aff24b3bc8b6f855
msgid "``make``"
msgstr ""

#: ../source/meta/build.txt:229
# 96a9afa0631d46b4ad4933ada1bec069
msgid "Provides a thin wrapper around Make calls. Allows you to start make builds from different locations in the project repository."
msgstr ""

#: ../source/meta/build.txt:235
# 3d1e72d470d5427d84941398e7580d9b
msgid "``process.refresh_dependencies``"
msgstr ""

#: ../source/meta/build.txt:233
# b93ad3edcf8743e7bf9e3728da253784
msgid "Updates the time stamp of ``.txt`` source files with changed include files, to facilitate Sphinx's incremental rebuild process. This task runs internally as part of the build process."
msgstr ""

#: ../source/meta/build.txt:238
# 526b52e56a2741eaa47b1aed1b2df013
msgid "Buildcloth"
msgstr ""

#: ../source/meta/build.txt:240
# b12ecc849989499c893458f5f57b25c5
msgid "`Buildcloth <https://pypi.python.org/pypi/buildcloth/>`_ is a meta-build tool, used to generate Makefiles programmatically. This makes the build system easier to maintain, and makes it easier to use the same fundamental code to generate various branches of the Manual as well as related documentation projects. See `makecloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/makecloth>`_ for the relevant code."
msgstr ""

#: ../source/meta/build.txt:249
# 7975fdb2333b4c6185ef560d1a9f9fef
msgid "Running ``make`` with no arguments will regenerate these parts of the build system automatically."
msgstr ""

#: ../source/meta/build.txt:253
# cb228df652d047a5b94a5096b37cd965
msgid "Rstcloth"
msgstr ""

#: ../source/meta/build.txt:255
# bb7307c7ed83454b8789e340a0a6263b
msgid "`Rstcloth <https://pypi.python.org/pypi/rstcloth>`_ is a library for generating reStructuredText programmatically. This makes it possible to generate content for the documentation, such as tables, tables of contents, and API reference material programmatically and transparently. See `rstcloth/ in the docs-tools repository <https://github.com/mongodb/docs-tools/tree/master/rstcloth>`_ for the relevant code."
msgstr ""

