# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# caef7285ee0947b1b9e94b70a027b5b6
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:12
# d66464203d004277b0d3083a22c2efd5
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:16
# 77323f937d524540969e19dd1d18d73b
msgid "Atomically modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
# 88dd280a14914fca815b17147985b4dc
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:38
# 9a880764741b45419048bc356c99019e
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following subdocument fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:44
# cdbdcb837c7a43aa8123cabb91ef1b47
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
# fc672f046f6844f9a125488c8ad8595a
msgid "The :method:`~db.collection.findAndModify()` method returns either: the pre-modification document or, if ``new: true`` is set, the modified document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:52
# 0d67bfb6f7bd44c6ab6652e8941627db
msgid "If the query finds no document for ``update`` or ``remove`` operations, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:56
# edbe052858e948f5a746f3fbb242b03f
msgid "If the query finds no document for an ``upsert``, operation, :method:`~db.collection.findAndModify()` performs an insert. If ``new`` is ``false``, **and** the ``sort`` option is **NOT** specified, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:61
# d2e45c9505ba40f79d31c88308e7c15f
msgid "Previously returned an empty document ``{}``. See :ref:`the 2.2 release notes <2.2-findandmodify-returns-null>` for more information."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:66
# 33da8533b1164d39b61d5691750927af
msgid "If the query finds no document for an ``upsert``, :method:`~db.collection.findAndModify()` performs an insert. If ``new`` is ``false``, **and** a ``sort`` option, the method returns an empty document ``{}``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:72
# 6ca3136ff4874c6db43c5a27d1ccac1d
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:77
# c51ab272fb2f4962bbe6fb647d0abb1b
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:79
# 7c80069141ac4d40ad8196267cbacac9
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients each invoke the method with the same ``query`` condition and these methods complete the ``find`` phase before any of methods perform the ``modify`` phase, these methods could insert the same document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:87
# acbcefd2dee04bd88e26dc5549885925
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:99
# 822a0c05ba0e477aabe58ff436470525
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert. To prevent this condition, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, the multiple methods would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:107
# f4f013f9da0e4b8f83ea1692f35bea39
msgid "Exactly one :method:`~db.collection.findAndModify()` would successfully insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:110
# ab0728a7ad574c9eaa70a6e33a988887
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:113
# 88ee88f464c148b5b5335d4c28a2e34c
msgid "Zero or more :method:`~db.collection.findAndModify()` methods would fail when they attempted to insert a duplicate. If the method fails due to a unique index constraint violation, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:120
# d7dbbb5137ff4f8cbc78216361286078
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:122
# d8872f3e377f4560beb68c831ba372ad
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:126
# 1409c463647b498eaf5fd84d29ddbd49
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:130
# 4b2be0e2ec1f4789850a3ab5acbc55c0
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:133
# 00ba48eac58948729026b2622b29df0f
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:135
# 478b7e15213947f7b97462c8b958e23f
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:146
# 19f8b4381e974014a8d759f26f208a10
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:148
# a0c6d9d6354144028ce99f5388ba4329
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:153
# 105463e997474f68b03da82ae2aa1f63
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:158
# 5bf9ccd1bec4484ebd6fc3ab1d19de2d
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:161
# 0027e17fcf674e5bbb5cfb1071e8110b
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:174
# f9efbd9ec899435e96f1ad19b003fd30
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:177
# 21ac9a92717d49d29c63cc86fd0ff549
msgid "If no document matched the ``query`` condition, the method returns ``null``:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:185
# dd092c6b9363419389db2c26f5b10938
msgid "Update and Insert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:187
# ad402b8b93b54cf9bc0389779ad785bb
msgid "The following method includes the ``upsert: true`` option to insert a new document if no document matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:200
# 561b551920b54247a8569b85e2b42e57
msgid "If the method does **not** find a matching document, the method performs an upsert. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:209
# 00bae97c3c4f4afe847d2d339e2b475f
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:217
# 81f50b03ad10461a954a7502e405dcb1
msgid "Update, Insert and Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:219
# f0268c5001f741d6ae5b8be8a7e2476b
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option to return the newly inserted document if a document matching the ``query`` is not found:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:233
# 9ff4351ec5ad44a59dfde4baa4c3e351
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:248
# 7dcaf9fa24974c878577bacb017819b8
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:250
# 102312c6901743e2ae21211fbab55e27
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:265
# eda13d9c132b4ef28281d03fa9131ce4
msgid "The method returns the deleted document:"
msgstr ""

