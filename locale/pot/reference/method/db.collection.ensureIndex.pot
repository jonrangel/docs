# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.ensureIndex.txt:3
# 76e731d3c57340c5a6ab538a0cc04eb8
msgid "db.collection.ensureIndex()"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:8
# c08109209715460599808707df1399d1
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:12
# d4d67769c4574b5c90e57bc3d94cf2c7
msgid "Creates an index on the specified field if the index does not already exist."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:15
# 6625d4164a4f40a9ab88ca2a76571d28
msgid "The :method:`~db.collection.ensureIndex()` method has the following fields:"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:19
# ae111db5faa84102a6eb4430187eeac6
msgid "Index names, including their full namespace (i.e. ``database.collection``) cannot be longer than 128 characters. See the :method:`~db.collection.getIndexes()` field :data:`~system.indexes.name` for the names of existing indexes."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:24
# 843f53b9f0804390ade3ce73aafabac2
msgid "The ``options`` document has one or more of the following fields:"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:30
# c6a5b3bb104b4cf481020530f26a3610
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:32
# a22f7e4dcbeb4753bcf54f8e23178a47
msgid "The :method:`~db.collection.ensureIndex()` method has the behaviors described here."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:35
# eee0a259f29a4d8482d4bc52360a8c7f
msgid "To add or change index options you must drop the index using the :method:`~db.collection.dropIndex()` method and issue another :method:`~db.collection.ensureIndex()` operation with the new options."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:40
# 11fbece0f7224ef8af9f6a20d206fcb7
msgid "If you create an index with one set of options, and then issue the :method:`~db.collection.ensureIndex()` method with the same index fields and different options without first dropping the index, :method:`~db.collection.ensureIndex()` will *not* rebuild the existing index with the new options."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:47
# c7d7d913b9f24659bec6ee3a8184c23c
msgid "If you call multiple :method:`~db.collection.ensureIndex()` methods with the same index specification at the same time, only the first operation will succeed, all other operations will have no effect."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:52
# 0b904c1062aa46e0bd78736410aa7120
msgid "Non-background indexing operations will block all other operations on a database."
msgstr ""

#: ../source/includes/fact-index-key-length-operation-behaviors.rst:3
# 8f31b05a564b4aba974ab5f0a48ab5f0
msgid "MongoDB will **not** :method:`create an index <db.collection.ensureIndex()>` on a collection if the value of the index field in an existing document exceeds the |limit|. Previous versions of MongoDB would create the index but not index such documents."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:64
# ade359085232405cad3636663b67d6df
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:67
# 46076c8334564589b4716475312c2cd8
msgid "Create an Ascending Index on a Single Field"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:69
# 145b1b9d13da4100927f638792013ff3
msgid "The following example creates an ascending index on the field ``orderDate``."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:76
# 37e61ec4a25d41749be5c2c73175e130
msgid "If the ``keys`` document specifies more than one field, then :method:`~db.collection.ensureIndex()` creates a :term:`compound index`."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:81
# 9577ad1358424399b55169686a07807b
msgid "Create an Index on a Multiple Fields"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:83
# d3e769ca2b714178ad6bf62584c9c709
msgid "The following example creates a compound index on the ``orderDate`` field (in ascending order) and the ``zipcode`` field (in descending order.)"
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:91
# 95db300e13444b0b93bd51321edfb855
msgid "A compound index cannot include a :ref:`hashed index <index-type-hashed>` component."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:96
# 89f9e066c5db4485b6b79cab98fc5827
msgid "The order of an index is important for supporting :method:`~cursor.sort()` operations using the index."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:101
# 3f094dd350d444479d01d1545078ecc6
msgid "The :doc:`/indexes` section of this manual for full documentation of indexes and indexing in MongoDB."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:104
# 1e27a2aeb6a34e4ca38a2341d951bc93
msgid ":doc:`/core/index-text` for details on creating ``text`` indexes."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:107
# be005402d56c4763ba585ee3e908d267
msgid ":ref:`index-feature-geospatial` and :ref:`index-geohaystack-index` for geospatial queries."
msgstr ""

#: ../source/reference/method/db.collection.ensureIndex.txt:110
# f16abb4ea531417696c4e1f40ed5c439
msgid ":ref:`index-feature-ttl` for expiration of data."
msgstr ""

