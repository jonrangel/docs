# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/sort.txt:3
# 2ae788b8ae664cfd984df848310de406
msgid "$sort (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:9
# 4686598e484f4ade80e21c2c5dfa924d
msgid "The :pipeline:`$sort` :term:`pipeline` operator sorts all input documents and returns them to the pipeline in sorted order."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:12
# 933ba2d06a03417080582da95befdff1
msgid "Consider the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:22
# c53df2f556a14acb90116f27de718b77
msgid "This sorts the documents in the collection named ``<collection-name>``, according to the key and specification in the ``{ <sort-key> }`` document. The sort key has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:30
# 4a37ab41a9b74c8d8b361cfeb2bb7c6b
msgid "The ``{ <sort-key> }`` document can specify :ref:`ascending or descending sort on existing fields <sort-pipeline-asc-desc>` or :ref:`sort on computed metadata <sort-pipeline-metadata>`."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:35
# b323e9b6375c4659a532cae50413ee8b
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:40
# 80ac3e441c724d1c89e3918ee75e5824
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:42
# 42690d9995534480b86b6faf4884c3be
msgid "Specify in the ``{ <sort-key> }`` document the field or fields to sort by and a value of ``1`` or ``-1`` to specify an ascending or descending sort respectively, as in the following example:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:54
# 5ca7e6efbc254f1aa76bc358be95d378
msgid "This operation sorts the documents in the ``users`` collection, in descending order according by the ``age`` field and then in ascending order according to the value in the ``posts`` field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# f22c3e59f5154f2eab5d53c2203bcef0
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# 5e4d1bbcb4ec4684b68ef0cb90d5567c
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
# 8f3ccfab0e0847bcaedbc596b2b251ff
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# 8a2ea7c5483944ffa570b0ab036712b8
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# 35abc2b9aae54186ac5bebb4ac431c16
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
# e654cc2b6dac4b8f9b450fb48b26f0f0
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
# 8f16debbf1984345b15465bc6e77ae58
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 4e6a7ea4612447ca97b9ff9012a6826b
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
# 13d7b25d580d4215a09ccda2f93010da
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
# db856254d87c488e8acebf57ace43ace
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# cff75c84c8a245e696e80e314b00e8d5
msgid "Date, Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
# 37b8995a4c3949e7885d1b34d165caa1
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# 9b40ad02c012461aba8f4e7c733dc877
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:17
# 1724adaed3cb45af97ae3c62d4513d5b
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:20
# 561437f41013450fa32e9e4cdf5c8551
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:24
# 92d094853ff441a9b9022ee953b0a469
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:63
# 46e88797603040379e6db8fad05adbf0
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:65
# 4af6bbf3d8504ed480a3d317d00dfad3
msgid "Specify in the ``{ <sort-key> }`` document, a new field name for the computed metadata and specify the :expression:`$meta` expression as its value, as in the following example:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:78
# 9ee498cfb75e4be981e37559f2969145
msgid "This operation uses the :query:`$text` operator to match the documents, and then sorts first by the ``\"textScore\"`` metadata and then by descending order of the ``posts`` field. The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :expression:`$meta` for more information on metadata."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:88
# 2165408e046a4dc6b9d1f61ed2e1d978
msgid "``$sort`` Operator and Memory"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:93
# 53d8de9792b54cb7a73295bd56d65cab
msgid "``$sort`` + ``$limit`` Memory Optimization"
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:1
# a972e1ffc35b4f8782b29a2b1d004210
msgid "When a :pipeline:`$sort` immediately precedes a :pipeline:`$limit` in the pipeline, the :pipeline:`$sort` operation only maintains the top n results as it progresses, where n is the specified limit, and MongoDB only needs to store the number of items specified by :pipeline:`$limit` in memory."
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:7
# 3dc499dcd3bb43669d0e226411cfa3bf
msgid "Before MongoDB 2.4, :pipeline:`$sort` would sort all the results in memory, and then limit the results to n results."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:100
# caac62d7252c4f8abd3677e8772b2578
msgid "``$sort`` and Memory Restrictions"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:102
# 515a642e32cb4746a9a66077969ff722
msgid "The :pipeline:`$sort` stage has a limit of 100 megabytes of RAM. By default, if the stage exceeds this limit, :pipeline:`$sort` will produce an error. To allow for the handling of large datasets, set the ``allowDiskUsage`` option to ``true`` to enable :pipeline:`$sort` operations to write to temporary files. See the ``allowDiskUsage`` option in :method:`db.collection.aggregate()` method and the :dbcommand:`aggregate` command for details."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:110
# d7ee85fcc0734442aa8072cc7c1fa6de
msgid "The memory limit for :pipeline:`$sort` changed from 10 percent of RAM to 100 megabytes of RAM."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:115
# b0a19967f56f4fa69bfc739c67c98f4a
msgid "``$sort`` Operator and Performance"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:117
# f8d54de3b5574090820a1df6961904ec
msgid ":pipeline:`$sort` operator can take advantage of an index when placed at the **beginning** of the pipeline or placed **before** the following aggregation operators: :pipeline:`$project`, :pipeline:`$unwind`, and :pipeline:`$group`."
msgstr ""

