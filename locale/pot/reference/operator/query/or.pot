# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 12508b927857476d8addf2846cf9bf8c
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:11
# 076c72c1a2e74b258dcdf71374d4a4bb
msgid "You may nest :query:`$or` operations; however, these expressions are not as efficiently optimized as top-level."
msgstr ""

#: ../source/reference/operator/query/or.txt:15
# 4ad635208d6743e1be78bfedff220b6a
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# af22d51873cc4fd4a9daa1ad88591042
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:30
# 63473a0e471d4ec29d218d4751f3ead8
msgid "This query will select all documents in the ``inventory`` collection where either the ``qty`` field value is less than ``20`` **or** the ``sale`` field value is ``true``."
msgstr ""

#: ../source/reference/operator/query/or.txt:35
# 42395949fce84cd69630c77030e75553
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:38
# d2f42a01fd334cdb98ea756b35d98c4f
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:40
# 34aef3cfa1404e72a913d324644805d9
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` will execute in parallel. These clauses can each use their own index. Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:48
# 51729e0ace3f4286b43cba7d97f8631a
msgid "To support this query, rather than a compound index, you would create one index on ``price`` and another index on ``sale``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:57
# 01e2fe1bf0334d0bb4468ead3cecc78d
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:59
# 4bb95fcda9d64a94a155ab72559afdfb
msgid "When using the :query:`$or` operator with the :method:`~cursor.sort()` method, the query will **not** use the indexes on the :query:`$or` fields. Consider the following query which adds a :method:`~cursor.sort()` method to the above query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:68
# 1a51f8506a98494788120d752ad7bd9b
msgid "This modified query will not use the index on ``price`` nor the index on ``sale``."
msgstr ""

#: ../source/reference/operator/query/or.txt:72
# 36fe709d9671428b8af8d719e8e64f60
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:74
# 11e6390921294e2dad2d271c8e26b4bf
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be indexed."
msgstr ""

#: ../source/reference/operator/query/or.txt:78
# ae95b823d1604d7bb2eb596baf72ac3e
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:82
# 4d475b44933c45a588ecd15af6ea4337
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:89
# ca2f9ce8b65a4c0a9a3ee4f1f5200c2a
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:91
# e53923a3535b4d83be13917f9c303c87
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:95
# 1520453d31174116a67cdcb9b1c27894
msgid "For example, to select all documents in the ``inventory`` collection where the ``qty`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:103
# 64caa5f6c172483abc64f413b2efd943
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

