# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/repairDatabase.txt:3
# 506294df962d4e42a31d995f560213c6
msgid "repairDatabase"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:12
# f7deae56e42f49129fd3fdb3d44c88d1
msgid "Definition"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:16
# ac48a2f5b6264c3099af84e55e68a022
msgid "Checks and repairs errors and inconsistencies in data storage. :dbcommand:`repairDatabase` is analogous to a ``fsck`` command for file systems. Run the :dbcommand:`repairDatabase` command to ensure data integrity after the system experiences an unexpected system restart or crash, if:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:22
# 52022a9170d845ecb4d32e44591c342d
msgid "The :program:`mongod` instance is not running with :term:`journaling <journal>` enabled."
msgstr ""

#: ../source/includes/note-repair.rst:1
# 172b5735f34140679edfbe783bd25af4
msgid "When using :term:`journaling <journal>`, there is almost never any need to run :dbcommand:`repairDatabase`. In the event of an unclean shutdown, the server will be able restore the data files to a pristine state automatically."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:27
# a785fbadcc1646b990a90dc205b5177d
msgid "There are *no* other intact :term:`replica set` members with a complete data set."
msgstr ""

#: ../source/includes/warning-repair.rst:3
# 64707af413c3453a905c0ebce9ef26eb
msgid "During normal operations, only use the :dbcommand:`repairDatabase` command and wrappers including :method:`db.repairDatabase()` in the :program:`mongo` shell and :option:`mongod --repair`, to compact database files and/or reclaim disk space. Be aware that these operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/warning-repair.rst:10
# 6d1434e29c8f4b41b8d31f9faf9c6583
msgid "If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy, and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:32
# 35331189fa6e4a2bb16b37061d9c6784
msgid ":dbcommand:`repairDatabase` takes the following form:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:38
# b5c150866fc04731b7c1da6f55e06f41
msgid ":dbcommand:`repairDatabase` has the following fields:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:42
# 52c78dd3e2084285827dd7b174f3bfdc
msgid "You can explicitly set the options as follows:"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 6523ad1b3fdc4a1297b1cf8d4273eb0b
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:52
# 4339cea663eb4fafa5537b074e730a5c
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. When mounting a separate volume for :dbcommand:`repairDatabase` you must run :dbcommand:`repairDatabase` from the command line and use the :option:`--repairpath <mongod --repairpath>` switch to specify the folder in which to store temporary repair files."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:62
# 05b42e10c61c4fdfbce3569d542cd23a
msgid "See :option:`mongod --repair` and :option:`mongodump --repair` for information on these related options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:66
# 1cfa6a8764934589a5e251c54390ac74
msgid "Behavior"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:68
# f18f0cfd78434e7db170e5d3252eb1cc
msgid "The :dbcommand:`repairDatabase` command compacts all collections in the database. It is identical to running the :dbcommand:`compact` command on each collection individually."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:72
# b1361782f8aa412292ea47dea4ecde69
msgid ":dbcommand:`repairDatabase` reduces the total size of the data files on disk. It also recreates all indexes in the database."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:75
# 9ee98a8cf355446a8739fb1b68572714
msgid "The time requirement for :dbcommand:`repairDatabase` depends on the size of the data set."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:78
# d77800212e0045d18a047383ce29482a
msgid "You may invoke :dbcommand:`repairDatabase` from multiple contexts:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:80
# 87986b2c114d42efa7a801e8c68e9e4f
msgid "Use the :program:`mongo` shell to run the command, as above."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:82
# 52a6c248659e41e2b464510b8db5d405
msgid "Use the :method:`db.repairDatabase()` in the :program:`mongo` shell."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:85
# 6a7697cfdb2242aabe19c93243dafb91
msgid "Run :program:`mongod` directly from your system's shell. Make sure that :program:`mongod` isn't already running, and that you invoke :program:`mongod` as a user that has access to MongoDB's data files. Run as:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:94
# 9784d58fa8ac43e89d7c1e6ca0acbcb4
msgid "To add a repair path:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:102
# 99fdfce015e0478583382d31d5feec21
msgid ":option:`mongod --repair <mongod --repair>` will fail if your database is not a master or primary. In most cases, you should recover a corrupt secondary using the data from an existing intact node. To run repair on a secondary/slave restart the instance in standalone mode without the :option:`--replSet <mongod --replSet>` or :option:`--slave <mongod --slave>` options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:110
# 86efb3a41ea048eca43f2e48f84c54b4
msgid "Example"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:117
# a25c302186624f7c9ec23abe3d786799
msgid "Using ``repairDatabase`` to Reclaim Disk Space"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:119
# cf2ddbba7ef847b580b335f948d80b05
msgid "You should not use :dbcommand:`repairDatabase` for data recovery unless you have no other option."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:122
# 112b83888aa24245b473766e1f56800e
msgid "However, if you trust that there is no corruption and you have enough free space, then :dbcommand:`repairDatabase` is the appropriate and the only way to reclaim disk space."
msgstr ""

