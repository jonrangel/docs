# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/compact.txt:5
# ea0d98f839f6462a8f23bf5fbd6d4760
msgid "compact"
msgstr ""

#: ../source/reference/command/compact.txt:10
# 30bcb37bff3e4f849a7dddddbcbc0449
msgid "Definition"
msgstr ""

#: ../source/reference/command/compact.txt:16
# d5bc5cb170a94550909d551142936c08
msgid "Rewrites and defragments all data in a collection, as well as all of the indexes on that collection. :dbcommand:`compact` has the following form:"
msgstr ""

#: ../source/reference/command/compact.txt:24
# 8f49c8002ecf413cadcc5d784fd5cba7
msgid ":dbcommand:`compact` has the following fields:"
msgstr ""

#: ../source/reference/command/compact.txt:28
# 51bcbf1739724f73a484dccfd0042e65
msgid ":dbcommand:`compact` is similar to :dbcommand:`repairDatabase`; however, :dbcommand:`repairDatabase` operates on an entire database."
msgstr ""

#: ../source/reference/command/compact.txt:32
# ca0f84bcac1a4a3eaba140002f7fb21d
msgid "Always have an up-to-date backup before performing server maintenance such as the :dbcommand:`compact` operation."
msgstr ""

#: ../source/reference/command/compact.txt:38
# 81ef915ac3694f5dbdc38517dad01e5e
msgid "paddingFactor"
msgstr ""

#: ../source/reference/command/compact.txt:42
# 907fd4b221ba4d1dbae548fe7d9a98d5
msgid "The ``paddingFactor`` field takes the following range of values:"
msgstr ""

#: ../source/reference/command/compact.txt:44
# 097b69524ebb44ae94a46dbfbb7c383c
msgid "Default: ``1.0``"
msgstr ""

#: ../source/reference/command/compact.txt:46
# c42ba5551734407d8be6e1b07f58c7bc
msgid "Minimum: ``1.0`` (no padding)"
msgstr ""

#: ../source/reference/command/compact.txt:48
# eef98c8452bd42a8b1fa5abf373f7578
msgid "Maximum: ``4.0``"
msgstr ""

#: ../source/reference/command/compact.txt:50
# b134f277d754430fb39595eb99b68490
msgid "If your updates increase the size of the documents, padding will increase the amount of space allocated to each document and avoid expensive document relocation operations within the data files."
msgstr ""

#: ../source/reference/command/compact.txt:54
# 36c907c84280471eb8f608fcbc9c654b
msgid "You can calculate the padding size by subtracting the document size from the record size or, in terms of the ``paddingFactor``, by subtracting ``1`` from the ``paddingFactor``:"
msgstr ""

#: ../source/reference/command/compact.txt:62
# b7711ecca61f4d69889a20d9e80e6ca7
msgid "For example, a ``paddingFactor`` of ``1.0`` specifies a padding size of ``0`` whereas a ``paddingFactor`` of ``1.2`` specifies a padding size of ``0.2`` or 20 percent (20%) of the document size."
msgstr ""

#: ../source/reference/command/compact.txt:66
# 57055cb2b1384b9b9154f60636e765b0
msgid "With the following command, you can use the ``paddingFactor`` option of the :dbcommand:`compact` command to set the record size to ``1.1`` of the document size, or a padding factor of 10 percent (10%):"
msgstr ""

#: ../source/reference/command/compact.txt:74
# a3ff349ead944be38ebd3546ddd25dbb
msgid ":dbcommand:`compact` compacts existing documents but does not reset ``paddingFactor`` statistics for the collection. After the :dbcommand:`compact` MongoDB will use the existing ``paddingFactor`` when allocating new records for documents in this collection."
msgstr ""

#: ../source/reference/command/compact.txt:82
# 12e4bb2a8d414564ab3b5d9a4305efe4
msgid "paddingBytes"
msgstr ""

#: ../source/reference/command/compact.txt:86
# dca2da6e20f64f1ab409ab348452a1b5
msgid "Specifying ``paddingBytes`` can be useful if your documents start small but then increase in size significantly. For example, if your documents are initially 40 bytes long and you grow them by 1KB, using ``paddingBytes: 1024`` might be reasonable since using ``paddingFactor: 4.0`` would specify a record size of 160 bytes (``4.0`` times the initial document size), which would only provide a padding of 120 bytes (i.e. record size of 160 bytes minus the document size)."
msgstr ""

#: ../source/reference/command/compact.txt:94
# f70ff0a4f20e48d6851c02d47b9b87df
msgid "With the following command, you can use the ``paddingBytes`` option of the :dbcommand:`compact` command to set the padding size to ``100`` bytes on the collection named by ``<collection>``:"
msgstr ""

#: ../source/reference/command/compact.txt:103
# b94be86186d843a4910f66ce6894b69b
msgid "Behaviors"
msgstr ""

#: ../source/reference/command/compact.txt:105
# a0746b7fd54a4494a38fa4a24aae9a5f
msgid "The :dbcommand:`compact` has the behaviors described here."
msgstr ""

#: ../source/reference/command/compact.txt:108
# 9d52ff78fc3e409c9d0698f13a248c88
msgid "Blocking"
msgstr ""

#: ../source/reference/command/compact.txt:110
# 6b4b067569204dd8958831eb0201b2c9
msgid "In MongoDB 2.2, :dbcommand:`compact` blocks activities only for its database. Prior to 2.2, the command blocked all activities."
msgstr ""

#: ../source/reference/command/compact.txt:113
# 5dacd85c17fd4e71a3fda497f9efdf39
msgid "You may view the intermediate progress either by viewing the :program:`mongod` log file or by running the :method:`db.currentOp()` in another shell instance."
msgstr ""

#: ../source/reference/command/compact.txt:118
# 2d62215a8b6c4bde8d9d250c6ddcb256
msgid "Operation Termination"
msgstr ""

#: ../source/reference/command/compact.txt:120
# 894e3f68c786485fbd3b8dc64cc12dab
msgid "If you terminate the operation with the :method:`db.killOp() <db.killOp()>` method or restart the server before the :dbcommand:`compact` operation has finished:"
msgstr ""

#: ../source/reference/command/compact.txt:124
# bacbf0b6ff7b478eb7ff6f562e53b381
msgid "If you have journaling enabled, the data remains valid and usable, regardless of the state of the :dbcommand:`compact` operation. You may have to manually rebuild the indexes."
msgstr ""

#: ../source/reference/command/compact.txt:128
# fdffb101ed8e4e32aa4fee211498d945
msgid "If you do not have journaling enabled and the :program:`mongod` or :dbcommand:`compact` terminates during the operation, it is impossible to guarantee that the data is in a valid state."
msgstr ""

#: ../source/reference/command/compact.txt:132
# 573dbcc0539749e68abbd53509ea6765
msgid "In either case, much of the existing free space in the collection may become un-reusable. In this scenario, you should rerun the compaction to completion to restore the use of this free space."
msgstr ""

#: ../source/reference/command/compact.txt:138
# 818ce8fe0f934be28caa3572ffa8ab09
msgid "Disk Space"
msgstr ""

#: ../source/reference/command/compact.txt:140
# e18310700672414bad24a0f60d8f3c76
msgid ":dbcommand:`compact` generally uses less disk space than :dbcommand:`repairDatabase` and is faster. However, the :dbcommand:`compact` command is still slow and blocks other database use. Only use :dbcommand:`compact` during scheduled maintenance periods."
msgstr ""

#: ../source/reference/command/compact.txt:145
# 480ab7eb625641008b4d54da63019a17
msgid ":dbcommand:`compact` requires up to 2 gigabytes of additional disk space while running. Unlike :dbcommand:`repairDatabase`, :dbcommand:`compact` does *not* free space on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:149
# 547a2737950247eebad666c7a880a193
msgid "To see how the storage space changes for the collection, run the :dbcommand:`collStats` command before and after compaction."
msgstr ""

#: ../source/reference/command/compact.txt:154
# 1413d246edf54a9d95d667a0ea2a38af
msgid "Size and Number of Data Files"
msgstr ""

#: ../source/reference/command/compact.txt:156
# a64c6914101649c4b1ff7c30f2dfd103
msgid ":dbcommand:`compact` may increase the total size and number of your data files, especially when run for the first time. However, this will not increase the total collection storage space since storage size is the amount of data allocated within the database files, and not the size/number of the files on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:163
# ce2c0ae1bc6d4ad0870ccb2d324cc987
msgid "Replica Sets"
msgstr ""

#: ../source/reference/command/compact.txt:165
# 7e1604e48c1448edb11fe5ef881606b0
msgid ":dbcommand:`compact` commands do not replicate to secondaries in a :term:`replica set`:"
msgstr ""

#: ../source/reference/command/compact.txt:168
# 2eb4506fb22b4f2facac291e102b8d9f
msgid "Compact each member separately."
msgstr ""

#: ../source/reference/command/compact.txt:170
# e40666aa4351436cacc794ae82fac3d3
msgid "Ideally run :dbcommand:`compact` on a secondary. See option ``force:true`` above for information regarding compacting the primary."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:3
# c6d8855815804a4a9c4f97dcf802138f
msgid "On secondaries, the |cmd-name| command forces the secondary to enter :replstate:`RECOVERING` state. Read operations issued to an instance in the :replstate:`RECOVERING` state will fail.  This prevents clients from reading during the operation. When the operation completes, the secondary returns to:replstate:`SECONDARY` state."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:10
# 5e6582bcd6a54489ac624004c096e19b
msgid "See :doc:`/reference/replica-states/` for more information about replica set member states."
msgstr ""

#: ../source/includes/fact-command-puts-secondary-into-recovering.rst:13
# 38514fa38dac4b87a5827b871a3a13ab
msgid "See :doc:`/tutorial/perform-maintence-on-replica-set-members` for an example replica set maintenance procedure to maximize availability during maintenance operations."
msgstr ""

#: ../source/reference/command/compact.txt:177
# 66cd165ae56443cc84109667572bc19f
msgid "Sharded Clusters"
msgstr ""

#: ../source/reference/command/compact.txt:179
# d1e94d0f1dcc4cef856c51edea2ca4a1
msgid ":dbcommand:`compact` is a command issued to a :program:`mongod`. In a sharded environment, run :dbcommand:`compact` on each shard separately as a maintenance operation."
msgstr ""

#: ../source/reference/command/compact.txt:183
# b7fff897b3f44bb5a77642cef52a8907
msgid "You cannot issue :dbcommand:`compact` against a :program:`mongos` instance."
msgstr ""

#: ../source/reference/command/compact.txt:186
# 94f69a7738b8479999285c5aa454d668
msgid "Capped Collections"
msgstr ""

#: ../source/reference/command/compact.txt:188
# 7ffb2edd6cf9454ea99af1b64b1a2820
msgid "It is not possible to compact :term:`capped collections <capped collection>` because they don't have padding, and documents cannot grow in these collections. However, the documents of a :term:`capped collection` are not subject to fragmentation."
msgstr ""

