# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/getLastError.txt:3
# 6bbec676f5d443b385639c5e7da77f59
msgid "getLastError"
msgstr ""

#: ../source/reference/command/getLastError.txt:8
# ac2e7c5c5a37453da3e01c0de0fbe3ce
msgid "Definition"
msgstr ""

#: ../source/reference/command/getLastError.txt:12
# b4ff61e04f5b4d5399ac1df327403678
msgid "Returns the error status of the preceding operation on the *current connection*. Clients typically use :dbcommand:`.getLastError` in combination with write operations to ensure that the write succeeds."
msgstr ""

#: ../source/reference/command/getLastError.txt:16
# 0264ff9058c746789261f15b2b9b4965
msgid ":dbcommand:`getLastError` uses the following prototype form:"
msgstr ""

#: ../source/reference/command/getLastError.txt:22
# 82c085d815974c8bb973cad0098398ab
msgid ":dbcommand:`getLastError` uses the following fields:"
msgstr ""

#: ../source/reference/command/getLastError.txt:26
# 0c76fd86c3fc44758d928ac21295258d
msgid ":doc:`Write Concern </core/write-concern>`, :doc:`/reference/write-concern`, and :ref:`replica-set-write-concern`."
msgstr ""

#: ../source/reference/command/getLastError.txt:30
# a4894b209fc24e1793ac13de29ec7dea
msgid "Output"
msgstr ""

#: ../source/reference/command/getLastError.txt:32
# 163a9b6858ca435caf5be05681ad2bd3
msgid "Each :dbcommand:`~db.collection.getLastError()` command returns a document containing a subset of the fields listed below."
msgstr ""

#: ../source/reference/command/getLastError.txt:37
# 19aed80573424827baa8f77fd37a8028
msgid ":data:`~getLastError.ok` is ``true`` when the :dbcommand:`getLastError` command completes successfully."
msgstr ""

#: ../source/reference/command/getLastError.txt:40
# 20bb8c3324344d14958dfa0c2e6ad5ff
msgid "A value of ``true`` does *not* indicate that the preceding operation did not produce an error."
msgstr ""

#: ../source/reference/command/getLastError.txt:45
# 5a74d85ddfb44a0fb91db9afe3e62bbd
msgid ":data:`~getLastError.err` is ``null`` unless an error occurs. When there was an error with the preceding operation, ``err`` contains a textual description of the error."
msgstr ""

#: ../source/reference/command/getLastError.txt:51
# 2abd2f53610e428790692988f94593f7
msgid ":data:`~getLastError.code` reports the preceding operation's error code."
msgstr ""

#: ../source/reference/command/getLastError.txt:56
# a03306cb4fee41d89cfed2555bba768b
msgid "The identifier of the connection."
msgstr ""

#: ../source/reference/command/getLastError.txt:60
# 9414ad1d8af54f7a83b6660107252e29
msgid "When issued against a replica set member and the preceding operation was a write or update, :data:`~getLastError.lastOp` is the *optime* timestamp in the :term:`oplog`  of the change."
msgstr ""

#: ../source/reference/command/getLastError.txt:66
# 7508757e223f4d79aef261fdceb8909e
msgid ":data:`~getLastError.n` reports the number of documents updated or removed, if the preceding operation was an update or remove operation."
msgstr ""

#: ../source/reference/command/getLastError.txt:72
# 0a7caf9c55244f949439144332856962
msgid ":data:`~getLastError.updatedExisting` is ``true`` when an update affects at least one document and does not result in an :term:`upsert`."
msgstr ""

#: ../source/reference/command/getLastError.txt:78
# fa6cb73d73c54220b83f2dfbba1a2134
msgid "If the update results in an insert, :data:`~getLastError.upserted` is the value of ``_id`` field of the document."
msgstr ""

#: ../source/reference/command/getLastError.txt:81
# b8900cdf93964441b79b5f007a9a7afb
msgid "Earlier versions of MongoDB included :data:`~getLastError.upserted` only if ``_id`` was an :term:`ObjectId <objectid>`."
msgstr ""

#: ../source/reference/command/getLastError.txt:88
# a22ef78dd39b4298b62aac7c95406678
msgid "If set, ``wnote`` indicates that the preceding operation's error relates to using the ``w`` parameter to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:0
# bdc47d4a00d247d4bdea821943776dc0
msgid "See"
msgstr ""

#: ../source/reference/command/getLastError.txt:96
# 8cf0112b89034c5cb960daf36b425466
msgid ":data:`~getLastError.wtimeout` is ``true`` if the :dbcommand:`getLastError` timed out because of the ``wtimeout`` setting to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:102
# 7b8e2f1f868f47a7b4255ee4ce695e29
msgid "If the preceding operation specified a timeout using the ``wtimeout`` setting to :dbcommand:`getLastError`, then :data:`~getLastError.waited` reports the number of milliseconds :dbcommand:`getLastError` waited before timing out."
msgstr ""

#: ../source/reference/command/getLastError.txt:109
# 446f105077f243d0ba62266891f44048
msgid ":data:`getLastError.wtime` is the number of milliseconds spent waiting for the preceding operation to complete. If :dbcommand:`getLastError` timed out, :data:`~getLastError.wtime` and :dbcommand:`getLastError.waited` are equal."
msgstr ""

#: ../source/reference/command/getLastError.txt:117
# 462a7ef52ccb4b0798691329189bfe3f
msgid "Examples"
msgstr ""

#: ../source/reference/command/getLastError.txt:120
# 96d71af69b804b0290a7b303de6a52bc
msgid "Confirm Replication to Two Replica Set Members"
msgstr ""

#: ../source/reference/command/getLastError.txt:122
# e830aede44df488d9d5838b397990e1e
msgid "The following example ensures the operation has replicated to two members (the primary and one other member):"
msgstr ""

#: ../source/reference/command/getLastError.txt:130
# 0f1c2f7dcd16427fa4efb53b79fae6ce
msgid "Confirm Replication to a Majority of a Replica Set"
msgstr ""

#: ../source/reference/command/getLastError.txt:132
# 44a5e174044041e3ab55524c98900fab
msgid "The following example ensures the write operation has replicated to a majority of the configured members of the set."
msgstr ""

#: ../source/includes/fact-master-slave-majority.rst:1
# 0eb1e65d6e044730aac91b04af9775c6
msgid "In :doc:`Master/Slave </core/master-slave>` deployments, :dbcommand:`getLastError` treats ``w:majority`` as equivalent to ``w:1``. In earlier versions of MongoDB, ``w:majority`` produces an error in :doc:`master/slave </core/master-slave>` deployments."
msgstr ""

#: ../source/reference/command/getLastError.txt:142
# fdebc807cdb24fd8a0d2bfec4500772f
msgid "Set a Timeout for a ``getLastError`` Response"
msgstr ""

#: ../source/reference/command/getLastError.txt:144
# 4119be405aa74c08ad450ead708238e9
msgid "Unless you specify a timeout, a :dbcommand:`getLastError` command may block forever if MongoDB cannot satisfy the requested write concern. To specify a timeout of 5000 milliseconds, use an invocation that resembles the following:"
msgstr ""

#: ../source/reference/command/getLastError.txt:153
# f5f17f2de65b4003989073b964fd034e
msgid "When ``wtimeout`` is ``0``, the :dbcommand:`getLastError` operation will never time out."
msgstr ""

