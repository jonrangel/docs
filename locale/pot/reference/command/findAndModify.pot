# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/findAndModify.txt:3
# d4fd66e494b1426bb7378b05598f73ef
msgid "findAndModify"
msgstr ""

#: ../source/reference/command/findAndModify.txt:13
# e7ca0fab53c24749b771f4bcb6e7c7f0
msgid "The :dbcommand:`findAndModify` command atomically modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option."
msgstr ""

#: ../source/reference/command/findAndModify.txt:19
# f377a2ca2d7346fca826ab0bae3e960d
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:34
# 65edd4a81974477cad990058fdf0dfec
msgid "The :dbcommand:`findAndModify` command takes the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:37
# 23fc2e356fb04563ae8b149a6edfc368
msgid "Required. The collection against which to run the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:41
# 6eb02c9deff34a64b22df47f1187548f
msgid "Optional. Specifies the selection criteria for the modification. The ``query`` field employs the same :ref:`query selectors <query-selectors>` as used in the :method:`~db.collection.find()` method. Although the query may match multiple documents, :dbcommand:`findAndModify` will only select one document to modify."
msgstr ""

#: ../source/reference/command/findAndModify.txt:50
# 8b27023704fe4af3ab9f5e8f697207ef
msgid "Optional. Determines which document the operation will modify if the query selects multiple documents. :dbcommand:`findAndModify` will modify the first document in the sort order specified by this argument."
msgstr ""

#: ../source/reference/command/findAndModify.txt:57
# 2ff391d543e849a085e016efde1818f9
msgid "Must specify either the ``remove`` or the ``update`` field in the :dbcommand:`findAndModify` command. When ``true``, removes the selected document. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:63
# 8945c79b85ff43f89b1598442cab885a
msgid "Must specify either the ``remove`` or the ``update`` field in the :dbcommand:`findAndModify` command. The ``update`` field employs the same :ref:`update operators <update-operators>` or ``field: value`` specifications to modify the selected document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:70
# 972c85eafb62403e9e501a8e8b329c84
msgid "Optional. When ``true``, returns the modified document rather than the original. The :dbcommand:`findAndModify` method ignores the ``new`` option for ``remove`` operations. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:77
# e7d8c2da41464c298f379140f4dec546
msgid "Optional. A subset of fields to return. The ``fields`` document specifies an inclusion of a field with ``1``, as in the following:  .. code-block:: javascript     fields: { <field1>: 1, <field2>: 1, ... }  See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/reference/command/findAndModify.txt:79
# 6a8e169abff4451b8f7e00b59ac3e46d
msgid "Optional. A subset of fields to return. The ``fields`` document specifies an inclusion of a field with ``1``, as in the following:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:87
# ca723e481d07400e9187fc88234bbc68
msgid "See :ref:`projection <read-operations-projection>`."
msgstr ""

#: ../source/reference/command/findAndModify.txt:89
# b60b303a67a342408ee6f64cceffa0fb
msgid "Optional. Used in conjunction with the ``update`` field. When ``true``, the :dbcommand:`findAndModify` command creates a new document if the ``query`` returns no documents. The default is ``false``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:96
# a4ebd7a2f8834af38045187553047b51
msgid "The :dbcommand:`findAndModify` command returns a document, similar to the following:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:114
# 1c6f0187877141d99bf2f589578891f4
msgid "The return document contains the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:116
# c8133c37b8d747f688e43085110b695c
msgid "The ``lastErrorObject`` field that returns the details of the command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:119
# 9e3c507addbd403c8e98b7e7950c01fc
msgid "The ``updatedExisting`` field **only** appears if the command is either an ``update`` or an ``upsert``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:122
# 6866e6eec88147229454350b84e27d15
msgid "The ``upserted`` field **only** appears if the command is an ``upsert``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:125
# cbd010ce1836487bad6d1b3f1c2a2f89
msgid "The ``value`` field that returns either:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:127
# 256c37ffc47e496e827e8dbde582648d
msgid "the original (i.e. pre-modification) document if ``new`` is false, or"
msgstr ""

#: ../source/reference/command/findAndModify.txt:130
# a1e99191874a4fc09033ebe9589360f6
msgid "the modified or inserted document if ``new: true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:132
# 606882dcbc0e46e1ba55b32229f94312
msgid "The ``ok`` field that returns the status of the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:136
# 9318a9054ef640578c4753180a0d404e
msgid "If the :dbcommand:`findAndModify` finds no matching document, then:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:139
# a9a5a9561f0046cf8d1aabc0ff47365f
msgid "for ``update`` or ``remove`` operations, ``lastErrorObject`` does not appear in the return document and the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:147
# bcc6afb50bf54a098b80b7d43adb1323
msgid "for an ``upsert`` operation that performs an insert, when ``new`` is ``false``, **and** includes a ``sort`` option, the return document has ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds an empty document ``{}``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:153
# c1be600b03cf412fb305521e150a2e1c
msgid "for an ``upsert`` that performs an insert, when ``new`` is ``false`` **without** a specified ``sort`` the return document has ``lastErrorObject``, ``value``, and ``ok`` fields, but the ``value`` field holds a ``null``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:158
# a8294d2c0c604751ab40fb0505462b2b
msgid "Previously, the command returned an empty document (e.g. ``{}``) in the ``value`` field. See :ref:`the 2.2 release notes <2.2-findandmodify-returns-null>` for more information."
msgstr ""

#: ../source/reference/command/findAndModify.txt:163
# 9a0a3cd5110047e89dbf50aa48569b21
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:165
# 4881c86e24f348b498aa26512ef928b2
msgid "The following command updates an existing document in the ``people`` collection where the document matches the ``query`` criteria:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:180
# 7c02069c72dc4352934d20ba7175c2c9
msgid "This command performs the following actions:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:182
# a3c9d08cc8ba4eb29e965fc364cdaaf6
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/command/findAndModify.txt:187
# bdeee25632c340c5997a6f2b9633fad9
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the command will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:192
# 42ab9b33e33847d780b7fb7d00b48f12
msgid "The ``update`` :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/command/findAndModify.txt:195
# 6e7117a56d494e93ab554718f3511efe
msgid "The command returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:197
# ab8ff4e5cee04269b6b84ecfcb481b17
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``updatedExisting`` which is ``true``, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:201
# cdeca670eeb44097abba3904713a012e
msgid "The ``value`` field that contains the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:224
# 8db0c137cb9e4816a20258f806a616c0
msgid "To return the modified document in the ``value`` field, add the ``new:true`` option to the command."
msgstr ""

#: ../source/reference/command/findAndModify.txt:227
# a61c59b3e20c40cc9925f364a8754a1d
msgid "If no document match the ``query`` condition, the command returns a document that contains ``null`` in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:235
# 2bc8f7cc5f184d8289a939fbbea614db
msgid "The :program:`mongo` shell and many :term:`drivers <driver>` provide a :method:`~db.collection.findAndModify()` helper method. Using the shell helper, this previous operation can take the following form:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:248
# fd1c2d48d53642458e5bfb336ec59429
msgid "However, the :method:`~db.collection.findAndModify()` shell helper method returns just the unmodified document, or the modified document when ``new`` is ``true``."
msgstr ""

#: ../source/reference/command/findAndModify.txt:262
# 42bd1fd073964929b07f17c9f73436f0
msgid "The following :dbcommand:`findAndModify` command includes the ``upsert: true`` option to insert a new document if no document matches the ``query`` condition:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:278
# 6fe6dbf4626b4a1d9672f1878b32d4ad
msgid "If the command does **not** find a matching document, the command performs an upsert and returns a document with the following fields:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:282
# 127a4c2396884b6295f85c2417f5fe2e
msgid "The ``lastErrorObject`` field that contains the details of the command, including the field ``upserted`` that contains the ``ObjectId`` of the newly inserted document, and"
msgstr ""

#: ../source/reference/command/findAndModify.txt:286
# 54fc54ae99384cec9a8dc4c801c33af3
msgid "The ``value`` field that contains an empty document ``{}`` as the original document because the command included the ``sort`` option:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:307
# 9c4983e2b7f14f078aa4968255c16cdd
msgid "If the command did **not** include the ``sort`` option, the ``value`` field would contain ``null``:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:322
# d599bc1a15084885a7862a49079342df
msgid "The following :dbcommand:`findAndModify` command includes both ``upsert: true`` option and the ``new:true`` option to return the newly inserted document in the ``value`` field if a document matching the ``query`` is not found:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:340
# ac7f60c6e27a4f5db4c778a97e5e51ed
msgid "The command returns the newly inserted document in the ``value`` field:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:364
# 71fc3b39a57e42d28db1d7b1e24c4045
msgid "When the :dbcommand:`findAndModify` command includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances. For instance, if multiple clients issue the :dbcommand:`findAndModify` command and these commands complete the ``find`` phase before any one starts the ``modify`` phase, these commands could insert the same document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:372
# cc142a278e74466f99db8bad5d320a99
msgid "Consider an example where no document with the name ``Andy`` exists and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:387
# df8d7bed47e849efbf3f95727f72f1ee
msgid "If all the commands finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert. To prevent this condition, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, then the multiple :dbcommand:`findAndModify` commands would observe one of the following behaviors:"
msgstr ""

#: ../source/reference/command/findAndModify.txt:395
# bda4184b1c8a4714807028bcb85d1115
msgid "Exactly one :dbcommand:`findAndModify` would successfully insert a new document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:398
# 9b0d2b75e3134702a84bb478463cc962
msgid "Zero or more :dbcommand:`findAndModify` commands would update the newly inserted document."
msgstr ""

#: ../source/reference/command/findAndModify.txt:401
# 7c80c991239f4e85a7db20d91982cd3e
msgid "Zero or more :dbcommand:`findAndModify` commands would fail when they attempted to insert a duplicate. If the command fails due to a unique index constraint violation, you can retry the command. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/command/findAndModify.txt:408
# 0b15fd6af4c14b65b4b1abaae1747389
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` must contain the :term:`shard key` for all operations against the shard cluster. :dbcommand:`findAndModify` operations issued against :program:`mongos` instances for non-sharded collections function normally."
msgstr ""

#: ../source/reference/command/findAndModify.txt:417
# 1dde5d9a3bab447e9a891f8f5218cc08
msgid "This command obtains a write lock on the affected database and will block other operations until it has completed; however, typically the write lock is short lived and equivalent to other similar :method:`~db.collection.update()` operations."
msgstr ""

