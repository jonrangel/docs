# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/split.txt:3
# 5f7b5692c82d4620801855bb9e168743
msgid "split"
msgstr ""

#: ../source/reference/command/split.txt:8
# 248111419e5746cfa42824af195456eb
msgid "Definition"
msgstr ""

#: ../source/reference/command/split.txt:12
# 3b563cc332ba4f1ab7f4c0c95460ae43
msgid "Splits a :term:`chunk` in a :term:`sharded cluster` into two chunks. The :program:`mongos` instance splits and manages chunks automatically, but for exceptional circumstances the :dbcommand:`split` command does allow administrators to manually create splits. See :doc:`/tutorial/split-chunks-in-sharded-cluster` for information on these circumstances, and on the MongoDB shell commands that wrap :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:20
# c1e1c282099f43b0a7643b86dfd47b07
msgid "The :dbcommand:`split` command uses the following form:"
msgstr ""

#: ../source/reference/command/split.txt:27
# 0a4b783918f74c729ad47e8eeae7c309
msgid "The :dbcommand:`split` command takes a document with the following fields:"
msgstr ""

#: ../source/reference/command/split.txt:33
# 416722d454f549909feb8779f6cc2459
msgid "Considerations"
msgstr ""

#: ../source/reference/command/split.txt:35
# 1cb7073eb7dc42fa8c13d07e1de931d6
msgid ":dbcommand:`split` does *not* support splitting an chunk that does not contain documents. Use :dbcommand:`splitAt` to create splits in chunks that do not contain documents."
msgstr ""

#: ../source/reference/command/split.txt:40
# 970b833d8ecd435780a6b6a3f23723f2
msgid "Command Formats"
msgstr ""

#: ../source/reference/command/split.txt:42
# 0e2b9969279d482087d664f8de4213ec
msgid "To create a chunk split, connect to a :program:`mongos` instance, and issue the following command to the ``admin`` database:"
msgstr ""

#: ../source/reference/command/split.txt:50
#: ../source/reference/command/split.txt:57
# aaf9c6ff66ca477ba234ea5a7b31a776
# cf619537cd3e4cb681d868368b083fe6
msgid "Or:"
msgstr ""

#: ../source/reference/command/split.txt:64
# 99583dfbe9a64e1bb32e9d93c007327e
msgid "To create a split for a collection that uses a :term:`hashed shard key`, use the ``bounds`` parameter. Do *not* use the ``middle`` parameter for this purpose."
msgstr ""

#: ../source/includes/warning-splitting-chunks.rst:3
# be9f2efe13304f31bf55539575338f30
msgid "Be careful when splitting data in a sharded collection to create new chunks. When you shard a collection that has existing data, MongoDB automatically creates chunks to evenly distribute the collection. To split data effectively in a sharded cluster you must consider the number of documents in a chunk and the average document size to create a uniform chunk size. When chunks have irregular sizes, shards may have an equal number of chunks but have very different data sizes. Avoid creating splits that lead to a collection with differently sized chunks."
msgstr ""

#: ../source/reference/command/split.txt:70
# c6d9cea561584b5baed99c6082063f94
msgid ":dbcommand:`moveChunk`, :method:`sh.moveChunk()`, :method:`sh.splitAt()`, and :method:`sh.splitFind()`, which wrap the functionality of :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:75
# 2ff1a116f54e4b4e94f1329ddc057724
msgid "Examples"
msgstr ""

#: ../source/reference/command/split.txt:77
# deb287252ed940eba4da714a297b4dfd
msgid "The following sections provide examples of the :dbcommand:`split` command."
msgstr ""

#: ../source/reference/command/split.txt:80
# 84174b26bf32424e918aa915049fd5ca
msgid "Split a Chunk in Half"
msgstr ""

#: ../source/reference/command/split.txt:86
# 835473aed7a04de9a760b5d10ddc33b6
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that holds documents that match ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks of equal size."
msgstr ""

#: ../source/reference/command/split.txt:92
# 8103f71b8dde406aa308cd20063d271a
msgid ":dbcommand:`split` creates two equal chunks by range as opposed to size, and does not use the selected point as a boundary for the new chunks"
msgstr ""

#: ../source/reference/command/split.txt:97
# 83a3557288c84a6c898065a9f3d44d00
msgid "Define an Arbitrary Split Point"
msgstr ""

#: ../source/reference/command/split.txt:99
# 6f58b639739140d09303f33857111cf1
msgid "To define an arbitrary split point, use the following form:"
msgstr ""

#: ../source/reference/command/split.txt:105
# e7a8922e6d234663b3ace927e1eab251
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that would hold documents matching the query ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks, with the matching document as the lower bound of one of the split chunks."
msgstr ""

#: ../source/reference/command/split.txt:112
# 12dab972ac52448b8e01d3c46069a0f4
msgid "This form is typically used when :term:`pre-splitting` data in a collection."
msgstr ""

#: ../source/reference/command/split.txt:116
# e535955fc73f45b8a747627f6ad80f12
msgid "Split a Chunk Using Values of a Hashed Shard Key"
msgstr ""

#: ../source/reference/command/split.txt:118
# d9b2b82a83a84f2487d8eb00a801f6cb
msgid "This example uses the :term:`hashed shard key` ``userid`` in a ``people`` collection of a ``test`` database. The following command uses an array holding two single-field documents to represent the minimum and maximum values of the hashed shard key to split the chunk:"
msgstr ""

#: ../source/reference/command/split.txt:130
# dd66c8afc39e45d498e5b301fe863b23
msgid "MongoDB uses the 64-bit :ref:`NumberLong <shell-type-long>` type to represent the hashed value."
msgstr ""

#: ../source/reference/command/split.txt:133
# fb11a9ce130e4e89868309d70c7de1ad
msgid "Use :method:`sh.status()` to see the existing bounds of the shard keys."
msgstr ""

#: ../source/reference/command/split.txt:136
# 44f03f44f5674eeb9c008182d7a0d745
msgid "Metadata Lock Error"
msgstr ""

#: ../source/reference/command/split.txt:138
# 531ed511ebd343cd927015d954daa932
msgid "If another process in the :program:`mongos`, such as a balancer process, changes metadata while :dbcommand:`split` is running, you may see a ``metadata lock error``."
msgstr ""

#: ../source/reference/command/split.txt:146
# 9a27a25e83a845f4989d9b1a6a3ae23e
msgid "This message indicates that the split has failed with no side effects. Retry the :dbcommand:`split` command."
msgstr ""

