# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/bson-types.txt:3
# fe9bef9ce3544c35b4c1ceb79c2313b5
msgid "BSON Types"
msgstr ""

#: ../source/reference/bson-types.txt:7
# 3de2abbc3ce047739444564be3162e25
msgid ":term:`BSON` is a binary serialization format used to store documents and make remote procedure calls in MongoDB. The BSON specification is located at `bsonspec.org <http://bsonspec.org/>`_."
msgstr ""

#: ../source/reference/bson-types.txt:11
# 08ce06236fec40cfba7a029df86fbf2b
msgid "BSON supports the following data types as values in documents. Each data type has a corresponding number that can be used with the :query:`$type` operator to query documents by BSON type."
msgstr ""

#: ../source/reference/bson-types.txt:16
# 977032187d9b4651a928718914cbe8d7
msgid "**Type**"
msgstr ""

#: ../source/reference/bson-types.txt:16
# 57f63952eef04dca85c7ed3c73a7a8a1
msgid "**Number**"
msgstr ""

#: ../source/reference/bson-types.txt:18
# bdfc5b0ade0a4536ae3c359994909a69
msgid "Double"
msgstr ""

#: ../source/reference/bson-types.txt:18
# bec75b3c792148fcab9335c62b37742d
msgid "1"
msgstr ""

#: ../source/reference/bson-types.txt:19
#: ../source/reference/bson-types.txt:62
# d4b975c7e9aa4eeba45f2356d5e44d5f
# 331656fc47a64ba48baac01363c5b873
msgid "String"
msgstr ""

#: ../source/reference/bson-types.txt:19
# 920cb464b1034470baaa11dc1350a7a6
msgid "2"
msgstr ""

#: ../source/reference/bson-types.txt:20
#: ../source/includes/fact-sort-order.rst:8
# bdc5c87dfe5c40968fb227feb2b304e7
# d4a65f81f5084b67b8ee1571ed7ea4aa
msgid "Object"
msgstr ""

#: ../source/reference/bson-types.txt:20
# 7c1462393c9e4e60915e6a9677b4f0b4
msgid "3"
msgstr ""

#: ../source/reference/bson-types.txt:21
#: ../source/includes/fact-sort-order.rst:9
# 11ff1312f1504361a90a4aa828027dcc
# 73d84d9145bb4f38bebd35fd6a20d524
msgid "Array"
msgstr ""

#: ../source/reference/bson-types.txt:21
# 36497548b25249fe8b68a5f144ba709b
msgid "4"
msgstr ""

#: ../source/reference/bson-types.txt:22
# cbbe9239159743179e7d3fd319d17652
msgid "Binary data"
msgstr ""

#: ../source/reference/bson-types.txt:22
# bf2e2e3afbe0414b8d3c007eaefd70f3
msgid "5"
msgstr ""

#: ../source/reference/bson-types.txt:23
# c0d560c80c604fb38a9352cffbc863e5
msgid "Object id"
msgstr ""

#: ../source/reference/bson-types.txt:23
# b824ecf954654077a8482b86d5b955af
msgid "7"
msgstr ""

#: ../source/reference/bson-types.txt:24
#: ../source/includes/fact-sort-order.rst:12
# 5a090972a2e0493ba7b0c6dbc5250a98
# b7d3b3b740684dc4aabf1a2f9e878895
msgid "Boolean"
msgstr ""

#: ../source/reference/bson-types.txt:24
# 0ebeed5db4e849d9a455e8dab3acf073
msgid "8"
msgstr ""

#: ../source/reference/bson-types.txt:25
#: ../source/reference/bson-types.txt:142
# 2151c8c2cebc4f799cd627ce6d923cb2
# 7c039a263089476a8c3f7cbc000ff949
msgid "Date"
msgstr ""

#: ../source/reference/bson-types.txt:25
# d526cfcaa09d4b5789e963978be3bc56
msgid "9"
msgstr ""

#: ../source/reference/bson-types.txt:26
#: ../source/includes/fact-sort-order.rst:5
# 1266ef6d2f4340b6869e97515ad5e20b
# d247d5ce1b064f249ffb4c60c976dd79
msgid "Null"
msgstr ""

#: ../source/reference/bson-types.txt:26
# 561bd8ba655a49ddaf5d288800fd6d32
msgid "10"
msgstr ""

#: ../source/reference/bson-types.txt:27
#: ../source/includes/fact-sort-order.rst:14
# 00eb55fe65f0442fba2eb6d62efb624c
# ca0a9fc4c5954876a1ad385daf27cb01
msgid "Regular Expression"
msgstr ""

#: ../source/reference/bson-types.txt:27
# 12469f27dfda43809332a027efe32f6e
msgid "11"
msgstr ""

#: ../source/reference/bson-types.txt:28
# e20210a2cd604e41898579d64f6378da
msgid "JavaScript"
msgstr ""

#: ../source/reference/bson-types.txt:28
# 542decd3d972471ea7576172f074897c
msgid "13"
msgstr ""

#: ../source/reference/bson-types.txt:29
# f12ec3e295df42b5a0e5a23ac01d0c98
msgid "Symbol"
msgstr ""

#: ../source/reference/bson-types.txt:29
# 27b33bc3b8b7460c8a2053f918af8ca3
msgid "14"
msgstr ""

#: ../source/reference/bson-types.txt:30
# 8872c1d334d04d07baa33a79ee2d6774
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/reference/bson-types.txt:30
# 372d0ca2e1b642b1a6fc5066a4605612
msgid "15"
msgstr ""

#: ../source/reference/bson-types.txt:31
# 707ff96fc9414dfe8b150c3df193e316
msgid "32-bit integer"
msgstr ""

#: ../source/reference/bson-types.txt:31
# 8580694889634049973bb67cb329238d
msgid "16"
msgstr ""

#: ../source/reference/bson-types.txt:32
# 668202db2f0f40b484067cf24e2d21b5
msgid "Timestamp"
msgstr ""

#: ../source/reference/bson-types.txt:32
# 4506c582643c456880463cb589035070
msgid "17"
msgstr ""

#: ../source/reference/bson-types.txt:33
# 9efa8c7557504de38f40bbefe910f359
msgid "64-bit integer"
msgstr ""

#: ../source/reference/bson-types.txt:33
# 71090021a8c64156a77f3e937c35d698
msgid "18"
msgstr ""

#: ../source/reference/bson-types.txt:34
# b1d7053ba33a46efab0764a222f38890
msgid "Min key"
msgstr ""

#: ../source/reference/bson-types.txt:34
# bc5a79439d44461e9a675a70c0687e33
msgid "255"
msgstr ""

#: ../source/reference/bson-types.txt:35
# 7d3c5ba04bda4409b1901aa66b5d2cee
msgid "Max key"
msgstr ""

#: ../source/reference/bson-types.txt:35
# 0d70adc86def482298e8b4287d17f872
msgid "127"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# 3df3d9d21cf04c0599a88cd5e79f30ce
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# de9bc0b4f7184d9498ba5af4f6b7d740
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# 60c1bc8c266547d8aa7f48a798ed9c3b
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# 438f4a97745f4c30b9e98e2cae7a3c90
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 1074d82168614e239ee7b715d1f51cb0
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
#: ../source/reference/bson-types.txt:51
# d7b4dbbbcc7d477692da0dbdfcd80596
# cc167469b9fc45d197336f10ab9c18be
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# 1f0e6f65a8f44d6d8be6e21c876606ad
msgid "Date, Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# b194e9938a8a4ad78886409b126b62a7
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:17
# e5f67458330e4f27931fd1a903d80679
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:20
# 51eec89a9e314f4da26786b4342653a0
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:24
# 71252e4a88ab441faf081f8dd034d902
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/reference/bson-types.txt:40
# b9800f186b9c4e2c939cea48a21d45b3
msgid "To determine a field's type, see :ref:`check-types-in-shell`."
msgstr ""

#: ../source/reference/bson-types.txt:42
# cea6fbbb5e7b405a8ef05a072b3950a7
msgid "If you convert BSON to JSON, see :doc:`/reference/mongodb-extended-json`."
msgstr ""

#: ../source/reference/bson-types.txt:45
# 39ba68ae27e941fdb1299b0971fd23c1
msgid "The next sections describe special considerations for particular BSON types."
msgstr ""

#: ../source/reference/bson-types.txt:53
# dcb45d46d5e9455d93a798afeae479ee
msgid "ObjectIds are: small, likely unique, fast to generate, and ordered. These values consists of 12-bytes, where the first four bytes are a timestamp that reflect the ObjectId's creation. Refer to the :doc:`ObjectId </reference/object-id>` documentation for more information."
msgstr ""

#: ../source/reference/bson-types.txt:64
# 348c5f5aa4c04b2bb1ef726759fa959a
msgid "BSON strings are UTF-8. In general, drivers for each programming language convert from the language's string format to UTF-8 when serializing and deserializing BSON. This makes it possible to store most international characters in BSON strings with ease. [#sort-string-internationalization]_ In addition, MongoDB :query:`$regex` queries support UTF-8 in the regex string."
msgstr ""

#: ../source/reference/bson-types.txt:71
# e3ce590d03194b4daa47f91df6eedfcc
msgid "Given strings using UTF-8 character sets, using :method:`sort() <cursor.sort()>` on strings will be reasonably correct. However, because internally :method:`sort() <cursor.sort()>` uses the C++ ``strcmp`` api, the sort order may handle some characters incorrectly."
msgstr ""

#: ../source/reference/bson-types.txt:80
# b345bea033334030a69c77030755e123
msgid "Timestamps"
msgstr ""

#: ../source/reference/bson-types.txt:82
# b47bb8e53b104affad93e6400c8f493a
msgid "BSON has a special timestamp type for *internal* MongoDB use and is **not** associated with the regular :ref:`document-bson-type-date` type. Timestamp values are a 64 bit value where:"
msgstr ""

#: ../source/reference/bson-types.txt:86
# fa703e2ee14b460f884468c92922bbdd
msgid "the first 32 bits are a ``time_t`` value (seconds since the Unix epoch)"
msgstr ""

#: ../source/reference/bson-types.txt:88
# f33af56715d84ad1aae030cadb613dd4
msgid "the second 32 bits are an incrementing ``ordinal`` for operations within a given second."
msgstr ""

#: ../source/reference/bson-types.txt:91
# f6e7463d7bfc4232a38d8e5b53c0796c
msgid "Within a single :program:`mongod` instance, timestamp values are always unique."
msgstr ""

#: ../source/reference/bson-types.txt:94
# 57739652ab3243e59728623a82d9545e
msgid "In replication, the :term:`oplog` has a ``ts`` field. The values in this field reflect the operation time, which uses a BSON timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:100
# 56a428d1cb0543a398fa1e2b01838557
msgid "The BSON Timestamp type is for *internal* MongoDB use. For most cases, in application development, you will want to use the BSON date type. See :ref:`document-bson-type-date` for more information."
msgstr ""

#: ../source/reference/bson-types.txt:105
# 188d2b850da4408ba20df62893aee2c9
msgid "If you create a BSON Timestamp using the empty constructor (e.g. ``new Timestamp()``), MongoDB will only generate a timestamp *if* you use the constructor in the first field of the document. [#id_exception]_ Otherwise, MongoDB will generate an empty timestamp value (i.e. ``Timestamp(0, 0)``.)"
msgstr ""

#: ../source/reference/bson-types.txt:111
# 331d3f842d944c6081b3422807509f64
msgid ":program:`mongo` shell displays the Timestamp value with the wrapper:"
msgstr ""

#: ../source/reference/bson-types.txt:118
# d68006a1eb88438187f95759b48f9759
msgid "Prior to version 2.1, the :program:`mongo` shell display the Timestamp value as a document:"
msgstr ""

#: ../source/reference/bson-types.txt:125
# 340d4924b70843a6964cda69881c0a1d
msgid "If the first field in the document is ``_id``, then you can generate a timestamp in the *second* field of a document."
msgstr ""

#: ../source/reference/bson-types.txt:131
# 45038684a8f74e55bf2869045e56c97a
msgid "In the following example, MongoDB will generate a Timestamp value, even though the ``Timestamp()`` constructor is *not* in the first field in the document:"
msgstr ""

#: ../source/reference/bson-types.txt:144
# 2a14349bb20d4d998c2362d9cc95ebf9
msgid "BSON Date is a 64-bit integer that represents the number of milliseconds since the Unix epoch (Jan 1, 1970). The `official BSON specification <http://bsonspec.org/#/specification>`_ refers to the BSON Date type as the *UTC datetime*."
msgstr ""

#: ../source/reference/bson-types.txt:149
# bfd5e37c07dc4de383d9c467afaa296f
msgid "BSON Date type is signed. [#unsigned-date]_ Negative values represent dates before 1970."
msgstr ""

#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
# ef90f075b42446558405e4bb2535cde2
# 0a736d4b08884822b9a88970cf377642
# b389a9c287a64c80ad264d12b9aaaedf
# 5eed534484d4415d937cd6fd02c0dd68
msgid "Example"
msgstr ""

#: ../source/reference/bson-types.txt:180
# f52fdbf098d3473a8137d20fa9006fb9
msgid "Prior to version 2.0, ``Date`` values were incorrectly interpreted as *unsigned* integers, which affected sorts, range queries, and indexes on ``Date`` fields. Because indexes are not recreated when upgrading, please re-index if you created an index on ``Date`` values with an earlier version, and dates before 1970 are relevant to your application."
msgstr ""

