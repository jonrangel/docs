# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/read-preference.txt:3
# 7391b504d8094e6a928a3f0a21d38111
msgid "Read Preference Reference"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:1
# 04a06b1b4dd846b4b5f0982df57c6dbc
msgid "Read preference describes how MongoDB clients route read operations to members of a :term:`replica set`."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:4
# 2eddbe3a14ae4f6e95cabbba6ed819bf
msgid "By default, an application directs its read operations to the :term:`primary` member in a :term:`replica set`. Reading from the primary guarantees that read operations reflect the latest version of a document. However, by distributing some or all reads to secondary members of the replica set, you can improve read throughput or reduce latency for an application that does not require fully up-to-date data."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:5
# f9e401728a5e432da681ea4e8145df2b
msgid "Read Preference Mode"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:6
# d8020626bfc14fc4bbaefb3163a8a681
msgid "Description"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:7
# 0ed7f6fdee5e40398aa27c81c96caf48
msgid ":readmode:`primary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:8
# 2e805b45f6c64f3bbf00f31a008a6dbd
msgid "Default mode. All operations read from the current replica set :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:10
# f985eb909bc44678b1b4fd430700d3f2
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:11
# df0b0082b04e4797a97452985f26a6d7
msgid "In most situations, operations read from the :term:`primary` but if it is unavailable, operations read from :term:`secondary` members."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:14
# adb49ff3ab72472895a0f42e18d9745d
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:15
# 66ec192548424b2998184bd872b7fff8
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:17
# 15076fcbb76b4b0e9e8c79b7efc5ff99
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:18
# a266ef094d794c47b75d30e244708c83
msgid "In most situations, operations read from :term:`secondary` members but if no :term:`secondary` members are available, operations read from the :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:21
# 118c10a5cf4f4bfaa78b4d8fa5dd2e14
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:22
# eab242be44b64cce89cc7c3f0496d378
msgid "Operations read from member of the :term:`replica set` with the least network latency, irrespective of the member's type."
msgstr ""

#: ../source/reference/read-preference.txt:17
# fe16a665d4204ba2a45c261b3d2994fb
msgid "Read Preference Modes"
msgstr ""

#: ../source/reference/read-preference.txt:21
# 3da14fedc4b44bbb8fb2c61c98d2a61c
msgid "All read operations use only the current replica set :term:`primary`. This is the default. If the primary is unavailable, read operations produce an error or throw an exception."
msgstr ""

#: ../source/reference/read-preference.txt:25
# 00344aac548a4dad9d2ee1c21e4084ec
msgid "The :readmode:`primary` read preference mode is not compatible with read preference modes that use :ref:`tag sets <replica-set-read-preference-tag-sets>`. If you specify a tag set with :readmode:`primary`, the driver will produce an error."
msgstr ""

#: ../source/reference/read-preference.txt:32
# 35e4da3c56434638b01f8ed293ef25f8
msgid "In most situations, operations read from the :term:`primary` member of the set. However, if the primary is unavailable, as is the case during :term:`failover` situations, operations read from secondary members."
msgstr ""

#: ../source/reference/read-preference.txt:37
# 572f067d60754250b428f5d282c7cef9
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client reads first from the primary, if available, and then from :term:`secondaries <secondary>` that match the specified tags. If no secondaries have matching tags, the read operation produces an error."
msgstr ""

#: ../source/reference/read-preference.txt:43
# b4c92b89681349629e54147914f01297
msgid "Since the application may receive data from a secondary, read operations using the :readmode:`primaryPreferred` mode may return stale data in some situations."
msgstr ""

#: ../source/reference/read-preference.txt:49
# c9bf1c4df8194899bc24532729fe4d2c
msgid ":program:`mongos` added full support for read preferences."
msgstr ""

#: ../source/reference/read-preference.txt:52
# 4961637a6dd04f979ef6c7fb1260a9e1
msgid "When connecting to a :program:`mongos` instance older than 2.2, using a client that supports read preference modes, :readmode:`primaryPreferred` will send queries to secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:58
# 1b764f7184c94d0dac60d9d2116dc223
msgid "Operations read *only* from the :term:`secondary` members of the set. If no secondaries are available, then this read operation produces an error or exception."
msgstr ""

#: ../source/reference/read-preference.txt:62
# c9d2e53000334fe3abcffb903013a12f
msgid "Most sets have at least one secondary, but there are situations where there may be no available secondary. For example, a set with a primary, a secondary, and an :term:`arbiter` may not have any secondaries if a member is in recovering state or unavailable."
msgstr ""

#: ../source/reference/read-preference.txt:67
# c113464864094106b88db6bf35ae6f1a
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find secondary members that match the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the read operation produces an error. [#capacity-planning]_"
msgstr ""

#: ../source/reference/read-preference.txt:75
# c2d281112dde4f50b2b505c15ae88920
msgid "Read operations using the :readmode:`secondary` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:79
# f49c95dadd6041599facdcdd947803d7
msgid "In most situations, operations read from :term:`secondary` members, but in situations where the set consists of a single :term:`primary` (and no other members), the read operation will use the set's primary."
msgstr ""

#: ../source/reference/read-preference.txt:84
# caff3949b29e40deb8787e4846bcd32c
msgid "When the read preference includes a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a secondary member that matches the specified tag set and directs reads to a random secondary from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`. If no secondaries have matching tags, the client ignores tags and reads from the primary."
msgstr ""

#: ../source/reference/read-preference.txt:91
# 1d8f33a4085a469984ad405ab6583734
msgid "Read operations using the :readmode:`secondaryPreferred` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:96
# f54d11d315bc4a648268ac2ebdc74fff
msgid "The driver reads from the *nearest* member of the :term:`set <replica set>` according to the :ref:`member selection <replica-set-read-preference-behavior-nearest>` process. Reads in the :readmode:`nearest` mode do not consider the member's *type*. Reads in :readmode:`nearest` mode may read from both primaries and secondaries."
msgstr ""

#: ../source/reference/read-preference.txt:103
# aef6c0b539664808977d0fb9b961ecf1
msgid "Set this mode to minimize the effect of network latency on read operations without preference for current or stale data."
msgstr ""

#: ../source/reference/read-preference.txt:106
# 4c342a4cd1874ab6bc99ff4d209b7ec8
msgid "If you specify a :ref:`tag set <replica-set-read-preference-tag-sets>`, the client attempts to find a replica set member that matches the specified tag set and directs reads to an arbitrary member from among the :ref:`nearest group <replica-set-read-preference-behavior-nearest>`."
msgstr ""

#: ../source/reference/read-preference.txt:112
# 30c04977f9dd452297c988f3a2325aec
msgid "Read operations using the :readmode:`nearest` mode may return stale data."
msgstr ""

#: ../source/reference/read-preference.txt:117
# fcd847bd40c24e31b015dc2f219f20d2
msgid "All operations read from a member of the nearest group of the replica set that matches the specified read preference mode. The :readmode:`nearest` mode prefers low latency reads over a member's :term:`primary` or :term:`secondary` status."
msgstr ""

#: ../source/reference/read-preference.txt:122
# 3734da0e06374557b1b47e7bb5b8ad5c
msgid "For :readmode:`nearest`, the client assembles a list of acceptable hosts based on tag set and then narrows that list to the host with the shortest ping time and all other members of the set that are within the \"local threshold,\" or acceptable latency. See :ref:`replica-set-read-preference-behavior-nearest` for more information."
msgstr ""

#: ../source/reference/read-preference.txt:129
# f1c7c7de37e24680bd45c9bd62b54dd2
msgid "If your set has more than one secondary, and you use the :readmode:`secondary` read preference mode, consider the following effect. If you have a :ref:`three member replica set <replica-set-three-members>` with a primary and two secondaries, and if one secondary becomes unavailable, all :readmode:`secondary` queries must target the remaining secondary. This will double the load on this secondary. Plan and provide capacity to support this as needed."
msgstr ""

#: ../source/reference/read-preference.txt:139
# 4ae9a68f78cb4a159d9ed5b0c21828ba
msgid "Use Cases"
msgstr ""

#: ../source/reference/read-preference.txt:141
# 0bfef953d3ac49918d56e6f7108f96ca
msgid "Depending on the requirements of an application, you can configure different applications to use different read preferences, or use different read preferences for different queries in the same application. Consider the following applications for different read preference strategies."
msgstr ""

#: ../source/reference/read-preference.txt:148
# 8d7f9898481a469596c0dfec955c3fd0
msgid "Maximize Consistency"
msgstr ""

#: ../source/reference/read-preference.txt:150
# 0ae3c1f7536e46afa50cdb83f7153361
msgid "To avoid *stale* reads under all circumstances, use :readmode:`primary`. This prevents all queries when the set has no :term:`primary`, which happens during elections, or when a majority of the replica set is not accessible."
msgstr ""

#: ../source/reference/read-preference.txt:156
# 7df5c01ad1a3428198ff1a4e6f2499eb
msgid "Maximize Availability"
msgstr ""

#: ../source/reference/read-preference.txt:158
# 7650042494204ca7a302822773324dc8
msgid "To permit read operations when possible, Use :readmode:`primaryPreferred`. When there's a primary you will get consistent reads, but if there is no primary you can still query :term:`secondaries <secondary>`."
msgstr ""

#: ../source/reference/read-preference.txt:164
# 3ad018a04a5b4758857390786ef5d2fe
msgid "Minimize Latency"
msgstr ""

#: ../source/reference/read-preference.txt:166
# 75d76c48cc244e4e9d9a08725323e724
msgid "To always read from a low-latency node, use :readmode:`nearest`. The driver or :program:`mongos` will read from the nearest member and those no more than 15 milliseconds [#secondary-acceptable-latency]_ further away than the nearest member."
msgstr ""

#: ../source/reference/read-preference.txt:171
# 8fe603bd1c734bb88326f8cbec893443
msgid ":readmode:`nearest` does *not* guarantee consistency. If the nearest member to your application server is a secondary with some replication lag, queries could return stale data. :readmode:`nearest` only reflects network distance and does not reflect I/O or CPU load."
msgstr ""

#: ../source/reference/read-preference.txt:176
# 684ce88ccf7049778b05dd5453243efe
msgid "This threshold is configurable. See :setting:`localThreshold` for :program:`mongos` or your driver documentation for the appropriate setting."
msgstr ""

#: ../source/reference/read-preference.txt:182
# b6a8200c3eea486c91220713c03d0161
msgid "Query From Geographically Distributed Members"
msgstr ""

#: ../source/reference/read-preference.txt:184
# 9232ea225f8c45c89156e16917fed0bd
msgid "If the members of a replica set are geographically distributed, you can create replica tags based that reflect the location of the instance and then configure your application to query the members nearby."
msgstr ""

#: ../source/reference/read-preference.txt:188
# 89f22f3ca2c64bd6acde28057eef59f2
msgid "For example, if members in \"east\" and \"west\" data centers are :ref:`tagged <replica-set-configuration-tag-sets>` ``{'dc': 'east'}`` and ``{'dc': 'west'}``, your application servers in the east data center can read from nearby members with the following read preference:"
msgstr ""

#: ../source/reference/read-preference.txt:198
# 3220fa818176478a925f462ff5f61e80
msgid "Although :readmode:`nearest` already favors members with low network latency, including the tag makes the choice more predictable."
msgstr ""

#: ../source/reference/read-preference.txt:202
# b1a1f2d1466d4be2b01ea23075472036
msgid "Reduce load on the primary"
msgstr ""

#: ../source/reference/read-preference.txt:204
# 61b0d81de1254a1ea3cd7cd2e48b924a
msgid "To shift read load from the primary, use mode :readmode:`secondary`. Although :readmode:`secondaryPreferred` is tempting for this use case, it carries some risk: if all secondaries are unavailable and your set has enough :term:`arbiters <arbiter>` to prevent the primary from stepping down, then the primary will receive all traffic from clients. If the primary is unable to handle this load, queries will compete with writes. For this reason, use :readmode:`secondary` to distribute read load to replica sets, not :readmode:`secondaryPreferred`."
msgstr ""

#: ../source/reference/read-preference.txt:214
# 0fbfcb931e944bfa8e53db4d7b6e9eca
msgid "Read Preferences for Database Commands"
msgstr ""

#: ../source/reference/read-preference.txt:216
# 2ce09e0cabc8427fbe150be2b84b8912
msgid "Because some :term:`database commands <database command>` read and return data from the database, all of the official drivers support full :ref:`read preference mode semantics <replica-set-read-preference-modes>` for the following commands:"
msgstr ""

#: ../source/reference/read-preference.txt:221
# d06e6be71ab04c978496d6567414efb8
msgid ":dbcommand:`group`"
msgstr ""

#: ../source/reference/read-preference.txt:222
# 879297055e2c49528c107d74aab8f895
msgid ":dbcommand:`mapReduce` [#inline-map-reduce]_"
msgstr ""

#: ../source/reference/read-preference.txt:223
# 4d687cc2e6d84fae91286c34fe905b56
msgid ":dbcommand:`aggregate` [#aggregation-out]_"
msgstr ""

#: ../source/reference/read-preference.txt:224
# 3dfdb0e8023f4af1a02e92505384185f
msgid ":dbcommand:`collStats`"
msgstr ""

#: ../source/reference/read-preference.txt:225
# 56726ddd918c4ca79f8d2e1959321799
msgid ":dbcommand:`dbStats`"
msgstr ""

#: ../source/reference/read-preference.txt:226
# 37e99cd4694f48c2b66201dd0b9da838
msgid ":dbcommand:`count`"
msgstr ""

#: ../source/reference/read-preference.txt:227
# 9c82e15958d74129b48c1ea64811b3d7
msgid ":dbcommand:`distinct`"
msgstr ""

#: ../source/reference/read-preference.txt:228
# 67bfc18dab15473c8066ea288bf5cb37
msgid ":dbcommand:`geoNear`"
msgstr ""

#: ../source/reference/read-preference.txt:229
# 23b458c4b72f4bb2a85d2b99745c54df
msgid ":dbcommand:`geoSearch`"
msgstr ""

#: ../source/reference/read-preference.txt:230
# ed278bcfacda48c1a37dcc505acb0e7a
msgid ":dbcommand:`geoWalk`"
msgstr ""

#: ../source/reference/read-preference.txt:231
# c67835476f614324bfcaa92057386045
msgid ":dbcommand:`parallelCollectionScan`"
msgstr ""

#: ../source/reference/read-preference.txt:233
# a04093c05bcb4f338934dd5d60c2d43c
msgid ":program:`mongos` adds support for routing commands to shards using read preferences. Previously :program:`mongos` sent all commands to shards' primaries."
msgstr ""

#: ../source/reference/read-preference.txt:238
# 624278f0664a4bee92d3ae36fab2a254
msgid "Only \"inline\" :dbcommand:`mapReduce` operations that do not write data support read preference, otherwise these operations must run on the :term:`primary` members."
msgstr ""

#: ../source/reference/read-preference.txt:243
# a02ccfd67ee045df83d32e420b0ecd86
msgid "Using the ``$out`` pipeline operator forces the aggregation pipeline to run on the primary."
msgstr ""

#: ../source/reference/read-preference.txt:11
#: ../source/reference/read-preference.txt:13
# 8d6eba2662cf481682807889b031242c
# ffe0ae0818ea49a7a48296e499209722
msgid "read preference"
msgstr ""

#: ../source/reference/read-preference.txt:11
# 8d6eba2662cf481682807889b031242c
msgid "semantics"
msgstr ""

#: ../source/reference/read-preference.txt:13
# ffe0ae0818ea49a7a48296e499209722
msgid "modes"
msgstr ""

