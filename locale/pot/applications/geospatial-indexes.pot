# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/geospatial-indexes.txt:3
# 0b0ea1e8d02748ecba5459841834f771
msgid "Geospatial Indexes and Queries"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:7
# e00f46daedc147e6800ee8f59934a6d4
msgid "MongoDB offers a number of indexes and query mechanisms to handle geospatial information. This section introduces MongoDB's geospatial features. For complete examples of geospatial queries in MongoDB, see :doc:`/administration/indexes-geo`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:13
# 5603fa185376413d990c21071294b9fc
msgid "Surfaces"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:15
# 60059c67fed140b191d225858a6caebb
msgid "Before storing your location data and writing queries, you must decide the type of surface to use to perform calculations. The type you choose affects how you store data, what type of index to build, and the syntax of your queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:20
# 323cf55756a94b348232d66b8754612d
msgid "MongoDB offers two surface types:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:23
# e7b87ea87edc421e93177ad1439c188a
msgid "Spherical"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:25
# b6957f9fb7654f73a58e452d20361f65
msgid "To calculate geometry over an Earth-like sphere, store your location data on a spherical surface and use :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:29
# 21fd6d691eed43e2a1fa7bb27966cea9
msgid "Store your location data as GeoJSON objects with this coordinate-axis order: **longitude, latitude**. The coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:34
# f59507da075649e48ae63dd8e26e7a9a
msgid "Flat"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:36
# 5765bcc49065435798ca8a7079d095cb
msgid "To calculate distances on a Euclidean plane, store your location data as legacy coordinate pairs and use a :doc:`2d </core/2d>` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:42
# 15cf8ba369514882b63b9aadf4d9a67c
msgid "Location Data"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:44
# 551df627e98a42e8bce8cad3dd41c463
msgid "If you choose spherical surface calculations, you store location data as either:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:48
# b2ab029020f34de58e77fdfc3c866381
msgid "GeoJSON Objects"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:50
# 374749af856b4bb6959ea5c2c3f07d51
msgid "Queries on :term:`GeoJSON` objects always calculate on a sphere. The default coordinate reference system for GeoJSON uses the :term:`WGS84` datum."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:54
# c1a043b2c7ad45da859e8a22f798d1dd
msgid "Support for GeoJSON storage and queries is new in version 2.4. Prior to version 2.4, all geospatial data used coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:59
# 6a2eca86311544078819a6229c5b6eac
msgid "MongoDB supports the following GeoJSON objects:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:61
# d8c3fd7699154c8e82c13012bc46a6e6
msgid "Point"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:63
# 8b2068cc1ed949ec9cba9863ba950941
msgid "LineString"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:65
# 8304750d1f7f43caa85ea088be6a91ab
msgid "Polygon"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:68
# df2597b9d1234691a934da589d56b199
msgid "Legacy Coordinate Pairs"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:70
# 73a06df8697e4ce9bc1f541bde3df508
msgid "MongoDB supports spherical surface calculations on :term:`legacy coordinate pairs` using a ``2dsphere`` index by converting the data to the GeoJSON Point type."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:74
# 5147c41b325e4167bd44de32f0d41bed
msgid "If you choose flat surface calculations, and use a ``2d`` index you can store data only as :term:`legacy coordinate pairs`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:78
# 04061916dfbc4bd9a6a993a5c2109108
msgid "Query Operations"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:80
# 1cc48c50c4784f6ca189102c40d4907e
msgid "MongoDB's geospatial query operators let you query for:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:83
# 6b154c6dd7e14168bbe86620cac5732a
msgid "Inclusion"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:85
# a7fdc98a31ff4da897184bbdf360936f
msgid "MongoDB can query for locations contained entirely within a specified polygon. Inclusion queries use the :query:`$geoWithin` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:89
# 1eb46d93a7f6421ba9c37857755edbeb
msgid "Both ``2d`` and ``2dsphere`` indexes can support inclusion queries. MongoDB does not require an index for inclusion queries after 2.2.3; however, these indexes will improve query performance."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:94
# e73c1ca5f0784432b0ad81f464ecbcdf
msgid "Intersection"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:96
# 4da8ff17cbf94463bbbd7369d4c31495
msgid "MongoDB can query for locations that intersect with a specified geometry. These queries apply only to data on a spherical surface. These queries use the :query:`$geoIntersects` operator."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:100
# b0953bc2747d45fba098842eddcaa3bb
msgid "Only ``2dsphere`` indexes support intersection."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:103
# f5ce10291b064eaf85fed0b3064eb489
msgid "Proximity"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:105
# 60961290c1e84d9cb097d20d3f84c007
msgid "MongoDB can query for the points nearest to another point. Proximity queries use the :query:`$near` operator. The :query:`$near` operator requires a ``2d`` or ``2dsphere`` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:112
# 2757eace0f2c4848929ae8e1a9019ea9
msgid "Geospatial Indexes"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:114
# 2866e860b21246c9b5e04aada090e47b
msgid "MongoDB provides the following geospatial index types to support the geospatial queries."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:118
# 758c30bf6a3b4b869ee93737006fcf97
msgid "``2dsphere``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:120
# d7334646414d48f281b0632f86362e15
msgid ":doc:`2dsphere </core/2dsphere>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:122
# f0cc3db74b1f4d99afb71e891fb247bc
msgid "Calculations on a sphere"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:124
# 6cc8aca3bdfb428996f868521a4f168c
msgid "GeoJSON objects and include backwards compatibility for legacy coordinate pairs."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:127
# 6fbfaabadd0c49eba85afe66926bd535
msgid "A compound index with scalar index fields (i.e. ascending or descending) as a prefix or suffix of the ``2dsphere`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:130
# 4bac3c1fb1774de097e7208f76057d9f
msgid "``2dsphere`` indexes are not available before version 2.4."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:133
# d19bde799a37473cb237d879a356ff01
msgid ":doc:`/tutorial/query-a-2dsphere-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:136
# 34eb3979572d48b19d350ebe53c484b6
msgid "``2d``"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:138
# d35fa8222a5543c88758a9014b9fbdd6
msgid ":doc:`2d </core/2d>` indexes support:"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:140
# 81268dd14c1548dd8fa66f3231021489
msgid "Calculations using flat geometry"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:142
# c701c9f4db634cde9fd352c86b4023c2
msgid "Legacy coordinate pairs (i.e., geospatial points on a flat coordinate system)"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:145
# 8787d8ac13694b88b807a7236801ad44
msgid "A compound index with only one additional field, as a suffix of the ``2d`` index field"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:148
# cf6138d2944948128a99b77a1ca54fee
msgid ":doc:`/tutorial/query-a-2d-index`"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:151
# 66e0cf7c856c4c3c9ce235405b2cdebf
msgid "Geospatial Indexes and Sharding"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:153
# 1c8acf7ffd3242c58d3f595331fb4680
msgid "You *cannot* use a geospatial index as the :term:`shard key` index."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:155
# 77ab0908d7f74d848402553b2087ca17
msgid "You can create and maintain a geospatial index on a sharded collection if using fields other than shard key."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:158
# 6907a38d0a654f77b085c07ed049a38a
msgid "Queries using :query:`$near` are not supported for sharded collections. Use :dbcommand:`geoNear` instead. You also can query for geospatial data using :query:`$geoWithin`."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:163
# c0015bcf53ad4ca0872f25e513689dee
msgid "Additional Resources"
msgstr ""

#: ../source/applications/geospatial-indexes.txt:165
# 71b0234557c840daab5cae9213dde8a8
msgid "The following pages provide complete documentation for geospatial indexes and queries:"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:7
# b700bd2ac8294111825599744195d1b1
msgid ":doc:`/core/2dsphere`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:4
# 905081b5b27f42c996384fe70e6a6a73
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. The index supports data stored as both GeoJSON objects and as legacy coordinate pairs."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:12
# 958c1faee666418984cbaf53c74db51f
msgid ":doc:`/core/2d`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:10
# de398e20b78a4fcdb88290cd84f2d47f
msgid "The ``2d`` index supports data stored as legacy coordinate pairs and is intended for use in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:18
# 6c4a52d64f234de8985fcf3aa986b587
msgid ":doc:`/core/geohaystack`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:15
# 0d3fe2561e204ffc860c714d8817dc53
msgid "A haystack index is a special index optimized to return results over small areas. For queries that use spherical geometry, a ``2dsphere`` index is a better option than a haystack index."
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:23
# 7f85e290f2fe41febc83f178b8685640
msgid ":doc:`/core/geospatial-indexes`"
msgstr ""

#: ../source/includes/toc/dfn-list-indexes-concepts-geo.rst:21
# 752f41e4479144c8a0daeefef84b918b
msgid "Provides a more in-depth explanation of the internals of geospatial indexes. This material is not necessary for normal operations but may be useful for troubleshooting and for further understanding."
msgstr ""

#: ../source/applications/geospatial-indexes.txt:172
# 82b994843a7545d88f83010343665689
msgid ":ref:`geospatial-query-compatibility-chart`"
msgstr ""

