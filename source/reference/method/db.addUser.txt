============
db.addUser()
============

.. default-domain:: mongodb

.. deprecated:: 2.6
   Use :method:`db.createUser()` and :method:`db.updateUser()` instead
   of :method:`db.addUser()` to add users to MongoDB.

In 2.6, MongoDB introduced a new model for user
credentials and privileges, as described in
:doc:`/core/security-introduction`. To use :method:`db.addUser()` on MongoDB
2.4, see :v2.4:`db.addUser() in the version 2.4 of the MongoDB Manual
</reference/method/db.addUser>`.

Definition
----------

.. method:: db.addUser(document)

   Adds a new user on the database where you run the method. The
   :method:`db.addUser()` method takes a user document as its
   argument:

   .. code-block:: javascript

      db.addUser(<user document>)

   Specify a document that resembles the following as an argument to
   :method:`db.addUser()`:

   .. code-block:: javascript

      { user: "<name>",
        pwd: "<cleartext password>",
        customData: { <any information> },
        roles: [
          { role: "<role>", db: "<database>" } | "<role>",
          ...
        ],
        writeConcern: { <write concern> }
      }

   The :method:`db.addUser()` user document has the following fields:

   .. include:: /reference/method/db.addUser-param.rst

   Users created on the ``$external`` database should have credentials
   stored externally to MongoDB, as, for example, with :doc:`MongoDB
   Enterprise installations that use Kerberos
   </tutorial/control-access-to-mongodb-with-kerberos-authentication>`.

   .. |local-cmd-name| replace:: :method:`db.addUser()`
   .. include:: /includes/fact-roles-array-contents.rst

Considerations
--------------

The :method:`db.addUser()` method returns a *duplicate user* error if
the user exists.

When interacting with 2.6 and later MongoDB instances,
:method:`db.addUser()` sends unencrypted passwords. To encrypt
the password in transit use :doc:`SSL </tutorial/configure-ssl>`.

In the 2.6 version of the shell, :method:`db.addUser()` is backwards
compatible with both the :v2.4:`2.4 version of db.addUser()
</reference/method/db.addUser>` and the :v2.2:`2.2 version of db.addUser()
</reference/method/db.addUser>`. In 2.6, for backwards compatibility
:method:`db.addUser()` creates users that approximate the privileges
available in previous versions of MongoDB.

Example
-------

The following :method:`db.addUser()` method creates a user ``Carlos`` on the
database where the command runs. The command gives ``Carlos`` the
``clusterAdmin`` and ``readAnyDatabase`` roles on the ``admin`` database
and the ``readWrite`` role on the current database:

.. code-block:: javascript

   { user: "Carlos",
     pwd: "cleartext password",
     customData: { employeeId: 12345 },
     roles: [
       { role: "clusterAdmin", db: "admin" },
       { role: "readAnyDatabase", db: "admin" },
       "readWrite"
     ],
     writeConcern: { w: "majority" , wtimeout: 5000 }
   }
