=====
$push
=====

.. default-domain:: mongodb

.. update:: $push

   The :update:`$push` operator appends a specified value to an array.

   .. code-block:: javascript

      db.collection.update( <query>,
                            { $push: { <field>: <value> } }
                         )

   The following example appends ``89`` to the ``scores`` array for the
   first document where the ``_id`` field equals ``1``:

   .. code-block:: javascript

      db.students.update(
                          { _id: 1 },
                          { $push: { scores: 89 } }
                        )

   .. note::

      - If the field is absent in the document to update,
        :update:`$push` adds the array field with the value as its
        element.

      - If the field is **not** an array, the operation will fail.

      - If the value is an array, :update:`$push` appends the whole
        array as a *single* element. To add each element of the value
        separately, use :update:`$push` with the :update:`$each`
        modifier.

        .. versionchanged:: 2.4
           MongoDB adds support for the :update:`$each` modifier to
           the :update:`$push` operator. Before 2.4, use
           :update:`$pushAll` for similar functionality.

        .. include:: /includes/example-push-each.rst

.. _push-modifiers:

Modifiers
---------

.. versionadded:: 2.4

You can use the :update:`$push` operator with the following modifiers:

- :update:`$each` appends multiple values to the array field,

  .. versionchanged:: 2.6

     When used in conjunction with the other modifiers, the
     :update:`$each` modifier no longer needs to be first.

- :update:`$slice`, which is only available when used with
  :update:`$each`, limits the number of array elements,

- :update:`$sort`, which is only available when used with
  :update:`$each`, orders elements of the array, and

  .. versionchanged:: 2.6

     In previous versions, :update:`$sort` is only available
     when used with both :update:`$each` and :update:`$slice`.

- :update:`$position`, which is only available when used with
  :update:`$each`, specifies the location in the array at which to
  insert the new elements. Without the :update:`$position` modifier,
  the :update:`$push` appends the elements to the end of the array.

  .. versionadded:: 2.6

The processing of the :update:`push` operation with modifiers occur
in the following order, regardless of the order in which the modifiers
appear:

#. Update array to add elements in the correct position.

#. Apply sort, if specified.

#. Slice the array, if specified.

#. Store the array.

Examples
--------

Use ``$push`` Operator with Multiple Modifiers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/example-push-with-multiple-modifiers.rst
