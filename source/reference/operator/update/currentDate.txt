============
$currentDate
============

.. default-domain:: mongodb

.. update:: $currentDate

   The :update:`$currentDate` operator sets the value of a field to
   the current date, either as a :ref:`Date <document-bson-type-date>`
   or a :ref:`timestamp <document-bson-type-timestamp>`. The default
   type is :ref:`date <document-bson-type-date>`.

   The :update:`$currentDate` operator can take as its operand either

   - a boolean ``true`` which creates a Date, or

   - a document which explicitly specifies the type, i.e. ``{ $type:
     "timestamp" }`` or ``{ $type: "date" }``. The operator is
     *case-sensitive* and accepts only the lowercase ``"timestamp"`` or
     the lowercase ``"date"``.

Example
-------

.. TODO may want to break this into two separate examples

Consider the following document in the ``users`` collection:

.. code-block:: javascript

   { _id: 1, status: "a", lastModified: ISODate("2013-10-02T01:11:18.965Z") }

The following updates the ``lastModified`` field to the current
date and the ``lastModifiedTS`` field to the current timestamp as
well as setting the ``status`` field to ``"D"``.

.. code-block:: javascript

   db.users.update( { _id: 1 },
                    {
                      $currentDate: {
                                      lastModified: true,
                                      lastModifiedTS: { $type: "timestamp" }
                                    },
                      $set: { status: "D" }
                    }
                  )

Following this operation, the updated document would resemble:

.. code-block:: javascript

   {
     _id: 1,
     status: "D",
     lastModified: ISODate("2013-10-02T01:11:53.976Z"),
     lastModifiedTS: Timestamp(1380676313, 1)
   }
