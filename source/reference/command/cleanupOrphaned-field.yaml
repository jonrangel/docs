object:
  name: cleanupOrphaned
  type: command
field:
  optional: false
  type: field
name: cleanupOrphaned
type: string
position: 1
description: |
  The namespace, i.e. both the database and the collection name, of the
  sharded collection for which to clean the orphaned data.
---
object:
  name: cleanupOrphaned
  type: command
field:
  optional: true
  type: field
name: startingAtKey
type: document
position: 2
description: |
  The :term:`shard key` value that determines the lower bound of the
  cleanup range. The default value is ``MinKey``.

  If the range that contains the specified ``startingAtKey`` value
  belongs to a chunk owned by the shard, :dbcommand:`cleanupOrphaned`
  continues to examine the next ranges until it finds a range not owned
  by the shard. See :ref:`cleanupOrphaned-determine-range` for details.
---
object:
  name: cleanupOrphaned
  type: command
field:
  optional: true
  type: field
name: secondaryThrottle
type: boolean
position: 3
description: |
  If ``true``, each delete operation must be replicated to another
  secondary before the cleanup operation proceeds further. If
  ``false``, do not wait for replication. Defaults to ``false``.

  Independent of the ``secondaryThrottle`` setting, after the final
  delete, :dbcommand:`cleanupOrphaned` waits for all deletes to
  replicate to a majority of replica set members before returning.
...
