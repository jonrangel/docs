================
Insert Documents
================

.. default-domain:: mongodb

In MongoDB, the :method:`db.collection.insert()` method adds new
documents into a collection. In addition, both the
:method:`db.collection.update()` method and the
:method:`db.collection.save()` method can also add new documents
through an operation called an *upsert*. An *upsert* is an operation
that performs either an update of an existing document or an insert of
a new document if the document to modify does not exist.

This tutorial provides examples of insert operations using each of the
three methods in the :program:`mongo` shell.

Insert a Document with ``insert()`` Method
------------------------------------------

The following statement inserts a document with three fields into the
collection ``inventory``:

.. code-block:: javascript

   db.inventory.insert( { _id: 10, type: "misc", item: "card", qty: 15 } )

In the example, the document has a user-specified ``_id`` field value
of ``10``. The value must be unique within the ``inventory`` collection.

For more examples, see :method:`~db.collection.insert()`.

Insert a Document with ``update()`` Method
------------------------------------------

Call the :method:`~db.collection.update()` method with the ``upsert``
flag to create a new document if no document matches the update's
query criteria. [#previous-versions-upsert]_

The following example creates a new document if no document in the
``inventory`` collection contains ``{ type: "books", item : "journal"
}``:

.. code-block:: javascript

   db.inventory.update(
                        { type: "book", item : "journal" },
                        { $set : { qty: 10 } },
                        { upsert : true }
                      )

MongoDB adds the ``_id`` field and assigns as its value a unique
ObjectId. The new document includes the ``item`` and ``type`` fields
from the ``<query>`` criteria and the ``qty`` field from the
``<update>`` parameter.

.. code-block:: javascript

   { "_id" : ObjectId("51e8636953dbe31d5f34a38a"), "item" : "journal", "qty" : 10, "type" : "book" }

For more examples, see :method:`~db.collection.update()`.

.. [#previous-versions-upsert]
   .. include:: /includes/fact-upsert-multi-options.rst

Insert a Document with ``save()`` Method
----------------------------------------

To insert a document with the :method:`~db.collection.save()` method,
pass the method a document that does not contain the ``_id`` field or a
document that contains an ``_id`` field that does not exist in the
collection.

The following example creates a new document in the ``inventory``
collection:

.. code-block:: javascript

   db.inventory.save( { type: "book", item: "notebook", qty: 40 } )

MongoDB adds the ``_id`` field and assigns as its value a unique
ObjectId.

.. code-block:: javascript

   { "_id" : ObjectId("51e866e48737f72b32ae4fbc"), "type" : "book", "item" : "notebook", "qty" : 40 }

For more examples, see :method:`~db.collection.save()`.
